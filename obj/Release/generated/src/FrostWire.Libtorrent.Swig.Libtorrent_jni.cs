using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace FrostWire.Libtorrent.Swig {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']"
	[global::Android.Runtime.Register ("com/frostwire/jlibtorrent/swig/libtorrent_jni", DoNotGenerateAcw=true)]
	public partial class Libtorrent_jni : global::Java.Lang.Object {

		internal    new     static  readonly    JniPeerMembers  _members    = new XAPeerMembers ("com/frostwire/jlibtorrent/swig/libtorrent_jni", typeof (Libtorrent_jni));
		internal static new IntPtr class_ref {
			get {
				return _members.JniPeerType.PeerReference.Handle;
			}
		}

		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected Libtorrent_jni (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer) {}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/constructor[@name='libtorrent_jni' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe Libtorrent_jni ()
			: base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='LIBTORRENT_REVISION_get' and count(parameter)=0]"
		[Register ("LIBTORRENT_REVISION_get", "()Ljava/lang/String;", "")]
		public static unsafe string LIBTORRENT_REVISION_get ()
		{
			const string __id = "LIBTORRENT_REVISION_get.()Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='LIBTORRENT_VERSION_MAJOR_get' and count(parameter)=0]"
		[Register ("LIBTORRENT_VERSION_MAJOR_get", "()I", "")]
		public static unsafe int LIBTORRENT_VERSION_MAJOR_get ()
		{
			const string __id = "LIBTORRENT_VERSION_MAJOR_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='LIBTORRENT_VERSION_MINOR_get' and count(parameter)=0]"
		[Register ("LIBTORRENT_VERSION_MINOR_get", "()I", "")]
		public static unsafe int LIBTORRENT_VERSION_MINOR_get ()
		{
			const string __id = "LIBTORRENT_VERSION_MINOR_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='LIBTORRENT_VERSION_NUM_get' and count(parameter)=0]"
		[Register ("LIBTORRENT_VERSION_NUM_get", "()I", "")]
		public static unsafe int LIBTORRENT_VERSION_NUM_get ()
		{
			const string __id = "LIBTORRENT_VERSION_NUM_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='LIBTORRENT_VERSION_TINY_get' and count(parameter)=0]"
		[Register ("LIBTORRENT_VERSION_TINY_get", "()I", "")]
		public static unsafe int LIBTORRENT_VERSION_TINY_get ()
		{
			const string __id = "LIBTORRENT_VERSION_TINY_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='LIBTORRENT_VERSION_get' and count(parameter)=0]"
		[Register ("LIBTORRENT_VERSION_get", "()Ljava/lang/String;", "")]
		public static unsafe string LIBTORRENT_VERSION_get ()
		{
			const string __id = "LIBTORRENT_VERSION_get.()Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='SwigDirector_add_files_listener_pred' and count(parameter)=2 and parameter[1][@type='com.frostwire.jlibtorrent.swig.add_files_listener'] and parameter[2][@type='java.lang.String']]"
		[Register ("SwigDirector_add_files_listener_pred", "(Lcom/frostwire/jlibtorrent/swig/add_files_listener;Ljava/lang/String;)Z", "")]
		public static unsafe bool SwigDirector_add_files_listener_pred (global::FrostWire.Libtorrent.Swig.Add_files_listener jself, string p)
		{
			const string __id = "SwigDirector_add_files_listener_pred.(Lcom/frostwire/jlibtorrent/swig/add_files_listener;Ljava/lang/String;)Z";
			IntPtr native_p = JNIEnv.NewString (p);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((jself == null) ? IntPtr.Zero : ((global::Java.Lang.Object) jself).Handle);
				__args [1] = new JniArgumentValue (native_p);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='SwigDirector_alert_notify_callback_on_alert' and count(parameter)=1 and parameter[1][@type='com.frostwire.jlibtorrent.swig.alert_notify_callback']]"
		[Register ("SwigDirector_alert_notify_callback_on_alert", "(Lcom/frostwire/jlibtorrent/swig/alert_notify_callback;)V", "")]
		public static unsafe void SwigDirector_alert_notify_callback_on_alert (global::FrostWire.Libtorrent.Swig.Alert_notify_callback jself)
		{
			const string __id = "SwigDirector_alert_notify_callback_on_alert.(Lcom/frostwire/jlibtorrent/swig/alert_notify_callback;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((jself == null) ? IntPtr.Zero : ((global::Java.Lang.Object) jself).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='SwigDirector_posix_wrapper_mkdir' and count(parameter)=3 and parameter[1][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int']]"
		[Register ("SwigDirector_posix_wrapper_mkdir", "(Lcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;I)I", "")]
		public static unsafe int SwigDirector_posix_wrapper_mkdir (global::FrostWire.Libtorrent.Swig.Posix_wrapper jself, string path, int mode)
		{
			const string __id = "SwigDirector_posix_wrapper_mkdir.(Lcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;I)I";
			IntPtr native_path = JNIEnv.NewString (path);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((jself == null) ? IntPtr.Zero : ((global::Java.Lang.Object) jself).Handle);
				__args [1] = new JniArgumentValue (native_path);
				__args [2] = new JniArgumentValue (mode);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='SwigDirector_posix_wrapper_open' and count(parameter)=4 and parameter[1][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("SwigDirector_posix_wrapper_open", "(Lcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;II)I", "")]
		public static unsafe int SwigDirector_posix_wrapper_open (global::FrostWire.Libtorrent.Swig.Posix_wrapper jself, string path, int flags, int mode)
		{
			const string __id = "SwigDirector_posix_wrapper_open.(Lcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;II)I";
			IntPtr native_path = JNIEnv.NewString (path);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue ((jself == null) ? IntPtr.Zero : ((global::Java.Lang.Object) jself).Handle);
				__args [1] = new JniArgumentValue (native_path);
				__args [2] = new JniArgumentValue (flags);
				__args [3] = new JniArgumentValue (mode);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='SwigDirector_posix_wrapper_remove' and count(parameter)=2 and parameter[1][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[2][@type='java.lang.String']]"
		[Register ("SwigDirector_posix_wrapper_remove", "(Lcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;)I", "")]
		public static unsafe int SwigDirector_posix_wrapper_remove (global::FrostWire.Libtorrent.Swig.Posix_wrapper jself, string path)
		{
			const string __id = "SwigDirector_posix_wrapper_remove.(Lcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;)I";
			IntPtr native_path = JNIEnv.NewString (path);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((jself == null) ? IntPtr.Zero : ((global::Java.Lang.Object) jself).Handle);
				__args [1] = new JniArgumentValue (native_path);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='SwigDirector_posix_wrapper_rename' and count(parameter)=3 and parameter[1][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
		[Register ("SwigDirector_posix_wrapper_rename", "(Lcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;Ljava/lang/String;)I", "")]
		public static unsafe int SwigDirector_posix_wrapper_rename (global::FrostWire.Libtorrent.Swig.Posix_wrapper jself, string oldpath, string newpath)
		{
			const string __id = "SwigDirector_posix_wrapper_rename.(Lcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;Ljava/lang/String;)I";
			IntPtr native_oldpath = JNIEnv.NewString (oldpath);
			IntPtr native_newpath = JNIEnv.NewString (newpath);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((jself == null) ? IntPtr.Zero : ((global::Java.Lang.Object) jself).Handle);
				__args [1] = new JniArgumentValue (native_oldpath);
				__args [2] = new JniArgumentValue (native_newpath);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_oldpath);
				JNIEnv.DeleteLocalRef (native_newpath);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='SwigDirector_posix_wrapper_stat' and count(parameter)=3 and parameter[1][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='long']]"
		[Register ("SwigDirector_posix_wrapper_stat", "(Lcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;J)I", "")]
		public static unsafe int SwigDirector_posix_wrapper_stat (global::FrostWire.Libtorrent.Swig.Posix_wrapper jself, string path, long buf)
		{
			const string __id = "SwigDirector_posix_wrapper_stat.(Lcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;J)I";
			IntPtr native_path = JNIEnv.NewString (path);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((jself == null) ? IntPtr.Zero : ((global::Java.Lang.Object) jself).Handle);
				__args [1] = new JniArgumentValue (native_path);
				__args [2] = new JniArgumentValue (buf);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='SwigDirector_set_piece_hashes_listener_progress' and count(parameter)=2 and parameter[1][@type='com.frostwire.jlibtorrent.swig.set_piece_hashes_listener'] and parameter[2][@type='int']]"
		[Register ("SwigDirector_set_piece_hashes_listener_progress", "(Lcom/frostwire/jlibtorrent/swig/set_piece_hashes_listener;I)V", "")]
		public static unsafe void SwigDirector_set_piece_hashes_listener_progress (global::FrostWire.Libtorrent.Swig.Set_piece_hashes_listener jself, int i)
		{
			const string __id = "SwigDirector_set_piece_hashes_listener_progress.(Lcom/frostwire/jlibtorrent/swig/set_piece_hashes_listener;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((jself == null) ? IntPtr.Zero : ((global::Java.Lang.Object) jself).Handle);
				__args [1] = new JniArgumentValue (i);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='SwigDirector_swig_plugin_on_dht_request' and count(parameter)=5 and parameter[1][@type='com.frostwire.jlibtorrent.swig.swig_plugin'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='long'] and parameter[5][@type='long']]"
		[Register ("SwigDirector_swig_plugin_on_dht_request", "(Lcom/frostwire/jlibtorrent/swig/swig_plugin;JJJJ)Z", "")]
		public static unsafe bool SwigDirector_swig_plugin_on_dht_request (global::FrostWire.Libtorrent.Swig.Swig_plugin jself, long query, long source, long message, long response)
		{
			const string __id = "SwigDirector_swig_plugin_on_dht_request.(Lcom/frostwire/jlibtorrent/swig/swig_plugin;JJJJ)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue ((jself == null) ? IntPtr.Zero : ((global::Java.Lang.Object) jself).Handle);
				__args [1] = new JniArgumentValue (query);
				__args [2] = new JniArgumentValue (source);
				__args [3] = new JniArgumentValue (message);
				__args [4] = new JniArgumentValue (response);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='accepted_get' and count(parameter)=0]"
		[Register ("accepted_get", "()I", "")]
		public static unsafe int Accepted_get ()
		{
			const string __id = "accepted_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_files__SWIG_0' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.create_flags_t']]"
		[Register ("add_files__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/create_flags_t;)V", "")]
		public static unsafe void Add_files__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, string p2, long p3, global::FrostWire.Libtorrent.Swig.Create_flags_t p4)
		{
			const string __id = "add_files__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/create_flags_t;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_files__SWIG_1' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='java.lang.String']]"
		[Register ("add_files__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;)V", "")]
		public static unsafe void Add_files__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, string p2)
		{
			const string __id = "add_files__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_files_ex' and count(parameter)=7 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.add_files_listener'] and parameter[6][@type='long'] and parameter[7][@type='com.frostwire.jlibtorrent.swig.create_flags_t']]"
		[Register ("add_files_ex", "(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/add_files_listener;JLcom/frostwire/jlibtorrent/swig/create_flags_t;)V", "")]
		public static unsafe void Add_files_ex (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, string p2, long p3, global::FrostWire.Libtorrent.Swig.Add_files_listener p4, long p5, global::FrostWire.Libtorrent.Swig.Create_flags_t p6)
		{
			const string __id = "add_files_ex.(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/add_files_listener;JLcom/frostwire/jlibtorrent/swig/create_flags_t;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue ((p6 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p6).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_files_listener_change_ownership' and count(parameter)=3 and parameter[1][@type='com.frostwire.jlibtorrent.swig.add_files_listener'] and parameter[2][@type='long'] and parameter[3][@type='boolean']]"
		[Register ("add_files_listener_change_ownership", "(Lcom/frostwire/jlibtorrent/swig/add_files_listener;JZ)V", "")]
		public static unsafe void Add_files_listener_change_ownership (global::FrostWire.Libtorrent.Swig.Add_files_listener p0, long p1, bool p2)
		{
			const string __id = "add_files_listener_change_ownership.(Lcom/frostwire/jlibtorrent/swig/add_files_listener;JZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_files_listener_director_connect' and count(parameter)=4 and parameter[1][@type='com.frostwire.jlibtorrent.swig.add_files_listener'] and parameter[2][@type='long'] and parameter[3][@type='boolean'] and parameter[4][@type='boolean']]"
		[Register ("add_files_listener_director_connect", "(Lcom/frostwire/jlibtorrent/swig/add_files_listener;JZZ)V", "")]
		public static unsafe void Add_files_listener_director_connect (global::FrostWire.Libtorrent.Swig.Add_files_listener p0, long p1, bool p2, bool p3)
		{
			const string __id = "add_files_listener_director_connect.(Lcom/frostwire/jlibtorrent/swig/add_files_listener;JZZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_files_listener_pred' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_files_listener'] and parameter[3][@type='java.lang.String']]"
		[Register ("add_files_listener_pred", "(JLcom/frostwire/jlibtorrent/swig/add_files_listener;Ljava/lang/String;)Z", "")]
		public static unsafe bool Add_files_listener_pred (long p0, global::FrostWire.Libtorrent.Swig.Add_files_listener p1, string p2)
		{
			const string __id = "add_files_listener_pred.(JLcom/frostwire/jlibtorrent/swig/add_files_listener;Ljava/lang/String;)Z";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_files_listener_predSwigExplicitadd_files_listener' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_files_listener'] and parameter[3][@type='java.lang.String']]"
		[Register ("add_files_listener_predSwigExplicitadd_files_listener", "(JLcom/frostwire/jlibtorrent/swig/add_files_listener;Ljava/lang/String;)Z", "")]
		public static unsafe bool Add_files_listener_predSwigExplicitadd_files_listener (long p0, global::FrostWire.Libtorrent.Swig.Add_files_listener p1, string p2)
		{
			const string __id = "add_files_listener_predSwigExplicitadd_files_listener.(JLcom/frostwire/jlibtorrent/swig/add_files_listener;Ljava/lang/String;)Z";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_piece_flags_t_all' and count(parameter)=0]"
		[Register ("add_piece_flags_t_all", "()J", "")]
		public static unsafe long Add_piece_flags_t_all ()
		{
			const string __id = "add_piece_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_piece_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_piece_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.add_piece_flags_t']]"
		[Register ("add_piece_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)J", "")]
		public static unsafe long Add_piece_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Add_piece_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Add_piece_flags_t p3)
		{
			const string __id = "add_piece_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_piece_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_piece_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.add_piece_flags_t']]"
		[Register ("add_piece_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)Z", "")]
		public static unsafe bool Add_piece_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Add_piece_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Add_piece_flags_t p3)
		{
			const string __id = "add_piece_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_piece_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_piece_flags_t']]"
		[Register ("add_piece_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)J", "")]
		public static unsafe long Add_piece_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Add_piece_flags_t p1)
		{
			const string __id = "add_piece_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_piece_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_piece_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.add_piece_flags_t']]"
		[Register ("add_piece_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)Z", "")]
		public static unsafe bool Add_piece_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Add_piece_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Add_piece_flags_t p3)
		{
			const string __id = "add_piece_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_piece_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_piece_flags_t']]"
		[Register ("add_piece_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)Z", "")]
		public static unsafe bool Add_piece_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Add_piece_flags_t p1)
		{
			const string __id = "add_piece_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_piece_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_piece_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.add_piece_flags_t']]"
		[Register ("add_piece_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)J", "")]
		public static unsafe long Add_piece_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Add_piece_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Add_piece_flags_t p3)
		{
			const string __id = "add_piece_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_piece_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_piece_flags_t']]"
		[Register ("add_piece_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)I", "")]
		public static unsafe int Add_piece_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Add_piece_flags_t p1)
		{
			const string __id = "add_piece_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_piece_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_piece_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.add_piece_flags_t']]"
		[Register ("add_piece_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)J", "")]
		public static unsafe long Add_piece_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Add_piece_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Add_piece_flags_t p3)
		{
			const string __id = "add_piece_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("add_torrent_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Add_torrent_alert_SWIGUpcast (long p0)
		{
			const string __id = "add_torrent_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_alert_alert_type_get' and count(parameter)=0]"
		[Register ("add_torrent_alert_alert_type_get", "()I", "")]
		public static unsafe int Add_torrent_alert_alert_type_get ()
		{
			const string __id = "add_torrent_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_alert']]"
		[Register ("add_torrent_alert_category", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;)J", "")]
		public static unsafe long Add_torrent_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_alert p1)
		{
			const string __id = "add_torrent_alert_category.(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_alert']]"
		[Register ("add_torrent_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;)J", "")]
		public static unsafe long Add_torrent_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_alert p1)
		{
			const string __id = "add_torrent_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_alert_error_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("add_torrent_alert_error_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;JLcom/frostwire/jlibtorrent/swig/error_code;)V", "")]
		public static unsafe void Add_torrent_alert_error_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "add_torrent_alert_error_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;JLcom/frostwire/jlibtorrent/swig/error_code;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_alert']]"
		[Register ("add_torrent_alert_message", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;)Ljava/lang/String;", "")]
		public static unsafe string Add_torrent_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_alert p1)
		{
			const string __id = "add_torrent_alert_message.(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_alert_params_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_alert']]"
		[Register ("add_torrent_alert_params_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;)J", "")]
		public static unsafe long Add_torrent_alert_params_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_alert p1)
		{
			const string __id = "add_torrent_alert_params_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_alert_params_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_alert_params_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)V", "")]
		public static unsafe void Add_torrent_alert_params_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Add_torrent_params p3)
		{
			const string __id = "add_torrent_alert_params_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_alert_priority_get' and count(parameter)=0]"
		[Register ("add_torrent_alert_priority_get", "()I", "")]
		public static unsafe int Add_torrent_alert_priority_get ()
		{
			const string __id = "add_torrent_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_alert_static_category_get' and count(parameter)=0]"
		[Register ("add_torrent_alert_static_category_get", "()J", "")]
		public static unsafe long Add_torrent_alert_static_category_get ()
		{
			const string __id = "add_torrent_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_alert']]"
		[Register ("add_torrent_alert_type", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;)I", "")]
		public static unsafe int Add_torrent_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_alert p1)
		{
			const string __id = "add_torrent_alert_type.(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_alert']]"
		[Register ("add_torrent_alert_what", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;)Ljava/lang/String;", "")]
		public static unsafe string Add_torrent_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_alert p1)
		{
			const string __id = "add_torrent_alert_what.(JLcom/frostwire/jlibtorrent/swig/add_torrent_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_active_time_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_active_time_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I", "")]
		public static unsafe int Add_torrent_params_active_time_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_active_time_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_active_time_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='int']]"
		[Register ("add_torrent_params_active_time_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V", "")]
		public static unsafe void Add_torrent_params_active_time_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, int p2)
		{
			const string __id = "add_torrent_params_active_time_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_added_time_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_added_time_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_added_time_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_added_time_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_added_time_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long']]"
		[Register ("add_torrent_params_added_time_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;J)V", "")]
		public static unsafe void Add_torrent_params_added_time_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2)
		{
			const string __id = "add_torrent_params_added_time_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_completed_time_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_completed_time_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_completed_time_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_completed_time_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_completed_time_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long']]"
		[Register ("add_torrent_params_completed_time_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;J)V", "")]
		public static unsafe void Add_torrent_params_completed_time_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2)
		{
			const string __id = "add_torrent_params_completed_time_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_create_instance' and count(parameter)=0]"
		[Register ("add_torrent_params_create_instance", "()J", "")]
		public static unsafe long Add_torrent_params_create_instance ()
		{
			const string __id = "add_torrent_params_create_instance.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_create_instance_disabled_storage' and count(parameter)=0]"
		[Register ("add_torrent_params_create_instance_disabled_storage", "()J", "")]
		public static unsafe long Add_torrent_params_create_instance_disabled_storage ()
		{
			const string __id = "add_torrent_params_create_instance_disabled_storage.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_create_instance_zero_storage' and count(parameter)=0]"
		[Register ("add_torrent_params_create_instance_zero_storage", "()J", "")]
		public static unsafe long Add_torrent_params_create_instance_zero_storage ()
		{
			const string __id = "add_torrent_params_create_instance_zero_storage.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_download_limit_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_download_limit_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I", "")]
		public static unsafe int Add_torrent_params_download_limit_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_download_limit_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_download_limit_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='int']]"
		[Register ("add_torrent_params_download_limit_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V", "")]
		public static unsafe void Add_torrent_params_download_limit_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, int p2)
		{
			const string __id = "add_torrent_params_download_limit_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_finished_time_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_finished_time_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I", "")]
		public static unsafe int Add_torrent_params_finished_time_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_finished_time_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_finished_time_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='int']]"
		[Register ("add_torrent_params_finished_time_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V", "")]
		public static unsafe void Add_torrent_params_finished_time_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, int p2)
		{
			const string __id = "add_torrent_params_finished_time_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_flags_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_flags_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_flags_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_flags_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_flags_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t']]"
		[Register ("add_torrent_params_flags_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)V", "")]
		public static unsafe void Add_torrent_params_flags_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p3)
		{
			const string __id = "add_torrent_params_flags_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_get_banned_peers' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_get_banned_peers", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_get_banned_peers (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_get_banned_peers.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_get_dht_nodes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_get_dht_nodes", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_get_dht_nodes (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_get_dht_nodes.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_get_peers' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_get_peers", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_get_peers (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_get_peers.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_get_tracker_tiers' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_get_tracker_tiers", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_get_tracker_tiers (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_get_tracker_tiers.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_get_trackers' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_get_trackers", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_get_trackers (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_get_trackers.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_get_url_seeds' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_get_url_seeds", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_get_url_seeds (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_get_url_seeds.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_have_pieces_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_have_pieces_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_have_pieces_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_have_pieces_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_have_pieces_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("add_torrent_params_have_pieces_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V", "")]
		public static unsafe void Add_torrent_params_have_pieces_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p3)
		{
			const string __id = "add_torrent_params_have_pieces_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_info_hash_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_info_hash_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_info_hash_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_info_hash_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_info_hash_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("add_torrent_params_info_hash_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Add_torrent_params_info_hash_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "add_torrent_params_info_hash_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_last_download_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_last_download_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_last_download_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_last_download_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_last_download_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long']]"
		[Register ("add_torrent_params_last_download_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;J)V", "")]
		public static unsafe void Add_torrent_params_last_download_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2)
		{
			const string __id = "add_torrent_params_last_download_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_last_seen_complete_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_last_seen_complete_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_last_seen_complete_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_last_seen_complete_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_last_seen_complete_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long']]"
		[Register ("add_torrent_params_last_seen_complete_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;J)V", "")]
		public static unsafe void Add_torrent_params_last_seen_complete_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2)
		{
			const string __id = "add_torrent_params_last_seen_complete_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_last_upload_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_last_upload_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_last_upload_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_last_upload_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_last_upload_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long']]"
		[Register ("add_torrent_params_last_upload_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;J)V", "")]
		public static unsafe void Add_torrent_params_last_upload_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2)
		{
			const string __id = "add_torrent_params_last_upload_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_max_connections_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_max_connections_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I", "")]
		public static unsafe int Add_torrent_params_max_connections_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_max_connections_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_max_connections_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='int']]"
		[Register ("add_torrent_params_max_connections_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V", "")]
		public static unsafe void Add_torrent_params_max_connections_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, int p2)
		{
			const string __id = "add_torrent_params_max_connections_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_max_uploads_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_max_uploads_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I", "")]
		public static unsafe int Add_torrent_params_max_uploads_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_max_uploads_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_max_uploads_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='int']]"
		[Register ("add_torrent_params_max_uploads_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V", "")]
		public static unsafe void Add_torrent_params_max_uploads_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, int p2)
		{
			const string __id = "add_torrent_params_max_uploads_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_name_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_name_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)Ljava/lang/String;", "")]
		public static unsafe string Add_torrent_params_name_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_name_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_name_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='java.lang.String']]"
		[Register ("add_torrent_params_name_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;Ljava/lang/String;)V", "")]
		public static unsafe void Add_torrent_params_name_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, string p2)
		{
			const string __id = "add_torrent_params_name_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_num_complete_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_num_complete_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I", "")]
		public static unsafe int Add_torrent_params_num_complete_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_num_complete_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_num_complete_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='int']]"
		[Register ("add_torrent_params_num_complete_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V", "")]
		public static unsafe void Add_torrent_params_num_complete_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, int p2)
		{
			const string __id = "add_torrent_params_num_complete_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_num_downloaded_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_num_downloaded_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I", "")]
		public static unsafe int Add_torrent_params_num_downloaded_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_num_downloaded_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_num_downloaded_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='int']]"
		[Register ("add_torrent_params_num_downloaded_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V", "")]
		public static unsafe void Add_torrent_params_num_downloaded_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, int p2)
		{
			const string __id = "add_torrent_params_num_downloaded_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_num_incomplete_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_num_incomplete_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I", "")]
		public static unsafe int Add_torrent_params_num_incomplete_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_num_incomplete_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_num_incomplete_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='int']]"
		[Register ("add_torrent_params_num_incomplete_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V", "")]
		public static unsafe void Add_torrent_params_num_incomplete_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, int p2)
		{
			const string __id = "add_torrent_params_num_incomplete_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_parse_magnet_uri' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='long'] and parameter[3][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("add_torrent_params_parse_magnet_uri", "(Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/error_code;)J", "")]
		public static unsafe long Add_torrent_params_parse_magnet_uri (string p0, long p1, global::FrostWire.Libtorrent.Swig.Error_code p2)
		{
			const string __id = "add_torrent_params_parse_magnet_uri.(Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/error_code;)J";
			IntPtr native_p0 = JNIEnv.NewString (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue ((p2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p2).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_read_resume_data__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("add_torrent_params_read_resume_data__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;JLcom/frostwire/jlibtorrent/swig/error_code;)J", "")]
		public static unsafe long Add_torrent_params_read_resume_data__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "add_torrent_params_read_resume_data__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;JLcom/frostwire/jlibtorrent/swig/error_code;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_read_resume_data__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("add_torrent_params_read_resume_data__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/error_code;)J", "")]
		public static unsafe long Add_torrent_params_read_resume_data__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "add_torrent_params_read_resume_data__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/error_code;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_save_path_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_save_path_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)Ljava/lang/String;", "")]
		public static unsafe string Add_torrent_params_save_path_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_save_path_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_save_path_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='java.lang.String']]"
		[Register ("add_torrent_params_save_path_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;Ljava/lang/String;)V", "")]
		public static unsafe void Add_torrent_params_save_path_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, string p2)
		{
			const string __id = "add_torrent_params_save_path_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_seeding_time_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_seeding_time_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I", "")]
		public static unsafe int Add_torrent_params_seeding_time_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_seeding_time_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_seeding_time_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='int']]"
		[Register ("add_torrent_params_seeding_time_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V", "")]
		public static unsafe void Add_torrent_params_seeding_time_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, int p2)
		{
			const string __id = "add_torrent_params_seeding_time_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_banned_peers' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint_vector']]"
		[Register ("add_torrent_params_set_banned_peers", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;)V", "")]
		public static unsafe void Add_torrent_params_set_banned_peers (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.Tcp_endpoint_vector p3)
		{
			const string __id = "add_torrent_params_set_banned_peers.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_default_storage' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_set_default_storage", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)V", "")]
		public static unsafe void Add_torrent_params_set_default_storage (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_set_default_storage.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_dht_nodes' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_int_pair_vector']]"
		[Register ("add_torrent_params_set_dht_nodes", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;)V", "")]
		public static unsafe void Add_torrent_params_set_dht_nodes (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.String_int_pair_vector p3)
		{
			const string __id = "add_torrent_params_set_dht_nodes.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_disabled_storage' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_set_disabled_storage", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)V", "")]
		public static unsafe void Add_torrent_params_set_disabled_storage (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_set_disabled_storage.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_file_priorities2' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("add_torrent_params_set_file_priorities2", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Add_torrent_params_set_file_priorities2 (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "add_torrent_params_set_file_priorities2.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_http_seeds' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_vector']]"
		[Register ("add_torrent_params_set_http_seeds", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/string_vector;)V", "")]
		public static unsafe void Add_torrent_params_set_http_seeds (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.String_vector p3)
		{
			const string __id = "add_torrent_params_set_http_seeds.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/string_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_merkle_tree' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash_vector']]"
		[Register ("add_torrent_params_set_merkle_tree", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;)V", "")]
		public static unsafe void Add_torrent_params_set_merkle_tree (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash_vector p3)
		{
			const string __id = "add_torrent_params_set_merkle_tree.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_peers' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint_vector']]"
		[Register ("add_torrent_params_set_peers", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;)V", "")]
		public static unsafe void Add_torrent_params_set_peers (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.Tcp_endpoint_vector p3)
		{
			const string __id = "add_torrent_params_set_peers.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_piece_priorities2' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("add_torrent_params_set_piece_priorities2", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Add_torrent_params_set_piece_priorities2 (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "add_torrent_params_set_piece_priorities2.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_renamed_files' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.file_index_string_map']]"
		[Register ("add_torrent_params_set_renamed_files", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/file_index_string_map;)V", "")]
		public static unsafe void Add_torrent_params_set_renamed_files (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.File_index_string_map p3)
		{
			const string __id = "add_torrent_params_set_renamed_files.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/file_index_string_map;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_ti' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("add_torrent_params_set_ti", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/torrent_info;)V", "")]
		public static unsafe void Add_torrent_params_set_ti (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_info p3)
		{
			const string __id = "add_torrent_params_set_ti.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/torrent_info;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_tracker_tiers' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.int_vector']]"
		[Register ("add_torrent_params_set_tracker_tiers", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/int_vector;)V", "")]
		public static unsafe void Add_torrent_params_set_tracker_tiers (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.Int_vector p3)
		{
			const string __id = "add_torrent_params_set_tracker_tiers.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/int_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_trackers' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_vector']]"
		[Register ("add_torrent_params_set_trackers", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/string_vector;)V", "")]
		public static unsafe void Add_torrent_params_set_trackers (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.String_vector p3)
		{
			const string __id = "add_torrent_params_set_trackers.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/string_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_url_seeds' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_vector']]"
		[Register ("add_torrent_params_set_url_seeds", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/string_vector;)V", "")]
		public static unsafe void Add_torrent_params_set_url_seeds (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.String_vector p3)
		{
			const string __id = "add_torrent_params_set_url_seeds.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/string_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_set_zero_storage' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_set_zero_storage", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)V", "")]
		public static unsafe void Add_torrent_params_set_zero_storage (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_set_zero_storage.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_storage_mode_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_storage_mode_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I", "")]
		public static unsafe int Add_torrent_params_storage_mode_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_storage_mode_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_storage_mode_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='int']]"
		[Register ("add_torrent_params_storage_mode_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V", "")]
		public static unsafe void Add_torrent_params_storage_mode_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, int p2)
		{
			const string __id = "add_torrent_params_storage_mode_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_ti_ptr' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_ti_ptr", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_ti_ptr (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_ti_ptr.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_total_downloaded_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_total_downloaded_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_total_downloaded_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_total_downloaded_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_total_downloaded_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long']]"
		[Register ("add_torrent_params_total_downloaded_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;J)V", "")]
		public static unsafe void Add_torrent_params_total_downloaded_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2)
		{
			const string __id = "add_torrent_params_total_downloaded_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_total_uploaded_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_total_uploaded_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_total_uploaded_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_total_uploaded_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_total_uploaded_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long']]"
		[Register ("add_torrent_params_total_uploaded_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;J)V", "")]
		public static unsafe void Add_torrent_params_total_uploaded_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2)
		{
			const string __id = "add_torrent_params_total_uploaded_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_trackerid_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_trackerid_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)Ljava/lang/String;", "")]
		public static unsafe string Add_torrent_params_trackerid_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_trackerid_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_trackerid_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='java.lang.String']]"
		[Register ("add_torrent_params_trackerid_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;Ljava/lang/String;)V", "")]
		public static unsafe void Add_torrent_params_trackerid_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, string p2)
		{
			const string __id = "add_torrent_params_trackerid_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_upload_limit_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_upload_limit_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I", "")]
		public static unsafe int Add_torrent_params_upload_limit_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_upload_limit_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_upload_limit_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='int']]"
		[Register ("add_torrent_params_upload_limit_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V", "")]
		public static unsafe void Add_torrent_params_upload_limit_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, int p2)
		{
			const string __id = "add_torrent_params_upload_limit_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_verified_pieces_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_verified_pieces_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_verified_pieces_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_verified_pieces_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_verified_pieces_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("add_torrent_params_verified_pieces_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V", "")]
		public static unsafe void Add_torrent_params_verified_pieces_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, long p2, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p3)
		{
			const string __id = "add_torrent_params_verified_pieces_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_version_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_version_get", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I", "")]
		public static unsafe int Add_torrent_params_version_get (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_version_get.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_version_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[3][@type='int']]"
		[Register ("add_torrent_params_version_set", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V", "")]
		public static unsafe void Add_torrent_params_version_set (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1, int p2)
		{
			const string __id = "add_torrent_params_version_set.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_write_resume_data' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_write_resume_data", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_write_resume_data (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_write_resume_data.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='add_torrent_params_write_resume_data_buf' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("add_torrent_params_write_resume_data_buf", "(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J", "")]
		public static unsafe long Add_torrent_params_write_resume_data_buf (long p0, global::FrostWire.Libtorrent.Swig.Add_torrent_params p1)
		{
			const string __id = "add_torrent_params_write_resume_data_buf.(JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_compare' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("address_compare", "(JLcom/frostwire/jlibtorrent/swig/address;JLcom/frostwire/jlibtorrent/swig/address;)I", "")]
		public static unsafe int Address_compare (long p0, global::FrostWire.Libtorrent.Swig.Address p1, long p2, global::FrostWire.Libtorrent.Swig.Address p3)
		{
			const string __id = "address_compare.(JLcom/frostwire/jlibtorrent/swig/address;JLcom/frostwire/jlibtorrent/swig/address;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_family_not_supported_get' and count(parameter)=0]"
		[Register ("address_family_not_supported_get", "()I", "")]
		public static unsafe int Address_family_not_supported_get ()
		{
			const string __id = "address_family_not_supported_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_from_string' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='long'] and parameter[3][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("address_from_string", "(Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/error_code;)J", "")]
		public static unsafe long Address_from_string (string p0, long p1, global::FrostWire.Libtorrent.Swig.Error_code p2)
		{
			const string __id = "address_from_string.(Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/error_code;)J";
			IntPtr native_p0 = JNIEnv.NewString (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue ((p2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p2).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_in_use_get' and count(parameter)=0]"
		[Register ("address_in_use_get", "()I", "")]
		public static unsafe int Address_in_use_get ()
		{
			const string __id = "address_in_use_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_is_loopback' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("address_is_loopback", "(JLcom/frostwire/jlibtorrent/swig/address;)Z", "")]
		public static unsafe bool Address_is_loopback (long p0, global::FrostWire.Libtorrent.Swig.Address p1)
		{
			const string __id = "address_is_loopback.(JLcom/frostwire/jlibtorrent/swig/address;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_is_multicast' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("address_is_multicast", "(JLcom/frostwire/jlibtorrent/swig/address;)Z", "")]
		public static unsafe bool Address_is_multicast (long p0, global::FrostWire.Libtorrent.Swig.Address p1)
		{
			const string __id = "address_is_multicast.(JLcom/frostwire/jlibtorrent/swig/address;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_is_unspecified' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("address_is_unspecified", "(JLcom/frostwire/jlibtorrent/swig/address;)Z", "")]
		public static unsafe bool Address_is_unspecified (long p0, global::FrostWire.Libtorrent.Swig.Address p1)
		{
			const string __id = "address_is_unspecified.(JLcom/frostwire/jlibtorrent/swig/address;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_is_v4' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("address_is_v4", "(JLcom/frostwire/jlibtorrent/swig/address;)Z", "")]
		public static unsafe bool Address_is_v4 (long p0, global::FrostWire.Libtorrent.Swig.Address p1)
		{
			const string __id = "address_is_v4.(JLcom/frostwire/jlibtorrent/swig/address;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_is_v6' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("address_is_v6", "(JLcom/frostwire/jlibtorrent/swig/address;)Z", "")]
		public static unsafe bool Address_is_v6 (long p0, global::FrostWire.Libtorrent.Swig.Address p1)
		{
			const string __id = "address_is_v6.(JLcom/frostwire/jlibtorrent/swig/address;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_not_available_get' and count(parameter)=0]"
		[Register ("address_not_available_get", "()I", "")]
		public static unsafe int Address_not_available_get ()
		{
			const string __id = "address_not_available_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_op_lt' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("address_op_lt", "(JLcom/frostwire/jlibtorrent/swig/address;JLcom/frostwire/jlibtorrent/swig/address;)Z", "")]
		public static unsafe bool Address_op_lt (long p0, global::FrostWire.Libtorrent.Swig.Address p1, long p2, global::FrostWire.Libtorrent.Swig.Address p3)
		{
			const string __id = "address_op_lt.(JLcom/frostwire/jlibtorrent/swig/address;JLcom/frostwire/jlibtorrent/swig/address;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_sha1_hash_pair_first_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair']]"
		[Register ("address_sha1_hash_pair_first_get", "(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair;)J", "")]
		public static unsafe long Address_sha1_hash_pair_first_get (long p0, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair p1)
		{
			const string __id = "address_sha1_hash_pair_first_get.(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_sha1_hash_pair_first_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("address_sha1_hash_pair_first_set", "(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair;JLcom/frostwire/jlibtorrent/swig/address;)V", "")]
		public static unsafe void Address_sha1_hash_pair_first_set (long p0, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair p1, long p2, global::FrostWire.Libtorrent.Swig.Address p3)
		{
			const string __id = "address_sha1_hash_pair_first_set.(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair;JLcom/frostwire/jlibtorrent/swig/address;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_sha1_hash_pair_second_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair']]"
		[Register ("address_sha1_hash_pair_second_get", "(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair;)J", "")]
		public static unsafe long Address_sha1_hash_pair_second_get (long p0, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair p1)
		{
			const string __id = "address_sha1_hash_pair_second_get.(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_sha1_hash_pair_second_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("address_sha1_hash_pair_second_set", "(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Address_sha1_hash_pair_second_set (long p0, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "address_sha1_hash_pair_second_set.(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_sha1_hash_pair_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair_vector']]"
		[Register ("address_sha1_hash_pair_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;)J", "")]
		public static unsafe long Address_sha1_hash_pair_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair_vector p1)
		{
			const string __id = "address_sha1_hash_pair_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_sha1_hash_pair_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair_vector']]"
		[Register ("address_sha1_hash_pair_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;)V", "")]
		public static unsafe void Address_sha1_hash_pair_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair_vector p1)
		{
			const string __id = "address_sha1_hash_pair_vector_clear.(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_sha1_hash_pair_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair_vector']]"
		[Register ("address_sha1_hash_pair_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;)Z", "")]
		public static unsafe bool Address_sha1_hash_pair_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair_vector p1)
		{
			const string __id = "address_sha1_hash_pair_vector_empty.(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_sha1_hash_pair_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair_vector'] and parameter[3][@type='int']]"
		[Register ("address_sha1_hash_pair_vector_get", "(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;I)J", "")]
		public static unsafe long Address_sha1_hash_pair_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair_vector p1, int p2)
		{
			const string __id = "address_sha1_hash_pair_vector_get.(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_sha1_hash_pair_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair']]"
		[Register ("address_sha1_hash_pair_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair;)V", "")]
		public static unsafe void Address_sha1_hash_pair_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair p3)
		{
			const string __id = "address_sha1_hash_pair_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_sha1_hash_pair_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair_vector'] and parameter[3][@type='long']]"
		[Register ("address_sha1_hash_pair_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;J)V", "")]
		public static unsafe void Address_sha1_hash_pair_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair_vector p1, long p2)
		{
			const string __id = "address_sha1_hash_pair_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_sha1_hash_pair_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair']]"
		[Register ("address_sha1_hash_pair_vector_set", "(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;IJLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair;)V", "")]
		public static unsafe void Address_sha1_hash_pair_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair p4)
		{
			const string __id = "address_sha1_hash_pair_vector_set.(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;IJLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_sha1_hash_pair_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair_vector']]"
		[Register ("address_sha1_hash_pair_vector_size", "(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;)J", "")]
		public static unsafe long Address_sha1_hash_pair_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair_vector p1)
		{
			const string __id = "address_sha1_hash_pair_vector_size.(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='address_to_string' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("address_to_string", "(JLcom/frostwire/jlibtorrent/swig/address;JLcom/frostwire/jlibtorrent/swig/error_code;)Ljava/lang/String;", "")]
		public static unsafe string Address_to_string (long p0, global::FrostWire.Libtorrent.Swig.Address p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "address_to_string.(JLcom/frostwire/jlibtorrent/swig/address;JLcom/frostwire/jlibtorrent/swig/error_code;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_all_categories_get' and count(parameter)=0]"
		[Register ("alert_all_categories_get", "()J", "")]
		public static unsafe long Alert_all_categories_get ()
		{
			const string __id = "alert_all_categories_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_block_progress_notification_get' and count(parameter)=0]"
		[Register ("alert_block_progress_notification_get", "()J", "")]
		public static unsafe long Alert_block_progress_notification_get ()
		{
			const string __id = "alert_block_progress_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_add_torrent_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_add_torrent_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_add_torrent_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_add_torrent_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_alerts_dropped_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_alerts_dropped_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_alerts_dropped_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_alerts_dropped_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_block_downloading_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_block_downloading_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_block_downloading_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_block_downloading_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_block_finished_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_block_finished_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_block_finished_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_block_finished_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_block_timeout_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_block_timeout_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_block_timeout_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_block_timeout_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_block_uploaded_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_block_uploaded_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_block_uploaded_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_block_uploaded_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_cache_flushed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_cache_flushed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_cache_flushed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_cache_flushed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_announce_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_announce_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_announce_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_announce_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_bootstrap_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_bootstrap_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_bootstrap_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_bootstrap_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_direct_response_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_direct_response_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_direct_response_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_direct_response_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_error_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_error_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_error_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_error_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_get_peers_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_get_peers_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_get_peers_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_get_peers_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_get_peers_reply_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_get_peers_reply_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_get_peers_reply_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_get_peers_reply_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_immutable_item_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_immutable_item_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_immutable_item_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_immutable_item_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_live_nodes_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_live_nodes_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_live_nodes_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_live_nodes_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_log_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_log_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_log_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_log_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_mutable_item_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_mutable_item_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_mutable_item_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_mutable_item_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_outgoing_get_peers_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_outgoing_get_peers_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_outgoing_get_peers_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_outgoing_get_peers_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_pkt_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_pkt_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_pkt_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_pkt_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_put_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_put_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_put_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_put_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_reply_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_reply_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_reply_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_reply_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_sample_infohashes_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_sample_infohashes_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_sample_infohashes_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_sample_infohashes_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_dht_stats_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_dht_stats_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_dht_stats_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_dht_stats_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_external_ip_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_external_ip_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_external_ip_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_external_ip_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_fastresume_rejected_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_fastresume_rejected_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_fastresume_rejected_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_fastresume_rejected_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_file_completed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_file_completed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_file_completed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_file_completed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_file_error_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_file_error_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_file_error_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_file_error_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_file_rename_failed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_file_rename_failed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_file_rename_failed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_file_rename_failed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_file_renamed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_file_renamed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_file_renamed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_file_renamed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_hash_failed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_hash_failed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_hash_failed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_hash_failed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_i2p_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_i2p_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_i2p_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_i2p_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_incoming_connection_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_incoming_connection_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_incoming_connection_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_incoming_connection_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_incoming_request_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_incoming_request_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_incoming_request_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_incoming_request_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_invalid_request_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_invalid_request_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_invalid_request_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_invalid_request_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_listen_failed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_listen_failed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_listen_failed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_listen_failed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_listen_succeeded_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_listen_succeeded_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_listen_succeeded_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_listen_succeeded_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_log_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_log_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_log_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_log_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_lsd_error_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_lsd_error_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_lsd_error_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_lsd_error_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_lsd_peer_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_lsd_peer_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_lsd_peer_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_lsd_peer_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_metadata_failed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_metadata_failed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_metadata_failed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_metadata_failed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_metadata_received_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_metadata_received_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_metadata_received_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_metadata_received_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_peer_ban_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_peer_ban_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_peer_ban_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_peer_ban_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_peer_blocked_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_peer_blocked_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_peer_blocked_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_peer_blocked_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_peer_connect_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_peer_connect_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_peer_connect_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_peer_connect_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_peer_disconnected_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_peer_disconnected_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_peer_disconnected_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_peer_disconnected_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_peer_error_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_peer_error_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_peer_error_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_peer_error_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_peer_log_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_peer_log_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_peer_log_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_peer_log_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_peer_snubbed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_peer_snubbed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_peer_snubbed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_peer_snubbed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_peer_unsnubbed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_peer_unsnubbed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_peer_unsnubbed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_peer_unsnubbed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_performance_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_performance_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_performance_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_performance_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_picker_log_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_picker_log_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_picker_log_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_picker_log_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_piece_finished_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_piece_finished_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_piece_finished_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_piece_finished_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_portmap_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_portmap_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_portmap_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_portmap_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_portmap_error_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_portmap_error_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_portmap_error_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_portmap_error_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_portmap_log_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_portmap_log_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_portmap_log_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_portmap_log_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_read_piece_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_read_piece_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_read_piece_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_read_piece_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_request_dropped_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_request_dropped_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_request_dropped_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_request_dropped_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_save_resume_data_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_save_resume_data_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_save_resume_data_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_save_resume_data_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_save_resume_data_failed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_save_resume_data_failed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_save_resume_data_failed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_save_resume_data_failed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_scrape_failed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_scrape_failed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_scrape_failed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_scrape_failed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_scrape_reply_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_scrape_reply_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_scrape_reply_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_scrape_reply_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_session_error_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_session_error_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_session_error_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_session_error_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_session_stats_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_session_stats_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_session_stats_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_session_stats_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_session_stats_header_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_session_stats_header_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_session_stats_header_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_session_stats_header_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_state_changed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_state_changed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_state_changed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_state_changed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_state_update_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_state_update_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_state_update_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_state_update_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_stats_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_stats_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_stats_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_stats_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_storage_moved_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_storage_moved_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_storage_moved_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_storage_moved_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_storage_moved_failed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_storage_moved_failed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_storage_moved_failed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_storage_moved_failed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_torrent_checked_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_torrent_checked_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_torrent_checked_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_torrent_checked_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_torrent_delete_failed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_torrent_delete_failed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_torrent_delete_failed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_torrent_delete_failed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_torrent_deleted_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_torrent_deleted_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_torrent_deleted_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_torrent_deleted_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_torrent_error_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_torrent_error_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_torrent_error_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_torrent_error_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_torrent_finished_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_torrent_finished_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_torrent_finished_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_torrent_finished_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_torrent_log_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_torrent_log_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_torrent_log_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_torrent_log_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_torrent_need_cert_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_torrent_need_cert_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_torrent_need_cert_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_torrent_need_cert_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_torrent_paused_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_torrent_paused_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_torrent_paused_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_torrent_paused_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_torrent_removed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_torrent_removed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_torrent_removed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_torrent_removed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_torrent_resumed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_torrent_resumed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_torrent_resumed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_torrent_resumed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_tracker_announce_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_tracker_announce_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_tracker_announce_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_tracker_announce_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_tracker_error_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_tracker_error_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_tracker_error_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_tracker_error_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_tracker_reply_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_tracker_reply_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_tracker_reply_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_tracker_reply_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_tracker_warning_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_tracker_warning_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_tracker_warning_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_tracker_warning_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_trackerid_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_trackerid_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_trackerid_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_trackerid_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_udp_error_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_udp_error_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_udp_error_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_udp_error_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_unwanted_block_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_unwanted_block_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_unwanted_block_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_unwanted_block_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_cast_to_url_seed_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_cast_to_url_seed_alert", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_cast_to_url_seed_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_cast_to_url_seed_alert.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_category", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_category (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_category.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_category_t_all' and count(parameter)=0]"
		[Register ("alert_category_t_all", "()J", "")]
		public static unsafe long Alert_category_t_all ()
		{
			const string __id = "alert_category_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_category_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_category_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.alert_category_t']]"
		[Register ("alert_category_t_and_", "(JLcom/frostwire/jlibtorrent/swig/alert_category_t;JLcom/frostwire/jlibtorrent/swig/alert_category_t;)J", "")]
		public static unsafe long Alert_category_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Alert_category_t p1, long p2, global::FrostWire.Libtorrent.Swig.Alert_category_t p3)
		{
			const string __id = "alert_category_t_and_.(JLcom/frostwire/jlibtorrent/swig/alert_category_t;JLcom/frostwire/jlibtorrent/swig/alert_category_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_category_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_category_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.alert_category_t']]"
		[Register ("alert_category_t_eq", "(JLcom/frostwire/jlibtorrent/swig/alert_category_t;JLcom/frostwire/jlibtorrent/swig/alert_category_t;)Z", "")]
		public static unsafe bool Alert_category_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Alert_category_t p1, long p2, global::FrostWire.Libtorrent.Swig.Alert_category_t p3)
		{
			const string __id = "alert_category_t_eq.(JLcom/frostwire/jlibtorrent/swig/alert_category_t;JLcom/frostwire/jlibtorrent/swig/alert_category_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_category_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_category_t']]"
		[Register ("alert_category_t_inv", "(JLcom/frostwire/jlibtorrent/swig/alert_category_t;)J", "")]
		public static unsafe long Alert_category_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Alert_category_t p1)
		{
			const string __id = "alert_category_t_inv.(JLcom/frostwire/jlibtorrent/swig/alert_category_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_category_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_category_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.alert_category_t']]"
		[Register ("alert_category_t_ne", "(JLcom/frostwire/jlibtorrent/swig/alert_category_t;JLcom/frostwire/jlibtorrent/swig/alert_category_t;)Z", "")]
		public static unsafe bool Alert_category_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Alert_category_t p1, long p2, global::FrostWire.Libtorrent.Swig.Alert_category_t p3)
		{
			const string __id = "alert_category_t_ne.(JLcom/frostwire/jlibtorrent/swig/alert_category_t;JLcom/frostwire/jlibtorrent/swig/alert_category_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_category_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_category_t']]"
		[Register ("alert_category_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/alert_category_t;)Z", "")]
		public static unsafe bool Alert_category_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Alert_category_t p1)
		{
			const string __id = "alert_category_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/alert_category_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_category_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_category_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.alert_category_t']]"
		[Register ("alert_category_t_or_", "(JLcom/frostwire/jlibtorrent/swig/alert_category_t;JLcom/frostwire/jlibtorrent/swig/alert_category_t;)J", "")]
		public static unsafe long Alert_category_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Alert_category_t p1, long p2, global::FrostWire.Libtorrent.Swig.Alert_category_t p3)
		{
			const string __id = "alert_category_t_or_.(JLcom/frostwire/jlibtorrent/swig/alert_category_t;JLcom/frostwire/jlibtorrent/swig/alert_category_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_category_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_category_t']]"
		[Register ("alert_category_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/alert_category_t;)I", "")]
		public static unsafe int Alert_category_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Alert_category_t p1)
		{
			const string __id = "alert_category_t_to_int.(JLcom/frostwire/jlibtorrent/swig/alert_category_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_category_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_category_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.alert_category_t']]"
		[Register ("alert_category_t_xor", "(JLcom/frostwire/jlibtorrent/swig/alert_category_t;JLcom/frostwire/jlibtorrent/swig/alert_category_t;)J", "")]
		public static unsafe long Alert_category_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Alert_category_t p1, long p2, global::FrostWire.Libtorrent.Swig.Alert_category_t p3)
		{
			const string __id = "alert_category_t_xor.(JLcom/frostwire/jlibtorrent/swig/alert_category_t;JLcom/frostwire/jlibtorrent/swig/alert_category_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_debug_notification_get' and count(parameter)=0]"
		[Register ("alert_debug_notification_get", "()J", "")]
		public static unsafe long Alert_debug_notification_get ()
		{
			const string __id = "alert_debug_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_dht_log_notification_get' and count(parameter)=0]"
		[Register ("alert_dht_log_notification_get", "()J", "")]
		public static unsafe long Alert_dht_log_notification_get ()
		{
			const string __id = "alert_dht_log_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_dht_notification_get' and count(parameter)=0]"
		[Register ("alert_dht_notification_get", "()J", "")]
		public static unsafe long Alert_dht_notification_get ()
		{
			const string __id = "alert_dht_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_dht_operation_notification_get' and count(parameter)=0]"
		[Register ("alert_dht_operation_notification_get", "()J", "")]
		public static unsafe long Alert_dht_operation_notification_get ()
		{
			const string __id = "alert_dht_operation_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_error_notification_get' and count(parameter)=0]"
		[Register ("alert_error_notification_get", "()J", "")]
		public static unsafe long Alert_error_notification_get ()
		{
			const string __id = "alert_error_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_file_progress_notification_get' and count(parameter)=0]"
		[Register ("alert_file_progress_notification_get", "()J", "")]
		public static unsafe long Alert_file_progress_notification_get ()
		{
			const string __id = "alert_file_progress_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_get_timestamp' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_get_timestamp", "(JLcom/frostwire/jlibtorrent/swig/alert;)J", "")]
		public static unsafe long Alert_get_timestamp (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_get_timestamp.(JLcom/frostwire/jlibtorrent/swig/alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_incoming_request_notification_get' and count(parameter)=0]"
		[Register ("alert_incoming_request_notification_get", "()J", "")]
		public static unsafe long Alert_incoming_request_notification_get ()
		{
			const string __id = "alert_incoming_request_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_ip_block_notification_get' and count(parameter)=0]"
		[Register ("alert_ip_block_notification_get", "()J", "")]
		public static unsafe long Alert_ip_block_notification_get ()
		{
			const string __id = "alert_ip_block_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_message", "(JLcom/frostwire/jlibtorrent/swig/alert;)Ljava/lang/String;", "")]
		public static unsafe string Alert_message (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_message.(JLcom/frostwire/jlibtorrent/swig/alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_name' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("alert_name", "(I)Ljava/lang/String;", "")]
		public static unsafe string Alert_name (int p0)
		{
			const string __id = "alert_name.(I)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_notify_callback_change_ownership' and count(parameter)=3 and parameter[1][@type='com.frostwire.jlibtorrent.swig.alert_notify_callback'] and parameter[2][@type='long'] and parameter[3][@type='boolean']]"
		[Register ("alert_notify_callback_change_ownership", "(Lcom/frostwire/jlibtorrent/swig/alert_notify_callback;JZ)V", "")]
		public static unsafe void Alert_notify_callback_change_ownership (global::FrostWire.Libtorrent.Swig.Alert_notify_callback p0, long p1, bool p2)
		{
			const string __id = "alert_notify_callback_change_ownership.(Lcom/frostwire/jlibtorrent/swig/alert_notify_callback;JZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_notify_callback_director_connect' and count(parameter)=4 and parameter[1][@type='com.frostwire.jlibtorrent.swig.alert_notify_callback'] and parameter[2][@type='long'] and parameter[3][@type='boolean'] and parameter[4][@type='boolean']]"
		[Register ("alert_notify_callback_director_connect", "(Lcom/frostwire/jlibtorrent/swig/alert_notify_callback;JZZ)V", "")]
		public static unsafe void Alert_notify_callback_director_connect (global::FrostWire.Libtorrent.Swig.Alert_notify_callback p0, long p1, bool p2, bool p3)
		{
			const string __id = "alert_notify_callback_director_connect.(Lcom/frostwire/jlibtorrent/swig/alert_notify_callback;JZZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_notify_callback_on_alert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_notify_callback']]"
		[Register ("alert_notify_callback_on_alert", "(JLcom/frostwire/jlibtorrent/swig/alert_notify_callback;)V", "")]
		public static unsafe void Alert_notify_callback_on_alert (long p0, global::FrostWire.Libtorrent.Swig.Alert_notify_callback p1)
		{
			const string __id = "alert_notify_callback_on_alert.(JLcom/frostwire/jlibtorrent/swig/alert_notify_callback;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_notify_callback_on_alertSwigExplicitalert_notify_callback' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_notify_callback']]"
		[Register ("alert_notify_callback_on_alertSwigExplicitalert_notify_callback", "(JLcom/frostwire/jlibtorrent/swig/alert_notify_callback;)V", "")]
		public static unsafe void Alert_notify_callback_on_alertSwigExplicitalert_notify_callback (long p0, global::FrostWire.Libtorrent.Swig.Alert_notify_callback p1)
		{
			const string __id = "alert_notify_callback_on_alertSwigExplicitalert_notify_callback.(JLcom/frostwire/jlibtorrent/swig/alert_notify_callback;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_peer_log_notification_get' and count(parameter)=0]"
		[Register ("alert_peer_log_notification_get", "()J", "")]
		public static unsafe long Alert_peer_log_notification_get ()
		{
			const string __id = "alert_peer_log_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_peer_notification_get' and count(parameter)=0]"
		[Register ("alert_peer_notification_get", "()J", "")]
		public static unsafe long Alert_peer_notification_get ()
		{
			const string __id = "alert_peer_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_performance_warning_get' and count(parameter)=0]"
		[Register ("alert_performance_warning_get", "()J", "")]
		public static unsafe long Alert_performance_warning_get ()
		{
			const string __id = "alert_performance_warning_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_picker_log_notification_get' and count(parameter)=0]"
		[Register ("alert_picker_log_notification_get", "()J", "")]
		public static unsafe long Alert_picker_log_notification_get ()
		{
			const string __id = "alert_picker_log_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_piece_progress_notification_get' and count(parameter)=0]"
		[Register ("alert_piece_progress_notification_get", "()J", "")]
		public static unsafe long Alert_piece_progress_notification_get ()
		{
			const string __id = "alert_piece_progress_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_port_mapping_log_notification_get' and count(parameter)=0]"
		[Register ("alert_port_mapping_log_notification_get", "()J", "")]
		public static unsafe long Alert_port_mapping_log_notification_get ()
		{
			const string __id = "alert_port_mapping_log_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_port_mapping_notification_get' and count(parameter)=0]"
		[Register ("alert_port_mapping_notification_get", "()J", "")]
		public static unsafe long Alert_port_mapping_notification_get ()
		{
			const string __id = "alert_port_mapping_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_priority_normal_get' and count(parameter)=0]"
		[Register ("alert_priority_normal_get", "()I", "")]
		public static unsafe int Alert_priority_normal_get ()
		{
			const string __id = "alert_priority_normal_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_ptr_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_ptr_vector']]"
		[Register ("alert_ptr_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;)J", "")]
		public static unsafe long Alert_ptr_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Alert_ptr_vector p1)
		{
			const string __id = "alert_ptr_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_ptr_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_ptr_vector']]"
		[Register ("alert_ptr_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;)V", "")]
		public static unsafe void Alert_ptr_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Alert_ptr_vector p1)
		{
			const string __id = "alert_ptr_vector_clear.(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_ptr_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_ptr_vector']]"
		[Register ("alert_ptr_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;)Z", "")]
		public static unsafe bool Alert_ptr_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Alert_ptr_vector p1)
		{
			const string __id = "alert_ptr_vector_empty.(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_ptr_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_ptr_vector'] and parameter[3][@type='int']]"
		[Register ("alert_ptr_vector_get", "(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;I)J", "")]
		public static unsafe long Alert_ptr_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Alert_ptr_vector p1, int p2)
		{
			const string __id = "alert_ptr_vector_get.(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_ptr_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_ptr_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_ptr_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;JLcom/frostwire/jlibtorrent/swig/alert;)V", "")]
		public static unsafe void Alert_ptr_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Alert_ptr_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Alert p3)
		{
			const string __id = "alert_ptr_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;JLcom/frostwire/jlibtorrent/swig/alert;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_ptr_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_ptr_vector'] and parameter[3][@type='long']]"
		[Register ("alert_ptr_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;J)V", "")]
		public static unsafe void Alert_ptr_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Alert_ptr_vector p1, long p2)
		{
			const string __id = "alert_ptr_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_ptr_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_ptr_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_ptr_vector_set", "(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;IJLcom/frostwire/jlibtorrent/swig/alert;)V", "")]
		public static unsafe void Alert_ptr_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Alert_ptr_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Alert p4)
		{
			const string __id = "alert_ptr_vector_set.(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;IJLcom/frostwire/jlibtorrent/swig/alert;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_ptr_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert_ptr_vector']]"
		[Register ("alert_ptr_vector_size", "(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;)J", "")]
		public static unsafe long Alert_ptr_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Alert_ptr_vector p1)
		{
			const string __id = "alert_ptr_vector_size.(JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_session_log_notification_get' and count(parameter)=0]"
		[Register ("alert_session_log_notification_get", "()J", "")]
		public static unsafe long Alert_session_log_notification_get ()
		{
			const string __id = "alert_session_log_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_stats_notification_get' and count(parameter)=0]"
		[Register ("alert_stats_notification_get", "()J", "")]
		public static unsafe long Alert_stats_notification_get ()
		{
			const string __id = "alert_stats_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_status_notification_get' and count(parameter)=0]"
		[Register ("alert_status_notification_get", "()J", "")]
		public static unsafe long Alert_status_notification_get ()
		{
			const string __id = "alert_status_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_storage_notification_get' and count(parameter)=0]"
		[Register ("alert_storage_notification_get", "()J", "")]
		public static unsafe long Alert_storage_notification_get ()
		{
			const string __id = "alert_storage_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_torrent_log_notification_get' and count(parameter)=0]"
		[Register ("alert_torrent_log_notification_get", "()J", "")]
		public static unsafe long Alert_torrent_log_notification_get ()
		{
			const string __id = "alert_torrent_log_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_tracker_notification_get' and count(parameter)=0]"
		[Register ("alert_tracker_notification_get", "()J", "")]
		public static unsafe long Alert_tracker_notification_get ()
		{
			const string __id = "alert_tracker_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_type", "(JLcom/frostwire/jlibtorrent/swig/alert;)I", "")]
		public static unsafe int Alert_type (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_type.(JLcom/frostwire/jlibtorrent/swig/alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_upload_notification_get' and count(parameter)=0]"
		[Register ("alert_upload_notification_get", "()J", "")]
		public static unsafe long Alert_upload_notification_get ()
		{
			const string __id = "alert_upload_notification_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alert']]"
		[Register ("alert_what", "(JLcom/frostwire/jlibtorrent/swig/alert;)Ljava/lang/String;", "")]
		public static unsafe string Alert_what (long p0, global::FrostWire.Libtorrent.Swig.Alert p1)
		{
			const string __id = "alert_what.(JLcom/frostwire/jlibtorrent/swig/alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alerts_dropped_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("alerts_dropped_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Alerts_dropped_alert_SWIGUpcast (long p0)
		{
			const string __id = "alerts_dropped_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alerts_dropped_alert_alert_type_get' and count(parameter)=0]"
		[Register ("alerts_dropped_alert_alert_type_get", "()I", "")]
		public static unsafe int Alerts_dropped_alert_alert_type_get ()
		{
			const string __id = "alerts_dropped_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alerts_dropped_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alerts_dropped_alert']]"
		[Register ("alerts_dropped_alert_category", "(JLcom/frostwire/jlibtorrent/swig/alerts_dropped_alert;)J", "")]
		public static unsafe long Alerts_dropped_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Alerts_dropped_alert p1)
		{
			const string __id = "alerts_dropped_alert_category.(JLcom/frostwire/jlibtorrent/swig/alerts_dropped_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alerts_dropped_alert_dropped_alerts_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alerts_dropped_alert']]"
		[Register ("alerts_dropped_alert_dropped_alerts_get", "(JLcom/frostwire/jlibtorrent/swig/alerts_dropped_alert;)J", "")]
		public static unsafe long Alerts_dropped_alert_dropped_alerts_get (long p0, global::FrostWire.Libtorrent.Swig.Alerts_dropped_alert p1)
		{
			const string __id = "alerts_dropped_alert_dropped_alerts_get.(JLcom/frostwire/jlibtorrent/swig/alerts_dropped_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alerts_dropped_alert_dropped_alerts_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alerts_dropped_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.bitset_96']]"
		[Register ("alerts_dropped_alert_dropped_alerts_set", "(JLcom/frostwire/jlibtorrent/swig/alerts_dropped_alert;JLcom/frostwire/jlibtorrent/swig/bitset_96;)V", "")]
		public static unsafe void Alerts_dropped_alert_dropped_alerts_set (long p0, global::FrostWire.Libtorrent.Swig.Alerts_dropped_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Bitset_96 p3)
		{
			const string __id = "alerts_dropped_alert_dropped_alerts_set.(JLcom/frostwire/jlibtorrent/swig/alerts_dropped_alert;JLcom/frostwire/jlibtorrent/swig/bitset_96;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alerts_dropped_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alerts_dropped_alert']]"
		[Register ("alerts_dropped_alert_message", "(JLcom/frostwire/jlibtorrent/swig/alerts_dropped_alert;)Ljava/lang/String;", "")]
		public static unsafe string Alerts_dropped_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Alerts_dropped_alert p1)
		{
			const string __id = "alerts_dropped_alert_message.(JLcom/frostwire/jlibtorrent/swig/alerts_dropped_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alerts_dropped_alert_priority_get' and count(parameter)=0]"
		[Register ("alerts_dropped_alert_priority_get", "()I", "")]
		public static unsafe int Alerts_dropped_alert_priority_get ()
		{
			const string __id = "alerts_dropped_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alerts_dropped_alert_static_category_get' and count(parameter)=0]"
		[Register ("alerts_dropped_alert_static_category_get", "()J", "")]
		public static unsafe long Alerts_dropped_alert_static_category_get ()
		{
			const string __id = "alerts_dropped_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alerts_dropped_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alerts_dropped_alert']]"
		[Register ("alerts_dropped_alert_type", "(JLcom/frostwire/jlibtorrent/swig/alerts_dropped_alert;)I", "")]
		public static unsafe int Alerts_dropped_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Alerts_dropped_alert p1)
		{
			const string __id = "alerts_dropped_alert_type.(JLcom/frostwire/jlibtorrent/swig/alerts_dropped_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='alerts_dropped_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.alerts_dropped_alert']]"
		[Register ("alerts_dropped_alert_what", "(JLcom/frostwire/jlibtorrent/swig/alerts_dropped_alert;)Ljava/lang/String;", "")]
		public static unsafe string Alerts_dropped_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Alerts_dropped_alert p1)
		{
			const string __id = "alerts_dropped_alert_what.(JLcom/frostwire/jlibtorrent/swig/alerts_dropped_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='all_get' and count(parameter)=0]"
		[Register ("all_get", "()J", "")]
		public static unsafe long All_get ()
		{
			const string __id = "all_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='already_connected_get' and count(parameter)=0]"
		[Register ("already_connected_get", "()I", "")]
		public static unsafe int Already_connected_get ()
		{
			const string __id = "already_connected_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_fails_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint']]"
		[Register ("announce_endpoint_fails_get", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)S", "")]
		public static unsafe short Announce_endpoint_fails_get (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1)
		{
			const string __id = "announce_endpoint_fails_get.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)S";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt16Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_fails_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint'] and parameter[3][@type='short']]"
		[Register ("announce_endpoint_fails_set", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;S)V", "")]
		public static unsafe void Announce_endpoint_fails_set (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1, short p2)
		{
			const string __id = "announce_endpoint_fails_set.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;S)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_get_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint']]"
		[Register ("announce_endpoint_get_message", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)J", "")]
		public static unsafe long Announce_endpoint_get_message (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1)
		{
			const string __id = "announce_endpoint_get_message.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_get_min_announce' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint']]"
		[Register ("announce_endpoint_get_min_announce", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)J", "")]
		public static unsafe long Announce_endpoint_get_min_announce (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1)
		{
			const string __id = "announce_endpoint_get_min_announce.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_get_next_announce' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint']]"
		[Register ("announce_endpoint_get_next_announce", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)J", "")]
		public static unsafe long Announce_endpoint_get_next_announce (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1)
		{
			const string __id = "announce_endpoint_get_next_announce.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_is_working' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint']]"
		[Register ("announce_endpoint_is_working", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)Z", "")]
		public static unsafe bool Announce_endpoint_is_working (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1)
		{
			const string __id = "announce_endpoint_is_working.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_last_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint']]"
		[Register ("announce_endpoint_last_error_get", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)J", "")]
		public static unsafe long Announce_endpoint_last_error_get (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1)
		{
			const string __id = "announce_endpoint_last_error_get.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_last_error_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("announce_endpoint_last_error_set", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;JLcom/frostwire/jlibtorrent/swig/error_code;)V", "")]
		public static unsafe void Announce_endpoint_last_error_set (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "announce_endpoint_last_error_set.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;JLcom/frostwire/jlibtorrent/swig/error_code;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_local_endpoint_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint']]"
		[Register ("announce_endpoint_local_endpoint_get", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)J", "")]
		public static unsafe long Announce_endpoint_local_endpoint_get (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1)
		{
			const string __id = "announce_endpoint_local_endpoint_get.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_local_endpoint_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint']]"
		[Register ("announce_endpoint_local_endpoint_set", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)V", "")]
		public static unsafe void Announce_endpoint_local_endpoint_set (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1, long p2, global::FrostWire.Libtorrent.Swig.Tcp_endpoint p3)
		{
			const string __id = "announce_endpoint_local_endpoint_set.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_scrape_complete_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint']]"
		[Register ("announce_endpoint_scrape_complete_get", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)I", "")]
		public static unsafe int Announce_endpoint_scrape_complete_get (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1)
		{
			const string __id = "announce_endpoint_scrape_complete_get.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_scrape_complete_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint'] and parameter[3][@type='int']]"
		[Register ("announce_endpoint_scrape_complete_set", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;I)V", "")]
		public static unsafe void Announce_endpoint_scrape_complete_set (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1, int p2)
		{
			const string __id = "announce_endpoint_scrape_complete_set.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_scrape_downloaded_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint']]"
		[Register ("announce_endpoint_scrape_downloaded_get", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)I", "")]
		public static unsafe int Announce_endpoint_scrape_downloaded_get (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1)
		{
			const string __id = "announce_endpoint_scrape_downloaded_get.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_scrape_downloaded_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint'] and parameter[3][@type='int']]"
		[Register ("announce_endpoint_scrape_downloaded_set", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;I)V", "")]
		public static unsafe void Announce_endpoint_scrape_downloaded_set (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1, int p2)
		{
			const string __id = "announce_endpoint_scrape_downloaded_set.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_scrape_incomplete_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint']]"
		[Register ("announce_endpoint_scrape_incomplete_get", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)I", "")]
		public static unsafe int Announce_endpoint_scrape_incomplete_get (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1)
		{
			const string __id = "announce_endpoint_scrape_incomplete_get.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_scrape_incomplete_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint'] and parameter[3][@type='int']]"
		[Register ("announce_endpoint_scrape_incomplete_set", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;I)V", "")]
		public static unsafe void Announce_endpoint_scrape_incomplete_set (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1, int p2)
		{
			const string __id = "announce_endpoint_scrape_incomplete_set.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_updating_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint']]"
		[Register ("announce_endpoint_updating_get", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)Z", "")]
		public static unsafe bool Announce_endpoint_updating_get (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1)
		{
			const string __id = "announce_endpoint_updating_get.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_updating_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint'] and parameter[3][@type='boolean']]"
		[Register ("announce_endpoint_updating_set", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;Z)V", "")]
		public static unsafe void Announce_endpoint_updating_set (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint p1, bool p2)
		{
			const string __id = "announce_endpoint_updating_set.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint_vector']]"
		[Register ("announce_endpoint_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;)J", "")]
		public static unsafe long Announce_endpoint_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint_vector p1)
		{
			const string __id = "announce_endpoint_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint_vector']]"
		[Register ("announce_endpoint_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;)V", "")]
		public static unsafe void Announce_endpoint_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint_vector p1)
		{
			const string __id = "announce_endpoint_vector_clear.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint_vector']]"
		[Register ("announce_endpoint_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;)Z", "")]
		public static unsafe bool Announce_endpoint_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint_vector p1)
		{
			const string __id = "announce_endpoint_vector_empty.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint_vector'] and parameter[3][@type='int']]"
		[Register ("announce_endpoint_vector_get", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;I)J", "")]
		public static unsafe long Announce_endpoint_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint_vector p1, int p2)
		{
			const string __id = "announce_endpoint_vector_get.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.announce_endpoint']]"
		[Register ("announce_endpoint_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)V", "")]
		public static unsafe void Announce_endpoint_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Announce_endpoint p3)
		{
			const string __id = "announce_endpoint_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;JLcom/frostwire/jlibtorrent/swig/announce_endpoint;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint_vector'] and parameter[3][@type='long']]"
		[Register ("announce_endpoint_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;J)V", "")]
		public static unsafe void Announce_endpoint_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint_vector p1, long p2)
		{
			const string __id = "announce_endpoint_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.announce_endpoint']]"
		[Register ("announce_endpoint_vector_set", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;IJLcom/frostwire/jlibtorrent/swig/announce_endpoint;)V", "")]
		public static unsafe void Announce_endpoint_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Announce_endpoint p4)
		{
			const string __id = "announce_endpoint_vector_set.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;IJLcom/frostwire/jlibtorrent/swig/announce_endpoint;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_endpoint_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_endpoint_vector']]"
		[Register ("announce_endpoint_vector_size", "(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;)J", "")]
		public static unsafe long Announce_endpoint_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Announce_endpoint_vector p1)
		{
			const string __id = "announce_endpoint_vector_size.(JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_endpoints_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry']]"
		[Register ("announce_entry_endpoints_get", "(JLcom/frostwire/jlibtorrent/swig/announce_entry;)J", "")]
		public static unsafe long Announce_entry_endpoints_get (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry p1)
		{
			const string __id = "announce_entry_endpoints_get.(JLcom/frostwire/jlibtorrent/swig/announce_entry;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_endpoints_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.announce_endpoint_vector']]"
		[Register ("announce_entry_endpoints_set", "(JLcom/frostwire/jlibtorrent/swig/announce_entry;JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;)V", "")]
		public static unsafe void Announce_entry_endpoints_set (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry p1, long p2, global::FrostWire.Libtorrent.Swig.Announce_endpoint_vector p3)
		{
			const string __id = "announce_entry_endpoints_set.(JLcom/frostwire/jlibtorrent/swig/announce_entry;JLcom/frostwire/jlibtorrent/swig/announce_endpoint_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_fail_limit_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry']]"
		[Register ("announce_entry_fail_limit_get", "(JLcom/frostwire/jlibtorrent/swig/announce_entry;)S", "")]
		public static unsafe short Announce_entry_fail_limit_get (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry p1)
		{
			const string __id = "announce_entry_fail_limit_get.(JLcom/frostwire/jlibtorrent/swig/announce_entry;)S";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt16Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_fail_limit_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry'] and parameter[3][@type='short']]"
		[Register ("announce_entry_fail_limit_set", "(JLcom/frostwire/jlibtorrent/swig/announce_entry;S)V", "")]
		public static unsafe void Announce_entry_fail_limit_set (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry p1, short p2)
		{
			const string __id = "announce_entry_fail_limit_set.(JLcom/frostwire/jlibtorrent/swig/announce_entry;S)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_get_trackerid' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry']]"
		[Register ("announce_entry_get_trackerid", "(JLcom/frostwire/jlibtorrent/swig/announce_entry;)J", "")]
		public static unsafe long Announce_entry_get_trackerid (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry p1)
		{
			const string __id = "announce_entry_get_trackerid.(JLcom/frostwire/jlibtorrent/swig/announce_entry;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_get_url' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry']]"
		[Register ("announce_entry_get_url", "(JLcom/frostwire/jlibtorrent/swig/announce_entry;)J", "")]
		public static unsafe long Announce_entry_get_url (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry p1)
		{
			const string __id = "announce_entry_get_url.(JLcom/frostwire/jlibtorrent/swig/announce_entry;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_set_trackerid' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("announce_entry_set_trackerid", "(JLcom/frostwire/jlibtorrent/swig/announce_entry;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Announce_entry_set_trackerid (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "announce_entry_set_trackerid.(JLcom/frostwire/jlibtorrent/swig/announce_entry;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_set_url' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("announce_entry_set_url", "(JLcom/frostwire/jlibtorrent/swig/announce_entry;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Announce_entry_set_url (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "announce_entry_set_url.(JLcom/frostwire/jlibtorrent/swig/announce_entry;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_source_client_get' and count(parameter)=0]"
		[Register ("announce_entry_source_client_get", "()I", "")]
		public static unsafe int Announce_entry_source_client_get ()
		{
			const string __id = "announce_entry_source_client_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_source_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry']]"
		[Register ("announce_entry_source_get", "(JLcom/frostwire/jlibtorrent/swig/announce_entry;)S", "")]
		public static unsafe short Announce_entry_source_get (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry p1)
		{
			const string __id = "announce_entry_source_get.(JLcom/frostwire/jlibtorrent/swig/announce_entry;)S";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt16Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_source_magnet_link_get' and count(parameter)=0]"
		[Register ("announce_entry_source_magnet_link_get", "()I", "")]
		public static unsafe int Announce_entry_source_magnet_link_get ()
		{
			const string __id = "announce_entry_source_magnet_link_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_source_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry'] and parameter[3][@type='short']]"
		[Register ("announce_entry_source_set", "(JLcom/frostwire/jlibtorrent/swig/announce_entry;S)V", "")]
		public static unsafe void Announce_entry_source_set (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry p1, short p2)
		{
			const string __id = "announce_entry_source_set.(JLcom/frostwire/jlibtorrent/swig/announce_entry;S)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_source_tex_get' and count(parameter)=0]"
		[Register ("announce_entry_source_tex_get", "()I", "")]
		public static unsafe int Announce_entry_source_tex_get ()
		{
			const string __id = "announce_entry_source_tex_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_source_torrent_get' and count(parameter)=0]"
		[Register ("announce_entry_source_torrent_get", "()I", "")]
		public static unsafe int Announce_entry_source_torrent_get ()
		{
			const string __id = "announce_entry_source_torrent_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_tier_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry']]"
		[Register ("announce_entry_tier_get", "(JLcom/frostwire/jlibtorrent/swig/announce_entry;)S", "")]
		public static unsafe short Announce_entry_tier_get (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry p1)
		{
			const string __id = "announce_entry_tier_get.(JLcom/frostwire/jlibtorrent/swig/announce_entry;)S";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt16Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_tier_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry'] and parameter[3][@type='short']]"
		[Register ("announce_entry_tier_set", "(JLcom/frostwire/jlibtorrent/swig/announce_entry;S)V", "")]
		public static unsafe void Announce_entry_tier_set (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry p1, short p2)
		{
			const string __id = "announce_entry_tier_set.(JLcom/frostwire/jlibtorrent/swig/announce_entry;S)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry_vector']]"
		[Register ("announce_entry_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;)J", "")]
		public static unsafe long Announce_entry_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry_vector p1)
		{
			const string __id = "announce_entry_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry_vector']]"
		[Register ("announce_entry_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;)V", "")]
		public static unsafe void Announce_entry_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry_vector p1)
		{
			const string __id = "announce_entry_vector_clear.(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry_vector']]"
		[Register ("announce_entry_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;)Z", "")]
		public static unsafe bool Announce_entry_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry_vector p1)
		{
			const string __id = "announce_entry_vector_empty.(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry_vector'] and parameter[3][@type='int']]"
		[Register ("announce_entry_vector_get", "(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;I)J", "")]
		public static unsafe long Announce_entry_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry_vector p1, int p2)
		{
			const string __id = "announce_entry_vector_get.(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.announce_entry']]"
		[Register ("announce_entry_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;JLcom/frostwire/jlibtorrent/swig/announce_entry;)V", "")]
		public static unsafe void Announce_entry_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Announce_entry p3)
		{
			const string __id = "announce_entry_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;JLcom/frostwire/jlibtorrent/swig/announce_entry;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry_vector'] and parameter[3][@type='long']]"
		[Register ("announce_entry_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;J)V", "")]
		public static unsafe void Announce_entry_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry_vector p1, long p2)
		{
			const string __id = "announce_entry_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.announce_entry']]"
		[Register ("announce_entry_vector_set", "(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;IJLcom/frostwire/jlibtorrent/swig/announce_entry;)V", "")]
		public static unsafe void Announce_entry_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Announce_entry p4)
		{
			const string __id = "announce_entry_vector_set.(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;IJLcom/frostwire/jlibtorrent/swig/announce_entry;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry_vector']]"
		[Register ("announce_entry_vector_size", "(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;)J", "")]
		public static unsafe long Announce_entry_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry_vector p1)
		{
			const string __id = "announce_entry_vector_size.(JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_verified_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry']]"
		[Register ("announce_entry_verified_get", "(JLcom/frostwire/jlibtorrent/swig/announce_entry;)Z", "")]
		public static unsafe bool Announce_entry_verified_get (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry p1)
		{
			const string __id = "announce_entry_verified_get.(JLcom/frostwire/jlibtorrent/swig/announce_entry;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='announce_entry_verified_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.announce_entry'] and parameter[3][@type='boolean']]"
		[Register ("announce_entry_verified_set", "(JLcom/frostwire/jlibtorrent/swig/announce_entry;Z)V", "")]
		public static unsafe void Announce_entry_verified_set (long p0, global::FrostWire.Libtorrent.Swig.Announce_entry p1, bool p2)
		{
			const string __id = "announce_entry_verified_set.(JLcom/frostwire/jlibtorrent/swig/announce_entry;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='apply_ip_filter_get' and count(parameter)=0]"
		[Register ("apply_ip_filter_get", "()J", "")]
		public static unsafe long Apply_ip_filter_get ()
		{
			const string __id = "apply_ip_filter_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='argument_list_too_long_get' and count(parameter)=0]"
		[Register ("argument_list_too_long_get", "()I", "")]
		public static unsafe int Argument_list_too_long_get ()
		{
			const string __id = "argument_list_too_long_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='argument_out_of_domain_get' and count(parameter)=0]"
		[Register ("argument_out_of_domain_get", "()I", "")]
		public static unsafe int Argument_out_of_domain_get ()
		{
			const string __id = "argument_out_of_domain_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='arm_neon_support' and count(parameter)=0]"
		[Register ("arm_neon_support", "()Z", "")]
		public static unsafe bool Arm_neon_support ()
		{
			const string __id = "arm_neon_support.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='auto_managed_get' and count(parameter)=0]"
		[Register ("auto_managed_get", "()J", "")]
		public static unsafe long Auto_managed_get ()
		{
			const string __id = "auto_managed_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bad_address_get' and count(parameter)=0]"
		[Register ("bad_address_get", "()I", "")]
		public static unsafe int Bad_address_get ()
		{
			const string __id = "bad_address_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bad_file_descriptor_get' and count(parameter)=0]"
		[Register ("bad_file_descriptor_get", "()I", "")]
		public static unsafe int Bad_file_descriptor_get ()
		{
			const string __id = "bad_file_descriptor_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bad_gateway_get' and count(parameter)=0]"
		[Register ("bad_gateway_get", "()I", "")]
		public static unsafe int Bad_gateway_get ()
		{
			const string __id = "bad_gateway_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bad_message_get' and count(parameter)=0]"
		[Register ("bad_message_get", "()I", "")]
		public static unsafe int Bad_message_get ()
		{
			const string __id = "bad_message_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bad_request_get' and count(parameter)=0]"
		[Register ("bad_request_get", "()I", "")]
		public static unsafe int Bad_request_get ()
		{
			const string __id = "bad_request_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bandwidth_state_flags_t_all' and count(parameter)=0]"
		[Register ("bandwidth_state_flags_t_all", "()J", "")]
		public static unsafe long Bandwidth_state_flags_t_all ()
		{
			const string __id = "bandwidth_state_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bandwidth_state_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t']]"
		[Register ("bandwidth_state_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)J", "")]
		public static unsafe long Bandwidth_state_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p3)
		{
			const string __id = "bandwidth_state_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bandwidth_state_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t']]"
		[Register ("bandwidth_state_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)Z", "")]
		public static unsafe bool Bandwidth_state_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p3)
		{
			const string __id = "bandwidth_state_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bandwidth_state_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t']]"
		[Register ("bandwidth_state_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)J", "")]
		public static unsafe long Bandwidth_state_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p1)
		{
			const string __id = "bandwidth_state_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bandwidth_state_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t']]"
		[Register ("bandwidth_state_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)Z", "")]
		public static unsafe bool Bandwidth_state_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p3)
		{
			const string __id = "bandwidth_state_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bandwidth_state_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t']]"
		[Register ("bandwidth_state_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)Z", "")]
		public static unsafe bool Bandwidth_state_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p1)
		{
			const string __id = "bandwidth_state_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bandwidth_state_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t']]"
		[Register ("bandwidth_state_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)J", "")]
		public static unsafe long Bandwidth_state_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p3)
		{
			const string __id = "bandwidth_state_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bandwidth_state_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t']]"
		[Register ("bandwidth_state_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)I", "")]
		public static unsafe int Bandwidth_state_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p1)
		{
			const string __id = "bandwidth_state_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bandwidth_state_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t']]"
		[Register ("bandwidth_state_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)J", "")]
		public static unsafe long Bandwidth_state_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p3)
		{
			const string __id = "bandwidth_state_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_no_error_get' and count(parameter)=0]"
		[Register ("bdecode_no_error_get", "()I", "")]
		public static unsafe int Bdecode_no_error_get ()
		{
			const string __id = "bdecode_no_error_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_bdecode' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("bdecode_node_bdecode", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/bdecode_node;JLcom/frostwire/jlibtorrent/swig/error_code;)I", "")]
		public static unsafe int Bdecode_node_bdecode (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Bdecode_node p3, long p4, global::FrostWire.Libtorrent.Swig.Error_code p5)
		{
			const string __id = "bdecode_node_bdecode.(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/bdecode_node;JLcom/frostwire/jlibtorrent/swig/error_code;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node']]"
		[Register ("bdecode_node_clear", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)V", "")]
		public static unsafe void Bdecode_node_clear (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1)
		{
			const string __id = "bdecode_node_clear.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_dict_at' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='int']]"
		[Register ("bdecode_node_dict_at", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;I)J", "")]
		public static unsafe long Bdecode_node_dict_at (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, int p2)
		{
			const string __id = "bdecode_node_dict_at.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_dict_find_dict_s' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='java.lang.String']]"
		[Register ("bdecode_node_dict_find_dict_s", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;)J", "")]
		public static unsafe long Bdecode_node_dict_find_dict_s (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, string p2)
		{
			const string __id = "bdecode_node_dict_find_dict_s.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;)J";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_dict_find_int_s' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='java.lang.String']]"
		[Register ("bdecode_node_dict_find_int_s", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;)J", "")]
		public static unsafe long Bdecode_node_dict_find_int_s (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, string p2)
		{
			const string __id = "bdecode_node_dict_find_int_s.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;)J";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_dict_find_int_value_s__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long']]"
		[Register ("bdecode_node_dict_find_int_value_s__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;J)J", "")]
		public static unsafe long Bdecode_node_dict_find_int_value_s__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, string p2, long p3)
		{
			const string __id = "bdecode_node_dict_find_int_value_s__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;J)J";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_dict_find_int_value_s__SWIG_1' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='java.lang.String']]"
		[Register ("bdecode_node_dict_find_int_value_s__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;)J", "")]
		public static unsafe long Bdecode_node_dict_find_int_value_s__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, string p2)
		{
			const string __id = "bdecode_node_dict_find_int_value_s__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;)J";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_dict_find_list_s' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='java.lang.String']]"
		[Register ("bdecode_node_dict_find_list_s", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;)J", "")]
		public static unsafe long Bdecode_node_dict_find_list_s (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, string p2)
		{
			const string __id = "bdecode_node_dict_find_list_s.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;)J";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_dict_find_s' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='java.lang.String']]"
		[Register ("bdecode_node_dict_find_s", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;)J", "")]
		public static unsafe long Bdecode_node_dict_find_s (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, string p2)
		{
			const string __id = "bdecode_node_dict_find_s.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;)J";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_dict_find_string_s' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='java.lang.String']]"
		[Register ("bdecode_node_dict_find_string_s", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;)J", "")]
		public static unsafe long Bdecode_node_dict_find_string_s (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, string p2)
		{
			const string __id = "bdecode_node_dict_find_string_s.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;)J";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_dict_find_string_value_s__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("bdecode_node_dict_find_string_value_s__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string Bdecode_node_dict_find_string_value_s__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, string p2, string p3)
		{
			const string __id = "bdecode_node_dict_find_string_value_s__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (native_p3);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_dict_find_string_value_s__SWIG_1' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='java.lang.String']]"
		[Register ("bdecode_node_dict_find_string_value_s__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string Bdecode_node_dict_find_string_value_s__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, string p2)
		{
			const string __id = "bdecode_node_dict_find_string_value_s__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_dict_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node']]"
		[Register ("bdecode_node_dict_size", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)I", "")]
		public static unsafe int Bdecode_node_dict_size (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1)
		{
			const string __id = "bdecode_node_dict_size.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_int_value' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node']]"
		[Register ("bdecode_node_int_value", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)J", "")]
		public static unsafe long Bdecode_node_int_value (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1)
		{
			const string __id = "bdecode_node_int_value.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_list_at' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='int']]"
		[Register ("bdecode_node_list_at", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;I)J", "")]
		public static unsafe long Bdecode_node_list_at (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, int p2)
		{
			const string __id = "bdecode_node_list_at.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_list_int_value_at__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='int'] and parameter[4][@type='long']]"
		[Register ("bdecode_node_list_int_value_at__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;IJ)J", "")]
		public static unsafe long Bdecode_node_list_int_value_at__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, int p2, long p3)
		{
			const string __id = "bdecode_node_list_int_value_at__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;IJ)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_list_int_value_at__SWIG_1' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='int']]"
		[Register ("bdecode_node_list_int_value_at__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;I)J", "")]
		public static unsafe long Bdecode_node_list_int_value_at__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, int p2)
		{
			const string __id = "bdecode_node_list_int_value_at__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_list_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node']]"
		[Register ("bdecode_node_list_size", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)I", "")]
		public static unsafe int Bdecode_node_list_size (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1)
		{
			const string __id = "bdecode_node_list_size.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_list_string_value_at_s__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='int'] and parameter[4][@type='java.lang.String']]"
		[Register ("bdecode_node_list_string_value_at_s__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;ILjava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string Bdecode_node_list_string_value_at_s__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, int p2, string p3)
		{
			const string __id = "bdecode_node_list_string_value_at_s__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;ILjava/lang/String;)Ljava/lang/String;";
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (native_p3);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_list_string_value_at_s__SWIG_1' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='int']]"
		[Register ("bdecode_node_list_string_value_at_s__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;I)Ljava/lang/String;", "")]
		public static unsafe string Bdecode_node_list_string_value_at_s__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, int p2)
		{
			const string __id = "bdecode_node_list_string_value_at_s__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;I)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_op_bool' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node']]"
		[Register ("bdecode_node_op_bool", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)Z", "")]
		public static unsafe bool Bdecode_node_op_bool (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1)
		{
			const string __id = "bdecode_node_op_bool.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_string_length' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node']]"
		[Register ("bdecode_node_string_length", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)I", "")]
		public static unsafe int Bdecode_node_string_length (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1)
		{
			const string __id = "bdecode_node_string_length.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_string_value_s' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node']]"
		[Register ("bdecode_node_string_value_s", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)Ljava/lang/String;", "")]
		public static unsafe string Bdecode_node_string_value_s (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1)
		{
			const string __id = "bdecode_node_string_value_s.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_to_string' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='boolean'] and parameter[4][@type='int']]"
		[Register ("bdecode_node_to_string", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;ZI)Ljava/lang/String;", "")]
		public static unsafe string Bdecode_node_to_string (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, bool p2, int p3)
		{
			const string __id = "bdecode_node_to_string.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;ZI)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bdecode_node_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node']]"
		[Register ("bdecode_node_type", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)I", "")]
		public static unsafe int Bdecode_node_type (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1)
		{
			const string __id = "bdecode_node_type.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bitset_96_all' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bitset_96']]"
		[Register ("bitset_96_all", "(JLcom/frostwire/jlibtorrent/swig/bitset_96;)Z", "")]
		public static unsafe bool Bitset_96_all (long p0, global::FrostWire.Libtorrent.Swig.Bitset_96 p1)
		{
			const string __id = "bitset_96_all.(JLcom/frostwire/jlibtorrent/swig/bitset_96;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bitset_96_any' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bitset_96']]"
		[Register ("bitset_96_any", "(JLcom/frostwire/jlibtorrent/swig/bitset_96;)Z", "")]
		public static unsafe bool Bitset_96_any (long p0, global::FrostWire.Libtorrent.Swig.Bitset_96 p1)
		{
			const string __id = "bitset_96_any.(JLcom/frostwire/jlibtorrent/swig/bitset_96;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bitset_96_count' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bitset_96']]"
		[Register ("bitset_96_count", "(JLcom/frostwire/jlibtorrent/swig/bitset_96;)J", "")]
		public static unsafe long Bitset_96_count (long p0, global::FrostWire.Libtorrent.Swig.Bitset_96 p1)
		{
			const string __id = "bitset_96_count.(JLcom/frostwire/jlibtorrent/swig/bitset_96;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bitset_96_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bitset_96'] and parameter[3][@type='long']]"
		[Register ("bitset_96_get", "(JLcom/frostwire/jlibtorrent/swig/bitset_96;J)Z", "")]
		public static unsafe bool Bitset_96_get (long p0, global::FrostWire.Libtorrent.Swig.Bitset_96 p1, long p2)
		{
			const string __id = "bitset_96_get.(JLcom/frostwire/jlibtorrent/swig/bitset_96;J)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bitset_96_none' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bitset_96']]"
		[Register ("bitset_96_none", "(JLcom/frostwire/jlibtorrent/swig/bitset_96;)Z", "")]
		public static unsafe bool Bitset_96_none (long p0, global::FrostWire.Libtorrent.Swig.Bitset_96 p1)
		{
			const string __id = "bitset_96_none.(JLcom/frostwire/jlibtorrent/swig/bitset_96;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bitset_96_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bitset_96']]"
		[Register ("bitset_96_size", "(JLcom/frostwire/jlibtorrent/swig/bitset_96;)J", "")]
		public static unsafe long Bitset_96_size (long p0, global::FrostWire.Libtorrent.Swig.Bitset_96 p1)
		{
			const string __id = "bitset_96_size.(JLcom/frostwire/jlibtorrent/swig/bitset_96;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bitset_96_test' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bitset_96'] and parameter[3][@type='long']]"
		[Register ("bitset_96_test", "(JLcom/frostwire/jlibtorrent/swig/bitset_96;J)Z", "")]
		public static unsafe bool Bitset_96_test (long p0, global::FrostWire.Libtorrent.Swig.Bitset_96 p1, long p2)
		{
			const string __id = "bitset_96_test.(JLcom/frostwire/jlibtorrent/swig/bitset_96;J)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_downloading_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("block_downloading_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Block_downloading_alert_SWIGUpcast (long p0)
		{
			const string __id = "block_downloading_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_downloading_alert_alert_type_get' and count(parameter)=0]"
		[Register ("block_downloading_alert_alert_type_get", "()I", "")]
		public static unsafe int Block_downloading_alert_alert_type_get ()
		{
			const string __id = "block_downloading_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_downloading_alert_block_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_downloading_alert']]"
		[Register ("block_downloading_alert_block_index_get", "(JLcom/frostwire/jlibtorrent/swig/block_downloading_alert;)I", "")]
		public static unsafe int Block_downloading_alert_block_index_get (long p0, global::FrostWire.Libtorrent.Swig.Block_downloading_alert p1)
		{
			const string __id = "block_downloading_alert_block_index_get.(JLcom/frostwire/jlibtorrent/swig/block_downloading_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_downloading_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_downloading_alert']]"
		[Register ("block_downloading_alert_category", "(JLcom/frostwire/jlibtorrent/swig/block_downloading_alert;)J", "")]
		public static unsafe long Block_downloading_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Block_downloading_alert p1)
		{
			const string __id = "block_downloading_alert_category.(JLcom/frostwire/jlibtorrent/swig/block_downloading_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_downloading_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_downloading_alert']]"
		[Register ("block_downloading_alert_message", "(JLcom/frostwire/jlibtorrent/swig/block_downloading_alert;)Ljava/lang/String;", "")]
		public static unsafe string Block_downloading_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Block_downloading_alert p1)
		{
			const string __id = "block_downloading_alert_message.(JLcom/frostwire/jlibtorrent/swig/block_downloading_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_downloading_alert_piece_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_downloading_alert']]"
		[Register ("block_downloading_alert_piece_index_get", "(JLcom/frostwire/jlibtorrent/swig/block_downloading_alert;)I", "")]
		public static unsafe int Block_downloading_alert_piece_index_get (long p0, global::FrostWire.Libtorrent.Swig.Block_downloading_alert p1)
		{
			const string __id = "block_downloading_alert_piece_index_get.(JLcom/frostwire/jlibtorrent/swig/block_downloading_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_downloading_alert_priority_get' and count(parameter)=0]"
		[Register ("block_downloading_alert_priority_get", "()I", "")]
		public static unsafe int Block_downloading_alert_priority_get ()
		{
			const string __id = "block_downloading_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_downloading_alert_static_category_get' and count(parameter)=0]"
		[Register ("block_downloading_alert_static_category_get", "()J", "")]
		public static unsafe long Block_downloading_alert_static_category_get ()
		{
			const string __id = "block_downloading_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_downloading_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_downloading_alert']]"
		[Register ("block_downloading_alert_type", "(JLcom/frostwire/jlibtorrent/swig/block_downloading_alert;)I", "")]
		public static unsafe int Block_downloading_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Block_downloading_alert p1)
		{
			const string __id = "block_downloading_alert_type.(JLcom/frostwire/jlibtorrent/swig/block_downloading_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_downloading_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_downloading_alert']]"
		[Register ("block_downloading_alert_what", "(JLcom/frostwire/jlibtorrent/swig/block_downloading_alert;)Ljava/lang/String;", "")]
		public static unsafe string Block_downloading_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Block_downloading_alert p1)
		{
			const string __id = "block_downloading_alert_what.(JLcom/frostwire/jlibtorrent/swig/block_downloading_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_finished_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("block_finished_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Block_finished_alert_SWIGUpcast (long p0)
		{
			const string __id = "block_finished_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_finished_alert_alert_type_get' and count(parameter)=0]"
		[Register ("block_finished_alert_alert_type_get", "()I", "")]
		public static unsafe int Block_finished_alert_alert_type_get ()
		{
			const string __id = "block_finished_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_finished_alert_block_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_finished_alert']]"
		[Register ("block_finished_alert_block_index_get", "(JLcom/frostwire/jlibtorrent/swig/block_finished_alert;)I", "")]
		public static unsafe int Block_finished_alert_block_index_get (long p0, global::FrostWire.Libtorrent.Swig.Block_finished_alert p1)
		{
			const string __id = "block_finished_alert_block_index_get.(JLcom/frostwire/jlibtorrent/swig/block_finished_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_finished_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_finished_alert']]"
		[Register ("block_finished_alert_category", "(JLcom/frostwire/jlibtorrent/swig/block_finished_alert;)J", "")]
		public static unsafe long Block_finished_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Block_finished_alert p1)
		{
			const string __id = "block_finished_alert_category.(JLcom/frostwire/jlibtorrent/swig/block_finished_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_finished_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_finished_alert']]"
		[Register ("block_finished_alert_message", "(JLcom/frostwire/jlibtorrent/swig/block_finished_alert;)Ljava/lang/String;", "")]
		public static unsafe string Block_finished_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Block_finished_alert p1)
		{
			const string __id = "block_finished_alert_message.(JLcom/frostwire/jlibtorrent/swig/block_finished_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_finished_alert_piece_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_finished_alert']]"
		[Register ("block_finished_alert_piece_index_get", "(JLcom/frostwire/jlibtorrent/swig/block_finished_alert;)I", "")]
		public static unsafe int Block_finished_alert_piece_index_get (long p0, global::FrostWire.Libtorrent.Swig.Block_finished_alert p1)
		{
			const string __id = "block_finished_alert_piece_index_get.(JLcom/frostwire/jlibtorrent/swig/block_finished_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_finished_alert_priority_get' and count(parameter)=0]"
		[Register ("block_finished_alert_priority_get", "()I", "")]
		public static unsafe int Block_finished_alert_priority_get ()
		{
			const string __id = "block_finished_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_finished_alert_static_category_get' and count(parameter)=0]"
		[Register ("block_finished_alert_static_category_get", "()J", "")]
		public static unsafe long Block_finished_alert_static_category_get ()
		{
			const string __id = "block_finished_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_finished_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_finished_alert']]"
		[Register ("block_finished_alert_type", "(JLcom/frostwire/jlibtorrent/swig/block_finished_alert;)I", "")]
		public static unsafe int Block_finished_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Block_finished_alert p1)
		{
			const string __id = "block_finished_alert_type.(JLcom/frostwire/jlibtorrent/swig/block_finished_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_finished_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_finished_alert']]"
		[Register ("block_finished_alert_what", "(JLcom/frostwire/jlibtorrent/swig/block_finished_alert;)Ljava/lang/String;", "")]
		public static unsafe string Block_finished_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Block_finished_alert p1)
		{
			const string __id = "block_finished_alert_what.(JLcom/frostwire/jlibtorrent/swig/block_finished_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_block_size_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info']]"
		[Register ("block_info_block_size_get", "(JLcom/frostwire/jlibtorrent/swig/block_info;)J", "")]
		public static unsafe long Block_info_block_size_get (long p0, global::FrostWire.Libtorrent.Swig.Block_info p1)
		{
			const string __id = "block_info_block_size_get.(JLcom/frostwire/jlibtorrent/swig/block_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_block_size_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info'] and parameter[3][@type='long']]"
		[Register ("block_info_block_size_set", "(JLcom/frostwire/jlibtorrent/swig/block_info;J)V", "")]
		public static unsafe void Block_info_block_size_set (long p0, global::FrostWire.Libtorrent.Swig.Block_info p1, long p2)
		{
			const string __id = "block_info_block_size_set.(JLcom/frostwire/jlibtorrent/swig/block_info;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_bytes_progress_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info']]"
		[Register ("block_info_bytes_progress_get", "(JLcom/frostwire/jlibtorrent/swig/block_info;)J", "")]
		public static unsafe long Block_info_bytes_progress_get (long p0, global::FrostWire.Libtorrent.Swig.Block_info p1)
		{
			const string __id = "block_info_bytes_progress_get.(JLcom/frostwire/jlibtorrent/swig/block_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_bytes_progress_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info'] and parameter[3][@type='long']]"
		[Register ("block_info_bytes_progress_set", "(JLcom/frostwire/jlibtorrent/swig/block_info;J)V", "")]
		public static unsafe void Block_info_bytes_progress_set (long p0, global::FrostWire.Libtorrent.Swig.Block_info p1, long p2)
		{
			const string __id = "block_info_bytes_progress_set.(JLcom/frostwire/jlibtorrent/swig/block_info;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_num_peers_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info']]"
		[Register ("block_info_num_peers_get", "(JLcom/frostwire/jlibtorrent/swig/block_info;)J", "")]
		public static unsafe long Block_info_num_peers_get (long p0, global::FrostWire.Libtorrent.Swig.Block_info p1)
		{
			const string __id = "block_info_num_peers_get.(JLcom/frostwire/jlibtorrent/swig/block_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_num_peers_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info'] and parameter[3][@type='long']]"
		[Register ("block_info_num_peers_set", "(JLcom/frostwire/jlibtorrent/swig/block_info;J)V", "")]
		public static unsafe void Block_info_num_peers_set (long p0, global::FrostWire.Libtorrent.Swig.Block_info p1, long p2)
		{
			const string __id = "block_info_num_peers_set.(JLcom/frostwire/jlibtorrent/swig/block_info;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_peer' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info']]"
		[Register ("block_info_peer", "(JLcom/frostwire/jlibtorrent/swig/block_info;)J", "")]
		public static unsafe long Block_info_peer (long p0, global::FrostWire.Libtorrent.Swig.Block_info p1)
		{
			const string __id = "block_info_peer.(JLcom/frostwire/jlibtorrent/swig/block_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_state_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info']]"
		[Register ("block_info_state_get", "(JLcom/frostwire/jlibtorrent/swig/block_info;)J", "")]
		public static unsafe long Block_info_state_get (long p0, global::FrostWire.Libtorrent.Swig.Block_info p1)
		{
			const string __id = "block_info_state_get.(JLcom/frostwire/jlibtorrent/swig/block_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_state_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info'] and parameter[3][@type='long']]"
		[Register ("block_info_state_set", "(JLcom/frostwire/jlibtorrent/swig/block_info;J)V", "")]
		public static unsafe void Block_info_state_set (long p0, global::FrostWire.Libtorrent.Swig.Block_info p1, long p2)
		{
			const string __id = "block_info_state_set.(JLcom/frostwire/jlibtorrent/swig/block_info;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info_vector']]"
		[Register ("block_info_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/block_info_vector;)J", "")]
		public static unsafe long Block_info_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Block_info_vector p1)
		{
			const string __id = "block_info_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/block_info_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info_vector']]"
		[Register ("block_info_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/block_info_vector;)V", "")]
		public static unsafe void Block_info_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Block_info_vector p1)
		{
			const string __id = "block_info_vector_clear.(JLcom/frostwire/jlibtorrent/swig/block_info_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info_vector']]"
		[Register ("block_info_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/block_info_vector;)Z", "")]
		public static unsafe bool Block_info_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Block_info_vector p1)
		{
			const string __id = "block_info_vector_empty.(JLcom/frostwire/jlibtorrent/swig/block_info_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info_vector'] and parameter[3][@type='int']]"
		[Register ("block_info_vector_get", "(JLcom/frostwire/jlibtorrent/swig/block_info_vector;I)J", "")]
		public static unsafe long Block_info_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Block_info_vector p1, int p2)
		{
			const string __id = "block_info_vector_get.(JLcom/frostwire/jlibtorrent/swig/block_info_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.block_info']]"
		[Register ("block_info_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/block_info_vector;JLcom/frostwire/jlibtorrent/swig/block_info;)V", "")]
		public static unsafe void Block_info_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Block_info_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Block_info p3)
		{
			const string __id = "block_info_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/block_info_vector;JLcom/frostwire/jlibtorrent/swig/block_info;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info_vector'] and parameter[3][@type='long']]"
		[Register ("block_info_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/block_info_vector;J)V", "")]
		public static unsafe void Block_info_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Block_info_vector p1, long p2)
		{
			const string __id = "block_info_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/block_info_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.block_info']]"
		[Register ("block_info_vector_set", "(JLcom/frostwire/jlibtorrent/swig/block_info_vector;IJLcom/frostwire/jlibtorrent/swig/block_info;)V", "")]
		public static unsafe void Block_info_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Block_info_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Block_info p4)
		{
			const string __id = "block_info_vector_set.(JLcom/frostwire/jlibtorrent/swig/block_info_vector;IJLcom/frostwire/jlibtorrent/swig/block_info;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_info_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_info_vector']]"
		[Register ("block_info_vector_size", "(JLcom/frostwire/jlibtorrent/swig/block_info_vector;)J", "")]
		public static unsafe long Block_info_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Block_info_vector p1)
		{
			const string __id = "block_info_vector_size.(JLcom/frostwire/jlibtorrent/swig/block_info_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_timeout_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("block_timeout_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Block_timeout_alert_SWIGUpcast (long p0)
		{
			const string __id = "block_timeout_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_timeout_alert_alert_type_get' and count(parameter)=0]"
		[Register ("block_timeout_alert_alert_type_get", "()I", "")]
		public static unsafe int Block_timeout_alert_alert_type_get ()
		{
			const string __id = "block_timeout_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_timeout_alert_block_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_timeout_alert']]"
		[Register ("block_timeout_alert_block_index_get", "(JLcom/frostwire/jlibtorrent/swig/block_timeout_alert;)I", "")]
		public static unsafe int Block_timeout_alert_block_index_get (long p0, global::FrostWire.Libtorrent.Swig.Block_timeout_alert p1)
		{
			const string __id = "block_timeout_alert_block_index_get.(JLcom/frostwire/jlibtorrent/swig/block_timeout_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_timeout_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_timeout_alert']]"
		[Register ("block_timeout_alert_category", "(JLcom/frostwire/jlibtorrent/swig/block_timeout_alert;)J", "")]
		public static unsafe long Block_timeout_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Block_timeout_alert p1)
		{
			const string __id = "block_timeout_alert_category.(JLcom/frostwire/jlibtorrent/swig/block_timeout_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_timeout_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_timeout_alert']]"
		[Register ("block_timeout_alert_message", "(JLcom/frostwire/jlibtorrent/swig/block_timeout_alert;)Ljava/lang/String;", "")]
		public static unsafe string Block_timeout_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Block_timeout_alert p1)
		{
			const string __id = "block_timeout_alert_message.(JLcom/frostwire/jlibtorrent/swig/block_timeout_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_timeout_alert_piece_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_timeout_alert']]"
		[Register ("block_timeout_alert_piece_index_get", "(JLcom/frostwire/jlibtorrent/swig/block_timeout_alert;)I", "")]
		public static unsafe int Block_timeout_alert_piece_index_get (long p0, global::FrostWire.Libtorrent.Swig.Block_timeout_alert p1)
		{
			const string __id = "block_timeout_alert_piece_index_get.(JLcom/frostwire/jlibtorrent/swig/block_timeout_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_timeout_alert_priority_get' and count(parameter)=0]"
		[Register ("block_timeout_alert_priority_get", "()I", "")]
		public static unsafe int Block_timeout_alert_priority_get ()
		{
			const string __id = "block_timeout_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_timeout_alert_static_category_get' and count(parameter)=0]"
		[Register ("block_timeout_alert_static_category_get", "()J", "")]
		public static unsafe long Block_timeout_alert_static_category_get ()
		{
			const string __id = "block_timeout_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_timeout_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_timeout_alert']]"
		[Register ("block_timeout_alert_type", "(JLcom/frostwire/jlibtorrent/swig/block_timeout_alert;)I", "")]
		public static unsafe int Block_timeout_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Block_timeout_alert p1)
		{
			const string __id = "block_timeout_alert_type.(JLcom/frostwire/jlibtorrent/swig/block_timeout_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_timeout_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_timeout_alert']]"
		[Register ("block_timeout_alert_what", "(JLcom/frostwire/jlibtorrent/swig/block_timeout_alert;)Ljava/lang/String;", "")]
		public static unsafe string Block_timeout_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Block_timeout_alert p1)
		{
			const string __id = "block_timeout_alert_what.(JLcom/frostwire/jlibtorrent/swig/block_timeout_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_uploaded_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("block_uploaded_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Block_uploaded_alert_SWIGUpcast (long p0)
		{
			const string __id = "block_uploaded_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_uploaded_alert_alert_type_get' and count(parameter)=0]"
		[Register ("block_uploaded_alert_alert_type_get", "()I", "")]
		public static unsafe int Block_uploaded_alert_alert_type_get ()
		{
			const string __id = "block_uploaded_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_uploaded_alert_block_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_uploaded_alert']]"
		[Register ("block_uploaded_alert_block_index_get", "(JLcom/frostwire/jlibtorrent/swig/block_uploaded_alert;)I", "")]
		public static unsafe int Block_uploaded_alert_block_index_get (long p0, global::FrostWire.Libtorrent.Swig.Block_uploaded_alert p1)
		{
			const string __id = "block_uploaded_alert_block_index_get.(JLcom/frostwire/jlibtorrent/swig/block_uploaded_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_uploaded_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_uploaded_alert']]"
		[Register ("block_uploaded_alert_category", "(JLcom/frostwire/jlibtorrent/swig/block_uploaded_alert;)J", "")]
		public static unsafe long Block_uploaded_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Block_uploaded_alert p1)
		{
			const string __id = "block_uploaded_alert_category.(JLcom/frostwire/jlibtorrent/swig/block_uploaded_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_uploaded_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_uploaded_alert']]"
		[Register ("block_uploaded_alert_message", "(JLcom/frostwire/jlibtorrent/swig/block_uploaded_alert;)Ljava/lang/String;", "")]
		public static unsafe string Block_uploaded_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Block_uploaded_alert p1)
		{
			const string __id = "block_uploaded_alert_message.(JLcom/frostwire/jlibtorrent/swig/block_uploaded_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_uploaded_alert_piece_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_uploaded_alert']]"
		[Register ("block_uploaded_alert_piece_index_get", "(JLcom/frostwire/jlibtorrent/swig/block_uploaded_alert;)I", "")]
		public static unsafe int Block_uploaded_alert_piece_index_get (long p0, global::FrostWire.Libtorrent.Swig.Block_uploaded_alert p1)
		{
			const string __id = "block_uploaded_alert_piece_index_get.(JLcom/frostwire/jlibtorrent/swig/block_uploaded_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_uploaded_alert_priority_get' and count(parameter)=0]"
		[Register ("block_uploaded_alert_priority_get", "()I", "")]
		public static unsafe int Block_uploaded_alert_priority_get ()
		{
			const string __id = "block_uploaded_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_uploaded_alert_static_category_get' and count(parameter)=0]"
		[Register ("block_uploaded_alert_static_category_get", "()J", "")]
		public static unsafe long Block_uploaded_alert_static_category_get ()
		{
			const string __id = "block_uploaded_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_uploaded_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_uploaded_alert']]"
		[Register ("block_uploaded_alert_type", "(JLcom/frostwire/jlibtorrent/swig/block_uploaded_alert;)I", "")]
		public static unsafe int Block_uploaded_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Block_uploaded_alert p1)
		{
			const string __id = "block_uploaded_alert_type.(JLcom/frostwire/jlibtorrent/swig/block_uploaded_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='block_uploaded_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.block_uploaded_alert']]"
		[Register ("block_uploaded_alert_what", "(JLcom/frostwire/jlibtorrent/swig/block_uploaded_alert;)Ljava/lang/String;", "")]
		public static unsafe string Block_uploaded_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Block_uploaded_alert p1)
		{
			const string __id = "block_uploaded_alert_what.(JLcom/frostwire/jlibtorrent/swig/block_uploaded_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bloom_filter_128_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bloom_filter_128']]"
		[Register ("bloom_filter_128_clear", "(JLcom/frostwire/jlibtorrent/swig/bloom_filter_128;)V", "")]
		public static unsafe void Bloom_filter_128_clear (long p0, global::FrostWire.Libtorrent.Swig.Bloom_filter_128 p1)
		{
			const string __id = "bloom_filter_128_clear.(JLcom/frostwire/jlibtorrent/swig/bloom_filter_128;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bloom_filter_128_find' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bloom_filter_128'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("bloom_filter_128_find", "(JLcom/frostwire/jlibtorrent/swig/bloom_filter_128;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)Z", "")]
		public static unsafe bool Bloom_filter_128_find (long p0, global::FrostWire.Libtorrent.Swig.Bloom_filter_128 p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "bloom_filter_128_find.(JLcom/frostwire/jlibtorrent/swig/bloom_filter_128;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bloom_filter_128_from_bytes' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bloom_filter_128'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("bloom_filter_128_from_bytes", "(JLcom/frostwire/jlibtorrent/swig/bloom_filter_128;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Bloom_filter_128_from_bytes (long p0, global::FrostWire.Libtorrent.Swig.Bloom_filter_128 p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "bloom_filter_128_from_bytes.(JLcom/frostwire/jlibtorrent/swig/bloom_filter_128;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bloom_filter_128_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bloom_filter_128'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("bloom_filter_128_set", "(JLcom/frostwire/jlibtorrent/swig/bloom_filter_128;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Bloom_filter_128_set (long p0, global::FrostWire.Libtorrent.Swig.Bloom_filter_128 p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "bloom_filter_128_set.(JLcom/frostwire/jlibtorrent/swig/bloom_filter_128;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bloom_filter_128_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bloom_filter_128']]"
		[Register ("bloom_filter_128_size", "(JLcom/frostwire/jlibtorrent/swig/bloom_filter_128;)F", "")]
		public static unsafe float Bloom_filter_128_size (long p0, global::FrostWire.Libtorrent.Swig.Bloom_filter_128 p1)
		{
			const string __id = "bloom_filter_128_size.(JLcom/frostwire/jlibtorrent/swig/bloom_filter_128;)F";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeSingleMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bloom_filter_128_to_bytes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bloom_filter_128']]"
		[Register ("bloom_filter_128_to_bytes", "(JLcom/frostwire/jlibtorrent/swig/bloom_filter_128;)J", "")]
		public static unsafe long Bloom_filter_128_to_bytes (long p0, global::FrostWire.Libtorrent.Swig.Bloom_filter_128 p1)
		{
			const string __id = "bloom_filter_128_to_bytes.(JLcom/frostwire/jlibtorrent/swig/bloom_filter_128;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bloom_filter_256_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bloom_filter_256']]"
		[Register ("bloom_filter_256_clear", "(JLcom/frostwire/jlibtorrent/swig/bloom_filter_256;)V", "")]
		public static unsafe void Bloom_filter_256_clear (long p0, global::FrostWire.Libtorrent.Swig.Bloom_filter_256 p1)
		{
			const string __id = "bloom_filter_256_clear.(JLcom/frostwire/jlibtorrent/swig/bloom_filter_256;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bloom_filter_256_find' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bloom_filter_256'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("bloom_filter_256_find", "(JLcom/frostwire/jlibtorrent/swig/bloom_filter_256;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)Z", "")]
		public static unsafe bool Bloom_filter_256_find (long p0, global::FrostWire.Libtorrent.Swig.Bloom_filter_256 p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "bloom_filter_256_find.(JLcom/frostwire/jlibtorrent/swig/bloom_filter_256;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bloom_filter_256_from_bytes' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bloom_filter_256'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("bloom_filter_256_from_bytes", "(JLcom/frostwire/jlibtorrent/swig/bloom_filter_256;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Bloom_filter_256_from_bytes (long p0, global::FrostWire.Libtorrent.Swig.Bloom_filter_256 p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "bloom_filter_256_from_bytes.(JLcom/frostwire/jlibtorrent/swig/bloom_filter_256;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bloom_filter_256_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bloom_filter_256'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("bloom_filter_256_set", "(JLcom/frostwire/jlibtorrent/swig/bloom_filter_256;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Bloom_filter_256_set (long p0, global::FrostWire.Libtorrent.Swig.Bloom_filter_256 p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "bloom_filter_256_set.(JLcom/frostwire/jlibtorrent/swig/bloom_filter_256;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bloom_filter_256_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bloom_filter_256']]"
		[Register ("bloom_filter_256_size", "(JLcom/frostwire/jlibtorrent/swig/bloom_filter_256;)F", "")]
		public static unsafe float Bloom_filter_256_size (long p0, global::FrostWire.Libtorrent.Swig.Bloom_filter_256 p1)
		{
			const string __id = "bloom_filter_256_size.(JLcom/frostwire/jlibtorrent/swig/bloom_filter_256;)F";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeSingleMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bloom_filter_256_to_bytes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bloom_filter_256']]"
		[Register ("bloom_filter_256_to_bytes", "(JLcom/frostwire/jlibtorrent/swig/bloom_filter_256;)J", "")]
		public static unsafe long Bloom_filter_256_to_bytes (long p0, global::FrostWire.Libtorrent.Swig.Bloom_filter_256 p1)
		{
			const string __id = "bloom_filter_256_to_bytes.(JLcom/frostwire/jlibtorrent/swig/bloom_filter_256;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='boost_lib_version' and count(parameter)=0]"
		[Register ("boost_lib_version", "()Ljava/lang/String;", "")]
		public static unsafe string Boost_lib_version ()
		{
			const string __id = "boost_lib_version.()Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='boost_version' and count(parameter)=0]"
		[Register ("boost_version", "()I", "")]
		public static unsafe int Boost_version ()
		{
			const string __id = "boost_version.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='broken_pipe_get' and count(parameter)=0]"
		[Register ("broken_pipe_get", "()I", "")]
		public static unsafe int Broken_pipe_get ()
		{
			const string __id = "broken_pipe_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bt_peer_connection_handle_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("bt_peer_connection_handle_SWIGUpcast", "(J)J", "")]
		public static unsafe long Bt_peer_connection_handle_SWIGUpcast (long p0)
		{
			const string __id = "bt_peer_connection_handle_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bt_peer_connection_handle_packet_finished' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bt_peer_connection_handle']]"
		[Register ("bt_peer_connection_handle_packet_finished", "(JLcom/frostwire/jlibtorrent/swig/bt_peer_connection_handle;)Z", "")]
		public static unsafe bool Bt_peer_connection_handle_packet_finished (long p0, global::FrostWire.Libtorrent.Swig.Bt_peer_connection_handle p1)
		{
			const string __id = "bt_peer_connection_handle_packet_finished.(JLcom/frostwire/jlibtorrent/swig/bt_peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bt_peer_connection_handle_support_extensions' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bt_peer_connection_handle']]"
		[Register ("bt_peer_connection_handle_support_extensions", "(JLcom/frostwire/jlibtorrent/swig/bt_peer_connection_handle;)Z", "")]
		public static unsafe bool Bt_peer_connection_handle_support_extensions (long p0, global::FrostWire.Libtorrent.Swig.Bt_peer_connection_handle p1)
		{
			const string __id = "bt_peer_connection_handle_support_extensions.(JLcom/frostwire/jlibtorrent/swig/bt_peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='bt_peer_connection_handle_supports_encryption' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bt_peer_connection_handle']]"
		[Register ("bt_peer_connection_handle_supports_encryption", "(JLcom/frostwire/jlibtorrent/swig/bt_peer_connection_handle;)Z", "")]
		public static unsafe bool Bt_peer_connection_handle_supports_encryption (long p0, global::FrostWire.Libtorrent.Swig.Bt_peer_connection_handle p1)
		{
			const string __id = "bt_peer_connection_handle_supports_encryption.(JLcom/frostwire/jlibtorrent/swig/bt_peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_const_span_back' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_const_span']]"
		[Register ("byte_const_span_back", "(JLcom/frostwire/jlibtorrent/swig/byte_const_span;)B", "")]
		public static unsafe sbyte Byte_const_span_back (long p0, global::FrostWire.Libtorrent.Swig.Byte_const_span p1)
		{
			const string __id = "byte_const_span_back.(JLcom/frostwire/jlibtorrent/swig/byte_const_span;)B";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeSByteMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_const_span_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_const_span']]"
		[Register ("byte_const_span_empty", "(JLcom/frostwire/jlibtorrent/swig/byte_const_span;)Z", "")]
		public static unsafe bool Byte_const_span_empty (long p0, global::FrostWire.Libtorrent.Swig.Byte_const_span p1)
		{
			const string __id = "byte_const_span_empty.(JLcom/frostwire/jlibtorrent/swig/byte_const_span;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_const_span_first' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_const_span'] and parameter[3][@type='long']]"
		[Register ("byte_const_span_first", "(JLcom/frostwire/jlibtorrent/swig/byte_const_span;J)J", "")]
		public static unsafe long Byte_const_span_first (long p0, global::FrostWire.Libtorrent.Swig.Byte_const_span p1, long p2)
		{
			const string __id = "byte_const_span_first.(JLcom/frostwire/jlibtorrent/swig/byte_const_span;J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_const_span_front' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_const_span']]"
		[Register ("byte_const_span_front", "(JLcom/frostwire/jlibtorrent/swig/byte_const_span;)B", "")]
		public static unsafe sbyte Byte_const_span_front (long p0, global::FrostWire.Libtorrent.Swig.Byte_const_span p1)
		{
			const string __id = "byte_const_span_front.(JLcom/frostwire/jlibtorrent/swig/byte_const_span;)B";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeSByteMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_const_span_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_const_span'] and parameter[3][@type='long']]"
		[Register ("byte_const_span_get", "(JLcom/frostwire/jlibtorrent/swig/byte_const_span;J)B", "")]
		public static unsafe sbyte Byte_const_span_get (long p0, global::FrostWire.Libtorrent.Swig.Byte_const_span p1, long p2)
		{
			const string __id = "byte_const_span_get.(JLcom/frostwire/jlibtorrent/swig/byte_const_span;J)B";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeSByteMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_const_span_last' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_const_span'] and parameter[3][@type='long']]"
		[Register ("byte_const_span_last", "(JLcom/frostwire/jlibtorrent/swig/byte_const_span;J)J", "")]
		public static unsafe long Byte_const_span_last (long p0, global::FrostWire.Libtorrent.Swig.Byte_const_span p1, long p2)
		{
			const string __id = "byte_const_span_last.(JLcom/frostwire/jlibtorrent/swig/byte_const_span;J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_const_span_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_const_span']]"
		[Register ("byte_const_span_size", "(JLcom/frostwire/jlibtorrent/swig/byte_const_span;)J", "")]
		public static unsafe long Byte_const_span_size (long p0, global::FrostWire.Libtorrent.Swig.Byte_const_span p1)
		{
			const string __id = "byte_const_span_size.(JLcom/frostwire/jlibtorrent/swig/byte_const_span;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_const_span_subspan__SWIG_0' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_const_span'] and parameter[3][@type='long']]"
		[Register ("byte_const_span_subspan__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/byte_const_span;J)J", "")]
		public static unsafe long Byte_const_span_subspan__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Byte_const_span p1, long p2)
		{
			const string __id = "byte_const_span_subspan__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/byte_const_span;J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_const_span_subspan__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_const_span'] and parameter[3][@type='long'] and parameter[4][@type='long']]"
		[Register ("byte_const_span_subspan__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/byte_const_span;JJ)J", "")]
		public static unsafe long Byte_const_span_subspan__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Byte_const_span p1, long p2, long p3)
		{
			const string __id = "byte_const_span_subspan__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/byte_const_span;JJ)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_span_back' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_span']]"
		[Register ("byte_span_back", "(JLcom/frostwire/jlibtorrent/swig/byte_span;)B", "")]
		public static unsafe sbyte Byte_span_back (long p0, global::FrostWire.Libtorrent.Swig.Byte_span p1)
		{
			const string __id = "byte_span_back.(JLcom/frostwire/jlibtorrent/swig/byte_span;)B";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeSByteMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_span_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_span']]"
		[Register ("byte_span_empty", "(JLcom/frostwire/jlibtorrent/swig/byte_span;)Z", "")]
		public static unsafe bool Byte_span_empty (long p0, global::FrostWire.Libtorrent.Swig.Byte_span p1)
		{
			const string __id = "byte_span_empty.(JLcom/frostwire/jlibtorrent/swig/byte_span;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_span_first' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_span'] and parameter[3][@type='long']]"
		[Register ("byte_span_first", "(JLcom/frostwire/jlibtorrent/swig/byte_span;J)J", "")]
		public static unsafe long Byte_span_first (long p0, global::FrostWire.Libtorrent.Swig.Byte_span p1, long p2)
		{
			const string __id = "byte_span_first.(JLcom/frostwire/jlibtorrent/swig/byte_span;J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_span_front' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_span']]"
		[Register ("byte_span_front", "(JLcom/frostwire/jlibtorrent/swig/byte_span;)B", "")]
		public static unsafe sbyte Byte_span_front (long p0, global::FrostWire.Libtorrent.Swig.Byte_span p1)
		{
			const string __id = "byte_span_front.(JLcom/frostwire/jlibtorrent/swig/byte_span;)B";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeSByteMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_span_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_span'] and parameter[3][@type='long']]"
		[Register ("byte_span_get", "(JLcom/frostwire/jlibtorrent/swig/byte_span;J)B", "")]
		public static unsafe sbyte Byte_span_get (long p0, global::FrostWire.Libtorrent.Swig.Byte_span p1, long p2)
		{
			const string __id = "byte_span_get.(JLcom/frostwire/jlibtorrent/swig/byte_span;J)B";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeSByteMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_span_last' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_span'] and parameter[3][@type='long']]"
		[Register ("byte_span_last", "(JLcom/frostwire/jlibtorrent/swig/byte_span;J)J", "")]
		public static unsafe long Byte_span_last (long p0, global::FrostWire.Libtorrent.Swig.Byte_span p1, long p2)
		{
			const string __id = "byte_span_last.(JLcom/frostwire/jlibtorrent/swig/byte_span;J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_span_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_span'] and parameter[3][@type='long'] and parameter[4][@type='byte']]"
		[Register ("byte_span_set", "(JLcom/frostwire/jlibtorrent/swig/byte_span;JB)V", "")]
		public static unsafe void Byte_span_set (long p0, global::FrostWire.Libtorrent.Swig.Byte_span p1, long p2, sbyte p3)
		{
			const string __id = "byte_span_set.(JLcom/frostwire/jlibtorrent/swig/byte_span;JB)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_span_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_span']]"
		[Register ("byte_span_size", "(JLcom/frostwire/jlibtorrent/swig/byte_span;)J", "")]
		public static unsafe long Byte_span_size (long p0, global::FrostWire.Libtorrent.Swig.Byte_span p1)
		{
			const string __id = "byte_span_size.(JLcom/frostwire/jlibtorrent/swig/byte_span;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_span_subspan__SWIG_0' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_span'] and parameter[3][@type='long']]"
		[Register ("byte_span_subspan__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/byte_span;J)J", "")]
		public static unsafe long Byte_span_subspan__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Byte_span p1, long p2)
		{
			const string __id = "byte_span_subspan__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/byte_span;J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_span_subspan__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_span'] and parameter[3][@type='long'] and parameter[4][@type='long']]"
		[Register ("byte_span_subspan__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/byte_span;JJ)J", "")]
		public static unsafe long Byte_span_subspan__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Byte_span p1, long p2, long p3)
		{
			const string __id = "byte_span_subspan__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/byte_span;JJ)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("byte_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J", "")]
		public static unsafe long Byte_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1)
		{
			const string __id = "byte_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("byte_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Byte_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1)
		{
			const string __id = "byte_vector_clear.(JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("byte_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;)Z", "")]
		public static unsafe bool Byte_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1)
		{
			const string __id = "byte_vector_empty.(JLcom/frostwire/jlibtorrent/swig/byte_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[3][@type='int']]"
		[Register ("byte_vector_get", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;I)B", "")]
		public static unsafe sbyte Byte_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1, int p2)
		{
			const string __id = "byte_vector_get.(JLcom/frostwire/jlibtorrent/swig/byte_vector;I)B";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeSByteMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_vector_push_back' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[3][@type='byte']]"
		[Register ("byte_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;B)V", "")]
		public static unsafe void Byte_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1, sbyte p2)
		{
			const string __id = "byte_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/byte_vector;B)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[3][@type='long']]"
		[Register ("byte_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;J)V", "")]
		public static unsafe void Byte_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1, long p2)
		{
			const string __id = "byte_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/byte_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_vector_resize' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[3][@type='long']]"
		[Register ("byte_vector_resize", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;J)V", "")]
		public static unsafe void Byte_vector_resize (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1, long p2)
		{
			const string __id = "byte_vector_resize.(JLcom/frostwire/jlibtorrent/swig/byte_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_vector_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[3][@type='int'] and parameter[4][@type='byte']]"
		[Register ("byte_vector_set", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;IB)V", "")]
		public static unsafe void Byte_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1, int p2, sbyte p3)
		{
			const string __id = "byte_vector_set.(JLcom/frostwire/jlibtorrent/swig/byte_vector;IB)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("byte_vector_size", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J", "")]
		public static unsafe long Byte_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1)
		{
			const string __id = "byte_vector_size.(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_vectors_pair_first_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vectors_pair']]"
		[Register ("byte_vectors_pair_first_get", "(JLcom/frostwire/jlibtorrent/swig/byte_vectors_pair;)J", "")]
		public static unsafe long Byte_vectors_pair_first_get (long p0, global::FrostWire.Libtorrent.Swig.Byte_vectors_pair p1)
		{
			const string __id = "byte_vectors_pair_first_get.(JLcom/frostwire/jlibtorrent/swig/byte_vectors_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_vectors_pair_first_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vectors_pair'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("byte_vectors_pair_first_set", "(JLcom/frostwire/jlibtorrent/swig/byte_vectors_pair;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Byte_vectors_pair_first_set (long p0, global::FrostWire.Libtorrent.Swig.Byte_vectors_pair p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "byte_vectors_pair_first_set.(JLcom/frostwire/jlibtorrent/swig/byte_vectors_pair;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_vectors_pair_second_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vectors_pair']]"
		[Register ("byte_vectors_pair_second_get", "(JLcom/frostwire/jlibtorrent/swig/byte_vectors_pair;)J", "")]
		public static unsafe long Byte_vectors_pair_second_get (long p0, global::FrostWire.Libtorrent.Swig.Byte_vectors_pair p1)
		{
			const string __id = "byte_vectors_pair_second_get.(JLcom/frostwire/jlibtorrent/swig/byte_vectors_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='byte_vectors_pair_second_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vectors_pair'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("byte_vectors_pair_second_set", "(JLcom/frostwire/jlibtorrent/swig/byte_vectors_pair;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Byte_vectors_pair_second_set (long p0, global::FrostWire.Libtorrent.Swig.Byte_vectors_pair p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "byte_vectors_pair_second_set.(JLcom/frostwire/jlibtorrent/swig/byte_vectors_pair;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='cache_flushed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("cache_flushed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Cache_flushed_alert_SWIGUpcast (long p0)
		{
			const string __id = "cache_flushed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='cache_flushed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("cache_flushed_alert_alert_type_get", "()I", "")]
		public static unsafe int Cache_flushed_alert_alert_type_get ()
		{
			const string __id = "cache_flushed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='cache_flushed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.cache_flushed_alert']]"
		[Register ("cache_flushed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/cache_flushed_alert;)J", "")]
		public static unsafe long Cache_flushed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Cache_flushed_alert p1)
		{
			const string __id = "cache_flushed_alert_category.(JLcom/frostwire/jlibtorrent/swig/cache_flushed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='cache_flushed_alert_priority_get' and count(parameter)=0]"
		[Register ("cache_flushed_alert_priority_get", "()I", "")]
		public static unsafe int Cache_flushed_alert_priority_get ()
		{
			const string __id = "cache_flushed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='cache_flushed_alert_static_category_get' and count(parameter)=0]"
		[Register ("cache_flushed_alert_static_category_get", "()J", "")]
		public static unsafe long Cache_flushed_alert_static_category_get ()
		{
			const string __id = "cache_flushed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='cache_flushed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.cache_flushed_alert']]"
		[Register ("cache_flushed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/cache_flushed_alert;)I", "")]
		public static unsafe int Cache_flushed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Cache_flushed_alert p1)
		{
			const string __id = "cache_flushed_alert_type.(JLcom/frostwire/jlibtorrent/swig/cache_flushed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='cache_flushed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.cache_flushed_alert']]"
		[Register ("cache_flushed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/cache_flushed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Cache_flushed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Cache_flushed_alert p1)
		{
			const string __id = "cache_flushed_alert_what.(JLcom/frostwire/jlibtorrent/swig/cache_flushed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='close_reason_t_encryption_error_get' and count(parameter)=0]"
		[Register ("close_reason_t_encryption_error_get", "()I", "")]
		public static unsafe int Close_reason_t_encryption_error_get ()
		{
			const string __id = "close_reason_t_encryption_error_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='close_reason_t_none_get' and count(parameter)=0]"
		[Register ("close_reason_t_none_get", "()I", "")]
		public static unsafe int Close_reason_t_none_get ()
		{
			const string __id = "close_reason_t_none_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='connection_aborted_get' and count(parameter)=0]"
		[Register ("connection_aborted_get", "()I", "")]
		public static unsafe int Connection_aborted_get ()
		{
			const string __id = "connection_aborted_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='connection_already_in_progress_get' and count(parameter)=0]"
		[Register ("connection_already_in_progress_get", "()I", "")]
		public static unsafe int Connection_already_in_progress_get ()
		{
			const string __id = "connection_already_in_progress_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='connection_refused_get' and count(parameter)=0]"
		[Register ("connection_refused_get", "()I", "")]
		public static unsafe int Connection_refused_get ()
		{
			const string __id = "connection_refused_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='connection_reset_get' and count(parameter)=0]"
		[Register ("connection_reset_get", "()I", "")]
		public static unsafe int Connection_reset_get ()
		{
			const string __id = "connection_reset_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='cont_get' and count(parameter)=0]"
		[Register ("cont_get", "()I", "")]
		public static unsafe int Cont_get ()
		{
			const string __id = "cont_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_flags_t_all' and count(parameter)=0]"
		[Register ("create_flags_t_all", "()J", "")]
		public static unsafe long Create_flags_t_all ()
		{
			const string __id = "create_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.create_flags_t']]"
		[Register ("create_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/create_flags_t;JLcom/frostwire/jlibtorrent/swig/create_flags_t;)J", "")]
		public static unsafe long Create_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Create_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Create_flags_t p3)
		{
			const string __id = "create_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/create_flags_t;JLcom/frostwire/jlibtorrent/swig/create_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.create_flags_t']]"
		[Register ("create_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/create_flags_t;JLcom/frostwire/jlibtorrent/swig/create_flags_t;)Z", "")]
		public static unsafe bool Create_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Create_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Create_flags_t p3)
		{
			const string __id = "create_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/create_flags_t;JLcom/frostwire/jlibtorrent/swig/create_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_flags_t']]"
		[Register ("create_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/create_flags_t;)J", "")]
		public static unsafe long Create_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Create_flags_t p1)
		{
			const string __id = "create_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/create_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.create_flags_t']]"
		[Register ("create_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/create_flags_t;JLcom/frostwire/jlibtorrent/swig/create_flags_t;)Z", "")]
		public static unsafe bool Create_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Create_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Create_flags_t p3)
		{
			const string __id = "create_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/create_flags_t;JLcom/frostwire/jlibtorrent/swig/create_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_flags_t']]"
		[Register ("create_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/create_flags_t;)Z", "")]
		public static unsafe bool Create_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Create_flags_t p1)
		{
			const string __id = "create_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/create_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.create_flags_t']]"
		[Register ("create_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/create_flags_t;JLcom/frostwire/jlibtorrent/swig/create_flags_t;)J", "")]
		public static unsafe long Create_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Create_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Create_flags_t p3)
		{
			const string __id = "create_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/create_flags_t;JLcom/frostwire/jlibtorrent/swig/create_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_flags_t']]"
		[Register ("create_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/create_flags_t;)I", "")]
		public static unsafe int Create_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Create_flags_t p1)
		{
			const string __id = "create_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/create_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.create_flags_t']]"
		[Register ("create_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/create_flags_t;JLcom/frostwire/jlibtorrent/swig/create_flags_t;)J", "")]
		public static unsafe long Create_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Create_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Create_flags_t p3)
		{
			const string __id = "create_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/create_flags_t;JLcom/frostwire/jlibtorrent/swig/create_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_add_collection' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='java.lang.String']]"
		[Register ("create_torrent_add_collection", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;)V", "")]
		public static unsafe void Create_torrent_add_collection (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, string p2)
		{
			const string __id = "create_torrent_add_collection.(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_add_http_seed' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='java.lang.String']]"
		[Register ("create_torrent_add_http_seed", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;)V", "")]
		public static unsafe void Create_torrent_add_http_seed (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, string p2)
		{
			const string __id = "create_torrent_add_http_seed.(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_add_node' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_int_pair']]"
		[Register ("create_torrent_add_node", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;JLcom/frostwire/jlibtorrent/swig/string_int_pair;)V", "")]
		public static unsafe void Create_torrent_add_node (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, long p2, global::FrostWire.Libtorrent.Swig.String_int_pair p3)
		{
			const string __id = "create_torrent_add_node.(JLcom/frostwire/jlibtorrent/swig/create_torrent;JLcom/frostwire/jlibtorrent/swig/string_int_pair;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_add_similar_torrent' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("create_torrent_add_similar_torrent", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Create_torrent_add_similar_torrent (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "create_torrent_add_similar_torrent.(JLcom/frostwire/jlibtorrent/swig/create_torrent;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_add_tracker' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int']]"
		[Register ("create_torrent_add_tracker", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;I)V", "")]
		public static unsafe void Create_torrent_add_tracker (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, string p2, int p3)
		{
			const string __id = "create_torrent_add_tracker.(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;I)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_add_url_seed' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='java.lang.String']]"
		[Register ("create_torrent_add_url_seed", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;)V", "")]
		public static unsafe void Create_torrent_add_url_seed (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, string p2)
		{
			const string __id = "create_torrent_add_url_seed.(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_files' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent']]"
		[Register ("create_torrent_files", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;)J", "")]
		public static unsafe long Create_torrent_files (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1)
		{
			const string __id = "create_torrent_files.(JLcom/frostwire/jlibtorrent/swig/create_torrent;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_generate' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent']]"
		[Register ("create_torrent_generate", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;)J", "")]
		public static unsafe long Create_torrent_generate (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1)
		{
			const string __id = "create_torrent_generate.(JLcom/frostwire/jlibtorrent/swig/create_torrent;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_merkle_get' and count(parameter)=0]"
		[Register ("create_torrent_merkle_get", "()J", "")]
		public static unsafe long Create_torrent_merkle_get ()
		{
			const string __id = "create_torrent_merkle_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_merkle_tree' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent']]"
		[Register ("create_torrent_merkle_tree", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;)J", "")]
		public static unsafe long Create_torrent_merkle_tree (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1)
		{
			const string __id = "create_torrent_merkle_tree.(JLcom/frostwire/jlibtorrent/swig/create_torrent;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_modification_time_get' and count(parameter)=0]"
		[Register ("create_torrent_modification_time_get", "()J", "")]
		public static unsafe long Create_torrent_modification_time_get ()
		{
			const string __id = "create_torrent_modification_time_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_mutable_torrent_support_get' and count(parameter)=0]"
		[Register ("create_torrent_mutable_torrent_support_get", "()J", "")]
		public static unsafe long Create_torrent_mutable_torrent_support_get ()
		{
			const string __id = "create_torrent_mutable_torrent_support_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_num_pieces' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent']]"
		[Register ("create_torrent_num_pieces", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;)I", "")]
		public static unsafe int Create_torrent_num_pieces (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1)
		{
			const string __id = "create_torrent_num_pieces.(JLcom/frostwire/jlibtorrent/swig/create_torrent;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_optimize_alignment_get' and count(parameter)=0]"
		[Register ("create_torrent_optimize_alignment_get", "()J", "")]
		public static unsafe long Create_torrent_optimize_alignment_get ()
		{
			const string __id = "create_torrent_optimize_alignment_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_piece_length' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent']]"
		[Register ("create_torrent_piece_length", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;)I", "")]
		public static unsafe int Create_torrent_piece_length (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1)
		{
			const string __id = "create_torrent_piece_length.(JLcom/frostwire/jlibtorrent/swig/create_torrent;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_piece_size' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='int']]"
		[Register ("create_torrent_piece_size", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;I)I", "")]
		public static unsafe int Create_torrent_piece_size (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, int p2)
		{
			const string __id = "create_torrent_piece_size.(JLcom/frostwire/jlibtorrent/swig/create_torrent;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_priv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent']]"
		[Register ("create_torrent_priv", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;)Z", "")]
		public static unsafe bool Create_torrent_priv (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1)
		{
			const string __id = "create_torrent_priv.(JLcom/frostwire/jlibtorrent/swig/create_torrent;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_set_comment' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='java.lang.String']]"
		[Register ("create_torrent_set_comment", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;)V", "")]
		public static unsafe void Create_torrent_set_comment (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, string p2)
		{
			const string __id = "create_torrent_set_comment.(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_set_creator' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='java.lang.String']]"
		[Register ("create_torrent_set_creator", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;)V", "")]
		public static unsafe void Create_torrent_set_creator (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, string p2)
		{
			const string __id = "create_torrent_set_creator.(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_set_file_hash' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("create_torrent_set_file_hash", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;IJLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Create_torrent_set_file_hash (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Sha1_hash p4)
		{
			const string __id = "create_torrent_set_file_hash.(JLcom/frostwire/jlibtorrent/swig/create_torrent;IJLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_set_hash' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("create_torrent_set_hash", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;IJLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Create_torrent_set_hash (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Sha1_hash p4)
		{
			const string __id = "create_torrent_set_hash.(JLcom/frostwire/jlibtorrent/swig/create_torrent;IJLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_set_priv' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='boolean']]"
		[Register ("create_torrent_set_priv", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;Z)V", "")]
		public static unsafe void Create_torrent_set_priv (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, bool p2)
		{
			const string __id = "create_torrent_set_priv.(JLcom/frostwire/jlibtorrent/swig/create_torrent;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_set_root_cert2' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("create_torrent_set_root_cert2", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Create_torrent_set_root_cert2 (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "create_torrent_set_root_cert2.(JLcom/frostwire/jlibtorrent/swig/create_torrent;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='create_torrent_symlinks_get' and count(parameter)=0]"
		[Register ("create_torrent_symlinks_get", "()J", "")]
		public static unsafe long Create_torrent_symlinks_get ()
		{
			const string __id = "create_torrent_symlinks_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='created_get' and count(parameter)=0]"
		[Register ("created_get", "()I", "")]
		public static unsafe int Created_get ()
		{
			const string __id = "created_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='cross_device_link_get' and count(parameter)=0]"
		[Register ("cross_device_link_get", "()I", "")]
		public static unsafe int Cross_device_link_get ()
		{
			const string __id = "cross_device_link_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='deadline_flags_t_all' and count(parameter)=0]"
		[Register ("deadline_flags_t_all", "()J", "")]
		public static unsafe long Deadline_flags_t_all ()
		{
			const string __id = "deadline_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='deadline_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.deadline_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.deadline_flags_t']]"
		[Register ("deadline_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)J", "")]
		public static unsafe long Deadline_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Deadline_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Deadline_flags_t p3)
		{
			const string __id = "deadline_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='deadline_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.deadline_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.deadline_flags_t']]"
		[Register ("deadline_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)Z", "")]
		public static unsafe bool Deadline_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Deadline_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Deadline_flags_t p3)
		{
			const string __id = "deadline_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='deadline_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.deadline_flags_t']]"
		[Register ("deadline_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)J", "")]
		public static unsafe long Deadline_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Deadline_flags_t p1)
		{
			const string __id = "deadline_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='deadline_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.deadline_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.deadline_flags_t']]"
		[Register ("deadline_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)Z", "")]
		public static unsafe bool Deadline_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Deadline_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Deadline_flags_t p3)
		{
			const string __id = "deadline_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='deadline_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.deadline_flags_t']]"
		[Register ("deadline_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)Z", "")]
		public static unsafe bool Deadline_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Deadline_flags_t p1)
		{
			const string __id = "deadline_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='deadline_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.deadline_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.deadline_flags_t']]"
		[Register ("deadline_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)J", "")]
		public static unsafe long Deadline_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Deadline_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Deadline_flags_t p3)
		{
			const string __id = "deadline_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='deadline_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.deadline_flags_t']]"
		[Register ("deadline_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)I", "")]
		public static unsafe int Deadline_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Deadline_flags_t p1)
		{
			const string __id = "deadline_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='deadline_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.deadline_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.deadline_flags_t']]"
		[Register ("deadline_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)J", "")]
		public static unsafe long Deadline_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Deadline_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Deadline_flags_t p3)
		{
			const string __id = "deadline_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;JLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='default_flags_get' and count(parameter)=0]"
		[Register ("default_flags_get", "()J", "")]
		public static unsafe long Default_flags_get ()
		{
			const string __id = "default_flags_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='default_settings' and count(parameter)=0]"
		[Register ("default_settings", "()J", "")]
		public static unsafe long Default_settings ()
		{
			const string __id = "default_settings.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_add_files_listener' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_add_files_listener", "(J)V", "")]
		public static unsafe void Delete_add_files_listener (long p0)
		{
			const string __id = "delete_add_files_listener.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_add_piece_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_add_piece_flags_t", "(J)V", "")]
		public static unsafe void Delete_add_piece_flags_t (long p0)
		{
			const string __id = "delete_add_piece_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_add_torrent_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_add_torrent_alert", "(J)V", "")]
		public static unsafe void Delete_add_torrent_alert (long p0)
		{
			const string __id = "delete_add_torrent_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_add_torrent_params' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_add_torrent_params", "(J)V", "")]
		public static unsafe void Delete_add_torrent_params (long p0)
		{
			const string __id = "delete_add_torrent_params.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_address' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_address", "(J)V", "")]
		public static unsafe void Delete_address (long p0)
		{
			const string __id = "delete_address.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_address_sha1_hash_pair' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_address_sha1_hash_pair", "(J)V", "")]
		public static unsafe void Delete_address_sha1_hash_pair (long p0)
		{
			const string __id = "delete_address_sha1_hash_pair.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_address_sha1_hash_pair_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_address_sha1_hash_pair_vector", "(J)V", "")]
		public static unsafe void Delete_address_sha1_hash_pair_vector (long p0)
		{
			const string __id = "delete_address_sha1_hash_pair_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_alert", "(J)V", "")]
		public static unsafe void Delete_alert (long p0)
		{
			const string __id = "delete_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_alert_category_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_alert_category_t", "(J)V", "")]
		public static unsafe void Delete_alert_category_t (long p0)
		{
			const string __id = "delete_alert_category_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_alert_notify_callback' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_alert_notify_callback", "(J)V", "")]
		public static unsafe void Delete_alert_notify_callback (long p0)
		{
			const string __id = "delete_alert_notify_callback.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_alert_ptr_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_alert_ptr_vector", "(J)V", "")]
		public static unsafe void Delete_alert_ptr_vector (long p0)
		{
			const string __id = "delete_alert_ptr_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_alerts_dropped_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_alerts_dropped_alert", "(J)V", "")]
		public static unsafe void Delete_alerts_dropped_alert (long p0)
		{
			const string __id = "delete_alerts_dropped_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_announce_endpoint' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_announce_endpoint", "(J)V", "")]
		public static unsafe void Delete_announce_endpoint (long p0)
		{
			const string __id = "delete_announce_endpoint.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_announce_endpoint_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_announce_endpoint_vector", "(J)V", "")]
		public static unsafe void Delete_announce_endpoint_vector (long p0)
		{
			const string __id = "delete_announce_endpoint_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_announce_entry' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_announce_entry", "(J)V", "")]
		public static unsafe void Delete_announce_entry (long p0)
		{
			const string __id = "delete_announce_entry.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_announce_entry_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_announce_entry_vector", "(J)V", "")]
		public static unsafe void Delete_announce_entry_vector (long p0)
		{
			const string __id = "delete_announce_entry_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_bandwidth_state_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_bandwidth_state_flags_t", "(J)V", "")]
		public static unsafe void Delete_bandwidth_state_flags_t (long p0)
		{
			const string __id = "delete_bandwidth_state_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_bdecode_node' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_bdecode_node", "(J)V", "")]
		public static unsafe void Delete_bdecode_node (long p0)
		{
			const string __id = "delete_bdecode_node.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_bitset_96' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_bitset_96", "(J)V", "")]
		public static unsafe void Delete_bitset_96 (long p0)
		{
			const string __id = "delete_bitset_96.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_block_downloading_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_block_downloading_alert", "(J)V", "")]
		public static unsafe void Delete_block_downloading_alert (long p0)
		{
			const string __id = "delete_block_downloading_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_block_finished_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_block_finished_alert", "(J)V", "")]
		public static unsafe void Delete_block_finished_alert (long p0)
		{
			const string __id = "delete_block_finished_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_block_info' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_block_info", "(J)V", "")]
		public static unsafe void Delete_block_info (long p0)
		{
			const string __id = "delete_block_info.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_block_info_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_block_info_vector", "(J)V", "")]
		public static unsafe void Delete_block_info_vector (long p0)
		{
			const string __id = "delete_block_info_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_block_timeout_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_block_timeout_alert", "(J)V", "")]
		public static unsafe void Delete_block_timeout_alert (long p0)
		{
			const string __id = "delete_block_timeout_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_block_uploaded_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_block_uploaded_alert", "(J)V", "")]
		public static unsafe void Delete_block_uploaded_alert (long p0)
		{
			const string __id = "delete_block_uploaded_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_bloom_filter_128' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_bloom_filter_128", "(J)V", "")]
		public static unsafe void Delete_bloom_filter_128 (long p0)
		{
			const string __id = "delete_bloom_filter_128.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_bloom_filter_256' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_bloom_filter_256", "(J)V", "")]
		public static unsafe void Delete_bloom_filter_256 (long p0)
		{
			const string __id = "delete_bloom_filter_256.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_bt_peer_connection_handle' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_bt_peer_connection_handle", "(J)V", "")]
		public static unsafe void Delete_bt_peer_connection_handle (long p0)
		{
			const string __id = "delete_bt_peer_connection_handle.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_byte_const_span' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_byte_const_span", "(J)V", "")]
		public static unsafe void Delete_byte_const_span (long p0)
		{
			const string __id = "delete_byte_const_span.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_byte_span' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_byte_span", "(J)V", "")]
		public static unsafe void Delete_byte_span (long p0)
		{
			const string __id = "delete_byte_span.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_byte_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_byte_vector", "(J)V", "")]
		public static unsafe void Delete_byte_vector (long p0)
		{
			const string __id = "delete_byte_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_byte_vectors_pair' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_byte_vectors_pair", "(J)V", "")]
		public static unsafe void Delete_byte_vectors_pair (long p0)
		{
			const string __id = "delete_byte_vectors_pair.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_cache_flushed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_cache_flushed_alert", "(J)V", "")]
		public static unsafe void Delete_cache_flushed_alert (long p0)
		{
			const string __id = "delete_cache_flushed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_create_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_create_flags_t", "(J)V", "")]
		public static unsafe void Delete_create_flags_t (long p0)
		{
			const string __id = "delete_create_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_create_torrent' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_create_torrent", "(J)V", "")]
		public static unsafe void Delete_create_torrent (long p0)
		{
			const string __id = "delete_create_torrent.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_deadline_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_deadline_flags_t", "(J)V", "")]
		public static unsafe void Delete_deadline_flags_t (long p0)
		{
			const string __id = "delete_deadline_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_announce_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_announce_alert", "(J)V", "")]
		public static unsafe void Delete_dht_announce_alert (long p0)
		{
			const string __id = "delete_dht_announce_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_bootstrap_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_bootstrap_alert", "(J)V", "")]
		public static unsafe void Delete_dht_bootstrap_alert (long p0)
		{
			const string __id = "delete_dht_bootstrap_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_direct_response_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_direct_response_alert", "(J)V", "")]
		public static unsafe void Delete_dht_direct_response_alert (long p0)
		{
			const string __id = "delete_dht_direct_response_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_error_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_error_alert", "(J)V", "")]
		public static unsafe void Delete_dht_error_alert (long p0)
		{
			const string __id = "delete_dht_error_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_get_peers_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_get_peers_alert", "(J)V", "")]
		public static unsafe void Delete_dht_get_peers_alert (long p0)
		{
			const string __id = "delete_dht_get_peers_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_get_peers_reply_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_get_peers_reply_alert", "(J)V", "")]
		public static unsafe void Delete_dht_get_peers_reply_alert (long p0)
		{
			const string __id = "delete_dht_get_peers_reply_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_immutable_item_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_immutable_item_alert", "(J)V", "")]
		public static unsafe void Delete_dht_immutable_item_alert (long p0)
		{
			const string __id = "delete_dht_immutable_item_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_live_nodes_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_live_nodes_alert", "(J)V", "")]
		public static unsafe void Delete_dht_live_nodes_alert (long p0)
		{
			const string __id = "delete_dht_live_nodes_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_log_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_log_alert", "(J)V", "")]
		public static unsafe void Delete_dht_log_alert (long p0)
		{
			const string __id = "delete_dht_log_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_lookup' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_lookup", "(J)V", "")]
		public static unsafe void Delete_dht_lookup (long p0)
		{
			const string __id = "delete_dht_lookup.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_lookup_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_lookup_vector", "(J)V", "")]
		public static unsafe void Delete_dht_lookup_vector (long p0)
		{
			const string __id = "delete_dht_lookup_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_mutable_item_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_mutable_item_alert", "(J)V", "")]
		public static unsafe void Delete_dht_mutable_item_alert (long p0)
		{
			const string __id = "delete_dht_mutable_item_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_outgoing_get_peers_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_outgoing_get_peers_alert", "(J)V", "")]
		public static unsafe void Delete_dht_outgoing_get_peers_alert (long p0)
		{
			const string __id = "delete_dht_outgoing_get_peers_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_pkt_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_pkt_alert", "(J)V", "")]
		public static unsafe void Delete_dht_pkt_alert (long p0)
		{
			const string __id = "delete_dht_pkt_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_put_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_put_alert", "(J)V", "")]
		public static unsafe void Delete_dht_put_alert (long p0)
		{
			const string __id = "delete_dht_put_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_reply_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_reply_alert", "(J)V", "")]
		public static unsafe void Delete_dht_reply_alert (long p0)
		{
			const string __id = "delete_dht_reply_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_routing_bucket' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_routing_bucket", "(J)V", "")]
		public static unsafe void Delete_dht_routing_bucket (long p0)
		{
			const string __id = "delete_dht_routing_bucket.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_routing_bucket_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_routing_bucket_vector", "(J)V", "")]
		public static unsafe void Delete_dht_routing_bucket_vector (long p0)
		{
			const string __id = "delete_dht_routing_bucket_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_sample_infohashes_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_sample_infohashes_alert", "(J)V", "")]
		public static unsafe void Delete_dht_sample_infohashes_alert (long p0)
		{
			const string __id = "delete_dht_sample_infohashes_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_settings' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_settings", "(J)V", "")]
		public static unsafe void Delete_dht_settings (long p0)
		{
			const string __id = "delete_dht_settings.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_state' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_state", "(J)V", "")]
		public static unsafe void Delete_dht_state (long p0)
		{
			const string __id = "delete_dht_state.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_dht_stats_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_dht_stats_alert", "(J)V", "")]
		public static unsafe void Delete_dht_stats_alert (long p0)
		{
			const string __id = "delete_dht_stats_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_entry' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_entry", "(J)V", "")]
		public static unsafe void Delete_entry (long p0)
		{
			const string __id = "delete_entry.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_entry_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_entry_vector", "(J)V", "")]
		public static unsafe void Delete_entry_vector (long p0)
		{
			const string __id = "delete_entry_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_error_code' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_error_code", "(J)V", "")]
		public static unsafe void Delete_error_code (long p0)
		{
			const string __id = "delete_error_code.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_external_ip_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_external_ip_alert", "(J)V", "")]
		public static unsafe void Delete_external_ip_alert (long p0)
		{
			const string __id = "delete_external_ip_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_fastresume_rejected_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_fastresume_rejected_alert", "(J)V", "")]
		public static unsafe void Delete_fastresume_rejected_alert (long p0)
		{
			const string __id = "delete_fastresume_rejected_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_file_completed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_file_completed_alert", "(J)V", "")]
		public static unsafe void Delete_file_completed_alert (long p0)
		{
			const string __id = "delete_file_completed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_file_error_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_file_error_alert", "(J)V", "")]
		public static unsafe void Delete_file_error_alert (long p0)
		{
			const string __id = "delete_file_error_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_file_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_file_flags_t", "(J)V", "")]
		public static unsafe void Delete_file_flags_t (long p0)
		{
			const string __id = "delete_file_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_file_index_string_map' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_file_index_string_map", "(J)V", "")]
		public static unsafe void Delete_file_index_string_map (long p0)
		{
			const string __id = "delete_file_index_string_map.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_file_index_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_file_index_vector", "(J)V", "")]
		public static unsafe void Delete_file_index_vector (long p0)
		{
			const string __id = "delete_file_index_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_file_rename_failed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_file_rename_failed_alert", "(J)V", "")]
		public static unsafe void Delete_file_rename_failed_alert (long p0)
		{
			const string __id = "delete_file_rename_failed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_file_renamed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_file_renamed_alert", "(J)V", "")]
		public static unsafe void Delete_file_renamed_alert (long p0)
		{
			const string __id = "delete_file_renamed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_file_slice' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_file_slice", "(J)V", "")]
		public static unsafe void Delete_file_slice (long p0)
		{
			const string __id = "delete_file_slice.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_file_slice_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_file_slice_vector", "(J)V", "")]
		public static unsafe void Delete_file_slice_vector (long p0)
		{
			const string __id = "delete_file_slice_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_file_storage' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_file_storage", "(J)V", "")]
		public static unsafe void Delete_file_storage (long p0)
		{
			const string __id = "delete_file_storage.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_hash_failed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_hash_failed_alert", "(J)V", "")]
		public static unsafe void Delete_hash_failed_alert (long p0)
		{
			const string __id = "delete_hash_failed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_i2p_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_i2p_alert", "(J)V", "")]
		public static unsafe void Delete_i2p_alert (long p0)
		{
			const string __id = "delete_i2p_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_incoming_connection_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_incoming_connection_alert", "(J)V", "")]
		public static unsafe void Delete_incoming_connection_alert (long p0)
		{
			const string __id = "delete_incoming_connection_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_incoming_request_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_incoming_request_alert", "(J)V", "")]
		public static unsafe void Delete_incoming_request_alert (long p0)
		{
			const string __id = "delete_incoming_request_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_int64_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_int64_vector", "(J)V", "")]
		public static unsafe void Delete_int64_vector (long p0)
		{
			const string __id = "delete_int64_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_int_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_int_vector", "(J)V", "")]
		public static unsafe void Delete_int_vector (long p0)
		{
			const string __id = "delete_int_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_invalid_request_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_invalid_request_alert", "(J)V", "")]
		public static unsafe void Delete_invalid_request_alert (long p0)
		{
			const string __id = "delete_invalid_request_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_ip_filter' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_ip_filter", "(J)V", "")]
		public static unsafe void Delete_ip_filter (long p0)
		{
			const string __id = "delete_ip_filter.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_ip_interface' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_ip_interface", "(J)V", "")]
		public static unsafe void Delete_ip_interface (long p0)
		{
			const string __id = "delete_ip_interface.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_ip_interface_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_ip_interface_vector", "(J)V", "")]
		public static unsafe void Delete_ip_interface_vector (long p0)
		{
			const string __id = "delete_ip_interface_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_ip_route' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_ip_route", "(J)V", "")]
		public static unsafe void Delete_ip_route (long p0)
		{
			const string __id = "delete_ip_route.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_ip_route_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_ip_route_vector", "(J)V", "")]
		public static unsafe void Delete_ip_route_vector (long p0)
		{
			const string __id = "delete_ip_route_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_listen_failed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_listen_failed_alert", "(J)V", "")]
		public static unsafe void Delete_listen_failed_alert (long p0)
		{
			const string __id = "delete_listen_failed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_listen_succeeded_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_listen_succeeded_alert", "(J)V", "")]
		public static unsafe void Delete_listen_succeeded_alert (long p0)
		{
			const string __id = "delete_listen_succeeded_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_log_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_log_alert", "(J)V", "")]
		public static unsafe void Delete_log_alert (long p0)
		{
			const string __id = "delete_log_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_lsd_error_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_lsd_error_alert", "(J)V", "")]
		public static unsafe void Delete_lsd_error_alert (long p0)
		{
			const string __id = "delete_lsd_error_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_lsd_peer_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_lsd_peer_alert", "(J)V", "")]
		public static unsafe void Delete_lsd_peer_alert (long p0)
		{
			const string __id = "delete_lsd_peer_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_metadata_failed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_metadata_failed_alert", "(J)V", "")]
		public static unsafe void Delete_metadata_failed_alert (long p0)
		{
			const string __id = "delete_metadata_failed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_metadata_received_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_metadata_received_alert", "(J)V", "")]
		public static unsafe void Delete_metadata_received_alert (long p0)
		{
			const string __id = "delete_metadata_received_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_partial_piece_info' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_partial_piece_info", "(J)V", "")]
		public static unsafe void Delete_partial_piece_info (long p0)
		{
			const string __id = "delete_partial_piece_info.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_partial_piece_info_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_partial_piece_info_vector", "(J)V", "")]
		public static unsafe void Delete_partial_piece_info_vector (long p0)
		{
			const string __id = "delete_partial_piece_info_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_pause_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_pause_flags_t", "(J)V", "")]
		public static unsafe void Delete_pause_flags_t (long p0)
		{
			const string __id = "delete_pause_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_alert", "(J)V", "")]
		public static unsafe void Delete_peer_alert (long p0)
		{
			const string __id = "delete_peer_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_ban_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_ban_alert", "(J)V", "")]
		public static unsafe void Delete_peer_ban_alert (long p0)
		{
			const string __id = "delete_peer_ban_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_blocked_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_blocked_alert", "(J)V", "")]
		public static unsafe void Delete_peer_blocked_alert (long p0)
		{
			const string __id = "delete_peer_blocked_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_class_info' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_class_info", "(J)V", "")]
		public static unsafe void Delete_peer_class_info (long p0)
		{
			const string __id = "delete_peer_class_info.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_class_type_filter' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_class_type_filter", "(J)V", "")]
		public static unsafe void Delete_peer_class_type_filter (long p0)
		{
			const string __id = "delete_peer_class_type_filter.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_connect_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_connect_alert", "(J)V", "")]
		public static unsafe void Delete_peer_connect_alert (long p0)
		{
			const string __id = "delete_peer_connect_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_connection_handle' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_connection_handle", "(J)V", "")]
		public static unsafe void Delete_peer_connection_handle (long p0)
		{
			const string __id = "delete_peer_connection_handle.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_disconnected_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_disconnected_alert", "(J)V", "")]
		public static unsafe void Delete_peer_disconnected_alert (long p0)
		{
			const string __id = "delete_peer_disconnected_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_error_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_error_alert", "(J)V", "")]
		public static unsafe void Delete_peer_error_alert (long p0)
		{
			const string __id = "delete_peer_error_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_flags_t", "(J)V", "")]
		public static unsafe void Delete_peer_flags_t (long p0)
		{
			const string __id = "delete_peer_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_info' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_info", "(J)V", "")]
		public static unsafe void Delete_peer_info (long p0)
		{
			const string __id = "delete_peer_info.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_info_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_info_vector", "(J)V", "")]
		public static unsafe void Delete_peer_info_vector (long p0)
		{
			const string __id = "delete_peer_info_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_log_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_log_alert", "(J)V", "")]
		public static unsafe void Delete_peer_log_alert (long p0)
		{
			const string __id = "delete_peer_log_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_request' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_request", "(J)V", "")]
		public static unsafe void Delete_peer_request (long p0)
		{
			const string __id = "delete_peer_request.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_snubbed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_snubbed_alert", "(J)V", "")]
		public static unsafe void Delete_peer_snubbed_alert (long p0)
		{
			const string __id = "delete_peer_snubbed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_source_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_source_flags_t", "(J)V", "")]
		public static unsafe void Delete_peer_source_flags_t (long p0)
		{
			const string __id = "delete_peer_source_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_peer_unsnubbed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_peer_unsnubbed_alert", "(J)V", "")]
		public static unsafe void Delete_peer_unsnubbed_alert (long p0)
		{
			const string __id = "delete_peer_unsnubbed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_performance_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_performance_alert", "(J)V", "")]
		public static unsafe void Delete_performance_alert (long p0)
		{
			const string __id = "delete_performance_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_pex_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_pex_flags_t", "(J)V", "")]
		public static unsafe void Delete_pex_flags_t (long p0)
		{
			const string __id = "delete_pex_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_picker_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_picker_flags_t", "(J)V", "")]
		public static unsafe void Delete_picker_flags_t (long p0)
		{
			const string __id = "delete_picker_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_picker_log_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_picker_log_alert", "(J)V", "")]
		public static unsafe void Delete_picker_log_alert (long p0)
		{
			const string __id = "delete_picker_log_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_piece_finished_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_piece_finished_alert", "(J)V", "")]
		public static unsafe void Delete_piece_finished_alert (long p0)
		{
			const string __id = "delete_piece_finished_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_piece_index_bitfield' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_piece_index_bitfield", "(J)V", "")]
		public static unsafe void Delete_piece_index_bitfield (long p0)
		{
			const string __id = "delete_piece_index_bitfield.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_piece_index_int_pair' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_piece_index_int_pair", "(J)V", "")]
		public static unsafe void Delete_piece_index_int_pair (long p0)
		{
			const string __id = "delete_piece_index_int_pair.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_piece_index_int_pair_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_piece_index_int_pair_vector", "(J)V", "")]
		public static unsafe void Delete_piece_index_int_pair_vector (long p0)
		{
			const string __id = "delete_piece_index_int_pair_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_piece_index_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_piece_index_vector", "(J)V", "")]
		public static unsafe void Delete_piece_index_vector (long p0)
		{
			const string __id = "delete_piece_index_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_port_filter' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_port_filter", "(J)V", "")]
		public static unsafe void Delete_port_filter (long p0)
		{
			const string __id = "delete_port_filter.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_port_mapping_t_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_port_mapping_t_vector", "(J)V", "")]
		public static unsafe void Delete_port_mapping_t_vector (long p0)
		{
			const string __id = "delete_port_mapping_t_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_portmap_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_portmap_alert", "(J)V", "")]
		public static unsafe void Delete_portmap_alert (long p0)
		{
			const string __id = "delete_portmap_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_portmap_error_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_portmap_error_alert", "(J)V", "")]
		public static unsafe void Delete_portmap_error_alert (long p0)
		{
			const string __id = "delete_portmap_error_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_portmap_log_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_portmap_log_alert", "(J)V", "")]
		public static unsafe void Delete_portmap_log_alert (long p0)
		{
			const string __id = "delete_portmap_log_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_posix_stat_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_posix_stat_t", "(J)V", "")]
		public static unsafe void Delete_posix_stat_t (long p0)
		{
			const string __id = "delete_posix_stat_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_posix_wrapper' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_posix_wrapper", "(J)V", "")]
		public static unsafe void Delete_posix_wrapper (long p0)
		{
			const string __id = "delete_posix_wrapper.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_read_piece_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_read_piece_alert", "(J)V", "")]
		public static unsafe void Delete_read_piece_alert (long p0)
		{
			const string __id = "delete_read_piece_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_reannounce_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_reannounce_flags_t", "(J)V", "")]
		public static unsafe void Delete_reannounce_flags_t (long p0)
		{
			const string __id = "delete_reannounce_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_remove_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_remove_flags_t", "(J)V", "")]
		public static unsafe void Delete_remove_flags_t (long p0)
		{
			const string __id = "delete_remove_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_reopen_network_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_reopen_network_flags_t", "(J)V", "")]
		public static unsafe void Delete_reopen_network_flags_t (long p0)
		{
			const string __id = "delete_reopen_network_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_request_dropped_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_request_dropped_alert", "(J)V", "")]
		public static unsafe void Delete_request_dropped_alert (long p0)
		{
			const string __id = "delete_request_dropped_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_resume_data_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_resume_data_flags_t", "(J)V", "")]
		public static unsafe void Delete_resume_data_flags_t (long p0)
		{
			const string __id = "delete_resume_data_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_save_resume_data_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_save_resume_data_alert", "(J)V", "")]
		public static unsafe void Delete_save_resume_data_alert (long p0)
		{
			const string __id = "delete_save_resume_data_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_save_resume_data_failed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_save_resume_data_failed_alert", "(J)V", "")]
		public static unsafe void Delete_save_resume_data_failed_alert (long p0)
		{
			const string __id = "delete_save_resume_data_failed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_save_state_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_save_state_flags_t", "(J)V", "")]
		public static unsafe void Delete_save_state_flags_t (long p0)
		{
			const string __id = "delete_save_state_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_scrape_failed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_scrape_failed_alert", "(J)V", "")]
		public static unsafe void Delete_scrape_failed_alert (long p0)
		{
			const string __id = "delete_scrape_failed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_scrape_reply_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_scrape_reply_alert", "(J)V", "")]
		public static unsafe void Delete_scrape_reply_alert (long p0)
		{
			const string __id = "delete_scrape_reply_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_session' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_session", "(J)V", "")]
		public static unsafe void Delete_session (long p0)
		{
			const string __id = "delete_session.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_session_error_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_session_error_alert", "(J)V", "")]
		public static unsafe void Delete_session_error_alert (long p0)
		{
			const string __id = "delete_session_error_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_session_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_session_flags_t", "(J)V", "")]
		public static unsafe void Delete_session_flags_t (long p0)
		{
			const string __id = "delete_session_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_session_handle' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_session_handle", "(J)V", "")]
		public static unsafe void Delete_session_handle (long p0)
		{
			const string __id = "delete_session_handle.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_session_params' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_session_params", "(J)V", "")]
		public static unsafe void Delete_session_params (long p0)
		{
			const string __id = "delete_session_params.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_session_proxy' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_session_proxy", "(J)V", "")]
		public static unsafe void Delete_session_proxy (long p0)
		{
			const string __id = "delete_session_proxy.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_session_stats_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_session_stats_alert", "(J)V", "")]
		public static unsafe void Delete_session_stats_alert (long p0)
		{
			const string __id = "delete_session_stats_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_session_stats_header_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_session_stats_header_alert", "(J)V", "")]
		public static unsafe void Delete_session_stats_header_alert (long p0)
		{
			const string __id = "delete_session_stats_header_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_set_piece_hashes_listener' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_set_piece_hashes_listener", "(J)V", "")]
		public static unsafe void Delete_set_piece_hashes_listener (long p0)
		{
			const string __id = "delete_set_piece_hashes_listener.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_settings_pack' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_settings_pack", "(J)V", "")]
		public static unsafe void Delete_settings_pack (long p0)
		{
			const string __id = "delete_settings_pack.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_sha1_hash' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_sha1_hash", "(J)V", "")]
		public static unsafe void Delete_sha1_hash (long p0)
		{
			const string __id = "delete_sha1_hash.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_sha1_hash_udp_endpoint_pair' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_sha1_hash_udp_endpoint_pair", "(J)V", "")]
		public static unsafe void Delete_sha1_hash_udp_endpoint_pair (long p0)
		{
			const string __id = "delete_sha1_hash_udp_endpoint_pair.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_sha1_hash_udp_endpoint_pair_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_sha1_hash_udp_endpoint_pair_vector", "(J)V", "")]
		public static unsafe void Delete_sha1_hash_udp_endpoint_pair_vector (long p0)
		{
			const string __id = "delete_sha1_hash_udp_endpoint_pair_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_sha1_hash_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_sha1_hash_vector", "(J)V", "")]
		public static unsafe void Delete_sha1_hash_vector (long p0)
		{
			const string __id = "delete_sha1_hash_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_state_changed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_state_changed_alert", "(J)V", "")]
		public static unsafe void Delete_state_changed_alert (long p0)
		{
			const string __id = "delete_state_changed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_state_update_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_state_update_alert", "(J)V", "")]
		public static unsafe void Delete_state_update_alert (long p0)
		{
			const string __id = "delete_state_update_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_stats_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_stats_alert", "(J)V", "")]
		public static unsafe void Delete_stats_alert (long p0)
		{
			const string __id = "delete_stats_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_stats_metric' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_stats_metric", "(J)V", "")]
		public static unsafe void Delete_stats_metric (long p0)
		{
			const string __id = "delete_stats_metric.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_stats_metric_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_stats_metric_vector", "(J)V", "")]
		public static unsafe void Delete_stats_metric_vector (long p0)
		{
			const string __id = "delete_stats_metric_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_status_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_status_flags_t", "(J)V", "")]
		public static unsafe void Delete_status_flags_t (long p0)
		{
			const string __id = "delete_status_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_storage_moved_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_storage_moved_alert", "(J)V", "")]
		public static unsafe void Delete_storage_moved_alert (long p0)
		{
			const string __id = "delete_storage_moved_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_storage_moved_failed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_storage_moved_failed_alert", "(J)V", "")]
		public static unsafe void Delete_storage_moved_failed_alert (long p0)
		{
			const string __id = "delete_storage_moved_failed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_string_entry_map' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_string_entry_map", "(J)V", "")]
		public static unsafe void Delete_string_entry_map (long p0)
		{
			const string __id = "delete_string_entry_map.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_string_int_pair' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_string_int_pair", "(J)V", "")]
		public static unsafe void Delete_string_int_pair (long p0)
		{
			const string __id = "delete_string_int_pair.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_string_int_pair_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_string_int_pair_vector", "(J)V", "")]
		public static unsafe void Delete_string_int_pair_vector (long p0)
		{
			const string __id = "delete_string_int_pair_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_string_long_map' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_string_long_map", "(J)V", "")]
		public static unsafe void Delete_string_long_map (long p0)
		{
			const string __id = "delete_string_long_map.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_string_string_pair' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_string_string_pair", "(J)V", "")]
		public static unsafe void Delete_string_string_pair (long p0)
		{
			const string __id = "delete_string_string_pair.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_string_string_pair_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_string_string_pair_vector", "(J)V", "")]
		public static unsafe void Delete_string_string_pair_vector (long p0)
		{
			const string __id = "delete_string_string_pair_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_string_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_string_vector", "(J)V", "")]
		public static unsafe void Delete_string_vector (long p0)
		{
			const string __id = "delete_string_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_string_view' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_string_view", "(J)V", "")]
		public static unsafe void Delete_string_view (long p0)
		{
			const string __id = "delete_string_view.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_string_view_bdecode_node_pair' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_string_view_bdecode_node_pair", "(J)V", "")]
		public static unsafe void Delete_string_view_bdecode_node_pair (long p0)
		{
			const string __id = "delete_string_view_bdecode_node_pair.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_swig_plugin' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_swig_plugin", "(J)V", "")]
		public static unsafe void Delete_swig_plugin (long p0)
		{
			const string __id = "delete_swig_plugin.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_tcp_endpoint' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_tcp_endpoint", "(J)V", "")]
		public static unsafe void Delete_tcp_endpoint (long p0)
		{
			const string __id = "delete_tcp_endpoint.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_tcp_endpoint_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_tcp_endpoint_vector", "(J)V", "")]
		public static unsafe void Delete_tcp_endpoint_vector (long p0)
		{
			const string __id = "delete_tcp_endpoint_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_alert", "(J)V", "")]
		public static unsafe void Delete_torrent_alert (long p0)
		{
			const string __id = "delete_torrent_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_checked_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_checked_alert", "(J)V", "")]
		public static unsafe void Delete_torrent_checked_alert (long p0)
		{
			const string __id = "delete_torrent_checked_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_delete_failed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_delete_failed_alert", "(J)V", "")]
		public static unsafe void Delete_torrent_delete_failed_alert (long p0)
		{
			const string __id = "delete_torrent_delete_failed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_deleted_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_deleted_alert", "(J)V", "")]
		public static unsafe void Delete_torrent_deleted_alert (long p0)
		{
			const string __id = "delete_torrent_deleted_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_error_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_error_alert", "(J)V", "")]
		public static unsafe void Delete_torrent_error_alert (long p0)
		{
			const string __id = "delete_torrent_error_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_finished_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_finished_alert", "(J)V", "")]
		public static unsafe void Delete_torrent_finished_alert (long p0)
		{
			const string __id = "delete_torrent_finished_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_flags_t' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_flags_t", "(J)V", "")]
		public static unsafe void Delete_torrent_flags_t (long p0)
		{
			const string __id = "delete_torrent_flags_t.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_handle' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_handle", "(J)V", "")]
		public static unsafe void Delete_torrent_handle (long p0)
		{
			const string __id = "delete_torrent_handle.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_handle_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_handle_vector", "(J)V", "")]
		public static unsafe void Delete_torrent_handle_vector (long p0)
		{
			const string __id = "delete_torrent_handle_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_info' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_info", "(J)V", "")]
		public static unsafe void Delete_torrent_info (long p0)
		{
			const string __id = "delete_torrent_info.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_log_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_log_alert", "(J)V", "")]
		public static unsafe void Delete_torrent_log_alert (long p0)
		{
			const string __id = "delete_torrent_log_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_need_cert_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_need_cert_alert", "(J)V", "")]
		public static unsafe void Delete_torrent_need_cert_alert (long p0)
		{
			const string __id = "delete_torrent_need_cert_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_paused_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_paused_alert", "(J)V", "")]
		public static unsafe void Delete_torrent_paused_alert (long p0)
		{
			const string __id = "delete_torrent_paused_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_removed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_removed_alert", "(J)V", "")]
		public static unsafe void Delete_torrent_removed_alert (long p0)
		{
			const string __id = "delete_torrent_removed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_resumed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_resumed_alert", "(J)V", "")]
		public static unsafe void Delete_torrent_resumed_alert (long p0)
		{
			const string __id = "delete_torrent_resumed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_status' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_status", "(J)V", "")]
		public static unsafe void Delete_torrent_status (long p0)
		{
			const string __id = "delete_torrent_status.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_torrent_status_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_torrent_status_vector", "(J)V", "")]
		public static unsafe void Delete_torrent_status_vector (long p0)
		{
			const string __id = "delete_torrent_status_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_tracker_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_tracker_alert", "(J)V", "")]
		public static unsafe void Delete_tracker_alert (long p0)
		{
			const string __id = "delete_tracker_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_tracker_announce_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_tracker_announce_alert", "(J)V", "")]
		public static unsafe void Delete_tracker_announce_alert (long p0)
		{
			const string __id = "delete_tracker_announce_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_tracker_error_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_tracker_error_alert", "(J)V", "")]
		public static unsafe void Delete_tracker_error_alert (long p0)
		{
			const string __id = "delete_tracker_error_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_tracker_reply_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_tracker_reply_alert", "(J)V", "")]
		public static unsafe void Delete_tracker_reply_alert (long p0)
		{
			const string __id = "delete_tracker_reply_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_tracker_warning_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_tracker_warning_alert", "(J)V", "")]
		public static unsafe void Delete_tracker_warning_alert (long p0)
		{
			const string __id = "delete_tracker_warning_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_trackerid_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_trackerid_alert", "(J)V", "")]
		public static unsafe void Delete_trackerid_alert (long p0)
		{
			const string __id = "delete_trackerid_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_udp_endpoint' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_udp_endpoint", "(J)V", "")]
		public static unsafe void Delete_udp_endpoint (long p0)
		{
			const string __id = "delete_udp_endpoint.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_udp_endpoint_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_udp_endpoint_vector", "(J)V", "")]
		public static unsafe void Delete_udp_endpoint_vector (long p0)
		{
			const string __id = "delete_udp_endpoint_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_udp_error_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_udp_error_alert", "(J)V", "")]
		public static unsafe void Delete_udp_error_alert (long p0)
		{
			const string __id = "delete_udp_error_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_unwanted_block_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_unwanted_block_alert", "(J)V", "")]
		public static unsafe void Delete_unwanted_block_alert (long p0)
		{
			const string __id = "delete_unwanted_block_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_url_seed_alert' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_url_seed_alert", "(J)V", "")]
		public static unsafe void Delete_url_seed_alert (long p0)
		{
			const string __id = "delete_url_seed_alert.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_web_seed_entry' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_web_seed_entry", "(J)V", "")]
		public static unsafe void Delete_web_seed_entry (long p0)
		{
			const string __id = "delete_web_seed_entry.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='delete_web_seed_entry_vector' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("delete_web_seed_entry_vector", "(J)V", "")]
		public static unsafe void Delete_web_seed_entry_vector (long p0)
		{
			const string __id = "delete_web_seed_entry_vector.(J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='destination_address_required_get' and count(parameter)=0]"
		[Register ("destination_address_required_get", "()I", "")]
		public static unsafe int Destination_address_required_get ()
		{
			const string __id = "destination_address_required_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='device_or_resource_busy_get' and count(parameter)=0]"
		[Register ("device_or_resource_busy_get", "()I", "")]
		public static unsafe int Device_or_resource_busy_get ()
		{
			const string __id = "device_or_resource_busy_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_announce_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_announce_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_announce_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_announce_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_announce_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_announce_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_announce_alert_alert_type_get ()
		{
			const string __id = "dht_announce_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_announce_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_announce_alert']]"
		[Register ("dht_announce_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;)J", "")]
		public static unsafe long Dht_announce_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_announce_alert p1)
		{
			const string __id = "dht_announce_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_announce_alert_get_ip' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_announce_alert']]"
		[Register ("dht_announce_alert_get_ip", "(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;)J", "")]
		public static unsafe long Dht_announce_alert_get_ip (long p0, global::FrostWire.Libtorrent.Swig.Dht_announce_alert p1)
		{
			const string __id = "dht_announce_alert_get_ip.(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_announce_alert_info_hash_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_announce_alert']]"
		[Register ("dht_announce_alert_info_hash_get", "(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;)J", "")]
		public static unsafe long Dht_announce_alert_info_hash_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_announce_alert p1)
		{
			const string __id = "dht_announce_alert_info_hash_get.(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_announce_alert_info_hash_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_announce_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("dht_announce_alert_info_hash_set", "(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Dht_announce_alert_info_hash_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_announce_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "dht_announce_alert_info_hash_set.(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_announce_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_announce_alert']]"
		[Register ("dht_announce_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_announce_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_announce_alert p1)
		{
			const string __id = "dht_announce_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_announce_alert_port_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_announce_alert']]"
		[Register ("dht_announce_alert_port_get", "(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;)I", "")]
		public static unsafe int Dht_announce_alert_port_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_announce_alert p1)
		{
			const string __id = "dht_announce_alert_port_get.(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_announce_alert_port_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_announce_alert'] and parameter[3][@type='int']]"
		[Register ("dht_announce_alert_port_set", "(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;I)V", "")]
		public static unsafe void Dht_announce_alert_port_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_announce_alert p1, int p2)
		{
			const string __id = "dht_announce_alert_port_set.(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_announce_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_announce_alert_priority_get", "()I", "")]
		public static unsafe int Dht_announce_alert_priority_get ()
		{
			const string __id = "dht_announce_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_announce_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_announce_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_announce_alert_static_category_get ()
		{
			const string __id = "dht_announce_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_announce_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_announce_alert']]"
		[Register ("dht_announce_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;)I", "")]
		public static unsafe int Dht_announce_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_announce_alert p1)
		{
			const string __id = "dht_announce_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_announce_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_announce_alert']]"
		[Register ("dht_announce_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_announce_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_announce_alert p1)
		{
			const string __id = "dht_announce_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_announce_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_bootstrap_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_bootstrap_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_bootstrap_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_bootstrap_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_bootstrap_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_bootstrap_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_bootstrap_alert_alert_type_get ()
		{
			const string __id = "dht_bootstrap_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_bootstrap_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_bootstrap_alert']]"
		[Register ("dht_bootstrap_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_bootstrap_alert;)J", "")]
		public static unsafe long Dht_bootstrap_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_bootstrap_alert p1)
		{
			const string __id = "dht_bootstrap_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_bootstrap_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_bootstrap_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_bootstrap_alert']]"
		[Register ("dht_bootstrap_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_bootstrap_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_bootstrap_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_bootstrap_alert p1)
		{
			const string __id = "dht_bootstrap_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_bootstrap_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_bootstrap_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_bootstrap_alert_priority_get", "()I", "")]
		public static unsafe int Dht_bootstrap_alert_priority_get ()
		{
			const string __id = "dht_bootstrap_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_bootstrap_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_bootstrap_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_bootstrap_alert_static_category_get ()
		{
			const string __id = "dht_bootstrap_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_bootstrap_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_bootstrap_alert']]"
		[Register ("dht_bootstrap_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_bootstrap_alert;)I", "")]
		public static unsafe int Dht_bootstrap_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_bootstrap_alert p1)
		{
			const string __id = "dht_bootstrap_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_bootstrap_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_bootstrap_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_bootstrap_alert']]"
		[Register ("dht_bootstrap_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_bootstrap_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_bootstrap_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_bootstrap_alert p1)
		{
			const string __id = "dht_bootstrap_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_bootstrap_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_direct_response_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_direct_response_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_direct_response_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_direct_response_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_direct_response_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_direct_response_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_direct_response_alert_alert_type_get ()
		{
			const string __id = "dht_direct_response_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_direct_response_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_direct_response_alert']]"
		[Register ("dht_direct_response_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_direct_response_alert;)J", "")]
		public static unsafe long Dht_direct_response_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_direct_response_alert p1)
		{
			const string __id = "dht_direct_response_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_direct_response_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_direct_response_alert_get_endpoint' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_direct_response_alert']]"
		[Register ("dht_direct_response_alert_get_endpoint", "(JLcom/frostwire/jlibtorrent/swig/dht_direct_response_alert;)J", "")]
		public static unsafe long Dht_direct_response_alert_get_endpoint (long p0, global::FrostWire.Libtorrent.Swig.Dht_direct_response_alert p1)
		{
			const string __id = "dht_direct_response_alert_get_endpoint.(JLcom/frostwire/jlibtorrent/swig/dht_direct_response_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_direct_response_alert_get_userdata' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_direct_response_alert']]"
		[Register ("dht_direct_response_alert_get_userdata", "(JLcom/frostwire/jlibtorrent/swig/dht_direct_response_alert;)J", "")]
		public static unsafe long Dht_direct_response_alert_get_userdata (long p0, global::FrostWire.Libtorrent.Swig.Dht_direct_response_alert p1)
		{
			const string __id = "dht_direct_response_alert_get_userdata.(JLcom/frostwire/jlibtorrent/swig/dht_direct_response_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_direct_response_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_direct_response_alert']]"
		[Register ("dht_direct_response_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_direct_response_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_direct_response_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_direct_response_alert p1)
		{
			const string __id = "dht_direct_response_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_direct_response_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_direct_response_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_direct_response_alert_priority_get", "()I", "")]
		public static unsafe int Dht_direct_response_alert_priority_get ()
		{
			const string __id = "dht_direct_response_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_direct_response_alert_response' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_direct_response_alert']]"
		[Register ("dht_direct_response_alert_response", "(JLcom/frostwire/jlibtorrent/swig/dht_direct_response_alert;)J", "")]
		public static unsafe long Dht_direct_response_alert_response (long p0, global::FrostWire.Libtorrent.Swig.Dht_direct_response_alert p1)
		{
			const string __id = "dht_direct_response_alert_response.(JLcom/frostwire/jlibtorrent/swig/dht_direct_response_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_direct_response_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_direct_response_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_direct_response_alert_static_category_get ()
		{
			const string __id = "dht_direct_response_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_direct_response_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_direct_response_alert']]"
		[Register ("dht_direct_response_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_direct_response_alert;)I", "")]
		public static unsafe int Dht_direct_response_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_direct_response_alert p1)
		{
			const string __id = "dht_direct_response_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_direct_response_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_direct_response_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_direct_response_alert']]"
		[Register ("dht_direct_response_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_direct_response_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_direct_response_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_direct_response_alert p1)
		{
			const string __id = "dht_direct_response_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_direct_response_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_error_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_error_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_error_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_error_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_error_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_error_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_error_alert_alert_type_get ()
		{
			const string __id = "dht_error_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_error_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_error_alert']]"
		[Register ("dht_error_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;)J", "")]
		public static unsafe long Dht_error_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_error_alert p1)
		{
			const string __id = "dht_error_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_error_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_error_alert']]"
		[Register ("dht_error_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;)J", "")]
		public static unsafe long Dht_error_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_error_alert p1)
		{
			const string __id = "dht_error_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_error_alert_error_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_error_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("dht_error_alert_error_set", "(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;JLcom/frostwire/jlibtorrent/swig/error_code;)V", "")]
		public static unsafe void Dht_error_alert_error_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_error_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "dht_error_alert_error_set.(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;JLcom/frostwire/jlibtorrent/swig/error_code;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_error_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_error_alert']]"
		[Register ("dht_error_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_error_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_error_alert p1)
		{
			const string __id = "dht_error_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_error_alert_op_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_error_alert']]"
		[Register ("dht_error_alert_op_get", "(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;)I", "")]
		public static unsafe int Dht_error_alert_op_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_error_alert p1)
		{
			const string __id = "dht_error_alert_op_get.(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_error_alert_op_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_error_alert'] and parameter[3][@type='int']]"
		[Register ("dht_error_alert_op_set", "(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;I)V", "")]
		public static unsafe void Dht_error_alert_op_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_error_alert p1, int p2)
		{
			const string __id = "dht_error_alert_op_set.(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_error_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_error_alert_priority_get", "()I", "")]
		public static unsafe int Dht_error_alert_priority_get ()
		{
			const string __id = "dht_error_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_error_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_error_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_error_alert_static_category_get ()
		{
			const string __id = "dht_error_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_error_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_error_alert']]"
		[Register ("dht_error_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;)I", "")]
		public static unsafe int Dht_error_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_error_alert p1)
		{
			const string __id = "dht_error_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_error_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_error_alert']]"
		[Register ("dht_error_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_error_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_error_alert p1)
		{
			const string __id = "dht_error_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_get_peers_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_get_peers_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_get_peers_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_get_peers_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_get_peers_alert_alert_type_get ()
		{
			const string __id = "dht_get_peers_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_get_peers_alert']]"
		[Register ("dht_get_peers_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_alert;)J", "")]
		public static unsafe long Dht_get_peers_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_get_peers_alert p1)
		{
			const string __id = "dht_get_peers_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_alert_info_hash_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_get_peers_alert']]"
		[Register ("dht_get_peers_alert_info_hash_get", "(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_alert;)J", "")]
		public static unsafe long Dht_get_peers_alert_info_hash_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_get_peers_alert p1)
		{
			const string __id = "dht_get_peers_alert_info_hash_get.(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_alert_info_hash_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_get_peers_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("dht_get_peers_alert_info_hash_set", "(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Dht_get_peers_alert_info_hash_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_get_peers_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "dht_get_peers_alert_info_hash_set.(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_get_peers_alert']]"
		[Register ("dht_get_peers_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_get_peers_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_get_peers_alert p1)
		{
			const string __id = "dht_get_peers_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_get_peers_alert_priority_get", "()I", "")]
		public static unsafe int Dht_get_peers_alert_priority_get ()
		{
			const string __id = "dht_get_peers_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_get_peers_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_get_peers_alert_static_category_get ()
		{
			const string __id = "dht_get_peers_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_get_peers_alert']]"
		[Register ("dht_get_peers_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_alert;)I", "")]
		public static unsafe int Dht_get_peers_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_get_peers_alert p1)
		{
			const string __id = "dht_get_peers_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_get_peers_alert']]"
		[Register ("dht_get_peers_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_get_peers_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_get_peers_alert p1)
		{
			const string __id = "dht_get_peers_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_reply_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_get_peers_reply_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_get_peers_reply_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_get_peers_reply_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_reply_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_get_peers_reply_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_get_peers_reply_alert_alert_type_get ()
		{
			const string __id = "dht_get_peers_reply_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_reply_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_get_peers_reply_alert']]"
		[Register ("dht_get_peers_reply_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;)J", "")]
		public static unsafe long Dht_get_peers_reply_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_get_peers_reply_alert p1)
		{
			const string __id = "dht_get_peers_reply_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_reply_alert_info_hash_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_get_peers_reply_alert']]"
		[Register ("dht_get_peers_reply_alert_info_hash_get", "(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;)J", "")]
		public static unsafe long Dht_get_peers_reply_alert_info_hash_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_get_peers_reply_alert p1)
		{
			const string __id = "dht_get_peers_reply_alert_info_hash_get.(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_reply_alert_info_hash_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_get_peers_reply_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("dht_get_peers_reply_alert_info_hash_set", "(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Dht_get_peers_reply_alert_info_hash_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_get_peers_reply_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "dht_get_peers_reply_alert_info_hash_set.(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_reply_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_get_peers_reply_alert']]"
		[Register ("dht_get_peers_reply_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_get_peers_reply_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_get_peers_reply_alert p1)
		{
			const string __id = "dht_get_peers_reply_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_reply_alert_num_peers' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_get_peers_reply_alert']]"
		[Register ("dht_get_peers_reply_alert_num_peers", "(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;)I", "")]
		public static unsafe int Dht_get_peers_reply_alert_num_peers (long p0, global::FrostWire.Libtorrent.Swig.Dht_get_peers_reply_alert p1)
		{
			const string __id = "dht_get_peers_reply_alert_num_peers.(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_reply_alert_peers' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_get_peers_reply_alert']]"
		[Register ("dht_get_peers_reply_alert_peers", "(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;)J", "")]
		public static unsafe long Dht_get_peers_reply_alert_peers (long p0, global::FrostWire.Libtorrent.Swig.Dht_get_peers_reply_alert p1)
		{
			const string __id = "dht_get_peers_reply_alert_peers.(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_reply_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_get_peers_reply_alert_priority_get", "()I", "")]
		public static unsafe int Dht_get_peers_reply_alert_priority_get ()
		{
			const string __id = "dht_get_peers_reply_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_reply_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_get_peers_reply_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_get_peers_reply_alert_static_category_get ()
		{
			const string __id = "dht_get_peers_reply_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_reply_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_get_peers_reply_alert']]"
		[Register ("dht_get_peers_reply_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;)I", "")]
		public static unsafe int Dht_get_peers_reply_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_get_peers_reply_alert p1)
		{
			const string __id = "dht_get_peers_reply_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_get_peers_reply_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_get_peers_reply_alert']]"
		[Register ("dht_get_peers_reply_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_get_peers_reply_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_get_peers_reply_alert p1)
		{
			const string __id = "dht_get_peers_reply_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_get_peers_reply_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_immutable_item_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_immutable_item_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_immutable_item_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_immutable_item_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_immutable_item_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_immutable_item_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_immutable_item_alert_alert_type_get ()
		{
			const string __id = "dht_immutable_item_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_immutable_item_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_immutable_item_alert']]"
		[Register ("dht_immutable_item_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;)J", "")]
		public static unsafe long Dht_immutable_item_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_immutable_item_alert p1)
		{
			const string __id = "dht_immutable_item_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_immutable_item_alert_item_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_immutable_item_alert']]"
		[Register ("dht_immutable_item_alert_item_get", "(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;)J", "")]
		public static unsafe long Dht_immutable_item_alert_item_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_immutable_item_alert p1)
		{
			const string __id = "dht_immutable_item_alert_item_get.(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_immutable_item_alert_item_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_immutable_item_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("dht_immutable_item_alert_item_set", "(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;JLcom/frostwire/jlibtorrent/swig/entry;)V", "")]
		public static unsafe void Dht_immutable_item_alert_item_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_immutable_item_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Entry p3)
		{
			const string __id = "dht_immutable_item_alert_item_set.(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;JLcom/frostwire/jlibtorrent/swig/entry;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_immutable_item_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_immutable_item_alert']]"
		[Register ("dht_immutable_item_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_immutable_item_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_immutable_item_alert p1)
		{
			const string __id = "dht_immutable_item_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_immutable_item_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_immutable_item_alert_priority_get", "()I", "")]
		public static unsafe int Dht_immutable_item_alert_priority_get ()
		{
			const string __id = "dht_immutable_item_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_immutable_item_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_immutable_item_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_immutable_item_alert_static_category_get ()
		{
			const string __id = "dht_immutable_item_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_immutable_item_alert_target_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_immutable_item_alert']]"
		[Register ("dht_immutable_item_alert_target_get", "(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;)J", "")]
		public static unsafe long Dht_immutable_item_alert_target_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_immutable_item_alert p1)
		{
			const string __id = "dht_immutable_item_alert_target_get.(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_immutable_item_alert_target_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_immutable_item_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("dht_immutable_item_alert_target_set", "(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Dht_immutable_item_alert_target_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_immutable_item_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "dht_immutable_item_alert_target_set.(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_immutable_item_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_immutable_item_alert']]"
		[Register ("dht_immutable_item_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;)I", "")]
		public static unsafe int Dht_immutable_item_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_immutable_item_alert p1)
		{
			const string __id = "dht_immutable_item_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_immutable_item_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_immutable_item_alert']]"
		[Register ("dht_immutable_item_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_immutable_item_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_immutable_item_alert p1)
		{
			const string __id = "dht_immutable_item_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_immutable_item_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_live_nodes_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_live_nodes_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_live_nodes_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_live_nodes_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_live_nodes_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_live_nodes_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_live_nodes_alert_alert_type_get ()
		{
			const string __id = "dht_live_nodes_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_live_nodes_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_live_nodes_alert']]"
		[Register ("dht_live_nodes_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;)J", "")]
		public static unsafe long Dht_live_nodes_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_live_nodes_alert p1)
		{
			const string __id = "dht_live_nodes_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_live_nodes_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_live_nodes_alert']]"
		[Register ("dht_live_nodes_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_live_nodes_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_live_nodes_alert p1)
		{
			const string __id = "dht_live_nodes_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_live_nodes_alert_node_id_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_live_nodes_alert']]"
		[Register ("dht_live_nodes_alert_node_id_get", "(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;)J", "")]
		public static unsafe long Dht_live_nodes_alert_node_id_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_live_nodes_alert p1)
		{
			const string __id = "dht_live_nodes_alert_node_id_get.(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_live_nodes_alert_node_id_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_live_nodes_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("dht_live_nodes_alert_node_id_set", "(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Dht_live_nodes_alert_node_id_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_live_nodes_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "dht_live_nodes_alert_node_id_set.(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_live_nodes_alert_nodes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_live_nodes_alert']]"
		[Register ("dht_live_nodes_alert_nodes", "(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;)J", "")]
		public static unsafe long Dht_live_nodes_alert_nodes (long p0, global::FrostWire.Libtorrent.Swig.Dht_live_nodes_alert p1)
		{
			const string __id = "dht_live_nodes_alert_nodes.(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_live_nodes_alert_num_nodes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_live_nodes_alert']]"
		[Register ("dht_live_nodes_alert_num_nodes", "(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;)I", "")]
		public static unsafe int Dht_live_nodes_alert_num_nodes (long p0, global::FrostWire.Libtorrent.Swig.Dht_live_nodes_alert p1)
		{
			const string __id = "dht_live_nodes_alert_num_nodes.(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_live_nodes_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_live_nodes_alert_priority_get", "()I", "")]
		public static unsafe int Dht_live_nodes_alert_priority_get ()
		{
			const string __id = "dht_live_nodes_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_live_nodes_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_live_nodes_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_live_nodes_alert_static_category_get ()
		{
			const string __id = "dht_live_nodes_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_live_nodes_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_live_nodes_alert']]"
		[Register ("dht_live_nodes_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;)I", "")]
		public static unsafe int Dht_live_nodes_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_live_nodes_alert p1)
		{
			const string __id = "dht_live_nodes_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_live_nodes_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_live_nodes_alert']]"
		[Register ("dht_live_nodes_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_live_nodes_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_live_nodes_alert p1)
		{
			const string __id = "dht_live_nodes_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_live_nodes_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_log_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_log_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_log_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_log_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_log_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_log_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_log_alert_alert_type_get ()
		{
			const string __id = "dht_log_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_log_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_log_alert']]"
		[Register ("dht_log_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_log_alert;)J", "")]
		public static unsafe long Dht_log_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_log_alert p1)
		{
			const string __id = "dht_log_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_log_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_log_alert_log_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_log_alert']]"
		[Register ("dht_log_alert_log_message", "(JLcom/frostwire/jlibtorrent/swig/dht_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_log_alert_log_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_log_alert p1)
		{
			const string __id = "dht_log_alert_log_message.(JLcom/frostwire/jlibtorrent/swig/dht_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_log_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_log_alert']]"
		[Register ("dht_log_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_log_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_log_alert p1)
		{
			const string __id = "dht_log_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_log_alert_module_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_log_alert']]"
		[Register ("dht_log_alert_module_get", "(JLcom/frostwire/jlibtorrent/swig/dht_log_alert;)I", "")]
		public static unsafe int Dht_log_alert_module_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_log_alert p1)
		{
			const string __id = "dht_log_alert_module_get.(JLcom/frostwire/jlibtorrent/swig/dht_log_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_log_alert_module_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_log_alert'] and parameter[3][@type='int']]"
		[Register ("dht_log_alert_module_set", "(JLcom/frostwire/jlibtorrent/swig/dht_log_alert;I)V", "")]
		public static unsafe void Dht_log_alert_module_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_log_alert p1, int p2)
		{
			const string __id = "dht_log_alert_module_set.(JLcom/frostwire/jlibtorrent/swig/dht_log_alert;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_log_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_log_alert_priority_get", "()I", "")]
		public static unsafe int Dht_log_alert_priority_get ()
		{
			const string __id = "dht_log_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_log_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_log_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_log_alert_static_category_get ()
		{
			const string __id = "dht_log_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_log_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_log_alert']]"
		[Register ("dht_log_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_log_alert;)I", "")]
		public static unsafe int Dht_log_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_log_alert p1)
		{
			const string __id = "dht_log_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_log_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_log_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_log_alert']]"
		[Register ("dht_log_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_log_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_log_alert p1)
		{
			const string __id = "dht_log_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_branch_factor_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup']]"
		[Register ("dht_lookup_branch_factor_get", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)I", "")]
		public static unsafe int Dht_lookup_branch_factor_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1)
		{
			const string __id = "dht_lookup_branch_factor_get.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_branch_factor_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup'] and parameter[3][@type='int']]"
		[Register ("dht_lookup_branch_factor_set", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;I)V", "")]
		public static unsafe void Dht_lookup_branch_factor_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1, int p2)
		{
			const string __id = "dht_lookup_branch_factor_set.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_first_timeout_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup']]"
		[Register ("dht_lookup_first_timeout_get", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)I", "")]
		public static unsafe int Dht_lookup_first_timeout_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1)
		{
			const string __id = "dht_lookup_first_timeout_get.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_first_timeout_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup'] and parameter[3][@type='int']]"
		[Register ("dht_lookup_first_timeout_set", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;I)V", "")]
		public static unsafe void Dht_lookup_first_timeout_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1, int p2)
		{
			const string __id = "dht_lookup_first_timeout_set.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_get_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup']]"
		[Register ("dht_lookup_get_type", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)Ljava/lang/String;", "")]
		public static unsafe string Dht_lookup_get_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1)
		{
			const string __id = "dht_lookup_get_type.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_last_sent_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup']]"
		[Register ("dht_lookup_last_sent_get", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)I", "")]
		public static unsafe int Dht_lookup_last_sent_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1)
		{
			const string __id = "dht_lookup_last_sent_get.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_last_sent_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup'] and parameter[3][@type='int']]"
		[Register ("dht_lookup_last_sent_set", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;I)V", "")]
		public static unsafe void Dht_lookup_last_sent_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1, int p2)
		{
			const string __id = "dht_lookup_last_sent_set.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_nodes_left_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup']]"
		[Register ("dht_lookup_nodes_left_get", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)I", "")]
		public static unsafe int Dht_lookup_nodes_left_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1)
		{
			const string __id = "dht_lookup_nodes_left_get.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_nodes_left_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup'] and parameter[3][@type='int']]"
		[Register ("dht_lookup_nodes_left_set", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;I)V", "")]
		public static unsafe void Dht_lookup_nodes_left_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1, int p2)
		{
			const string __id = "dht_lookup_nodes_left_set.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_outstanding_requests_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup']]"
		[Register ("dht_lookup_outstanding_requests_get", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)I", "")]
		public static unsafe int Dht_lookup_outstanding_requests_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1)
		{
			const string __id = "dht_lookup_outstanding_requests_get.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_outstanding_requests_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup'] and parameter[3][@type='int']]"
		[Register ("dht_lookup_outstanding_requests_set", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;I)V", "")]
		public static unsafe void Dht_lookup_outstanding_requests_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1, int p2)
		{
			const string __id = "dht_lookup_outstanding_requests_set.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_responses_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup']]"
		[Register ("dht_lookup_responses_get", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)I", "")]
		public static unsafe int Dht_lookup_responses_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1)
		{
			const string __id = "dht_lookup_responses_get.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_responses_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup'] and parameter[3][@type='int']]"
		[Register ("dht_lookup_responses_set", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;I)V", "")]
		public static unsafe void Dht_lookup_responses_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1, int p2)
		{
			const string __id = "dht_lookup_responses_set.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_target_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup']]"
		[Register ("dht_lookup_target_get", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)J", "")]
		public static unsafe long Dht_lookup_target_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1)
		{
			const string __id = "dht_lookup_target_get.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_target_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("dht_lookup_target_set", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Dht_lookup_target_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "dht_lookup_target_set.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_timeouts_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup']]"
		[Register ("dht_lookup_timeouts_get", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)I", "")]
		public static unsafe int Dht_lookup_timeouts_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1)
		{
			const string __id = "dht_lookup_timeouts_get.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_timeouts_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup'] and parameter[3][@type='int']]"
		[Register ("dht_lookup_timeouts_set", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup;I)V", "")]
		public static unsafe void Dht_lookup_timeouts_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup p1, int p2)
		{
			const string __id = "dht_lookup_timeouts_set.(JLcom/frostwire/jlibtorrent/swig/dht_lookup;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup_vector']]"
		[Register ("dht_lookup_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;)J", "")]
		public static unsafe long Dht_lookup_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup_vector p1)
		{
			const string __id = "dht_lookup_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup_vector']]"
		[Register ("dht_lookup_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;)V", "")]
		public static unsafe void Dht_lookup_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup_vector p1)
		{
			const string __id = "dht_lookup_vector_clear.(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup_vector']]"
		[Register ("dht_lookup_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;)Z", "")]
		public static unsafe bool Dht_lookup_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup_vector p1)
		{
			const string __id = "dht_lookup_vector_empty.(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup_vector'] and parameter[3][@type='int']]"
		[Register ("dht_lookup_vector_get", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;I)J", "")]
		public static unsafe long Dht_lookup_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup_vector p1, int p2)
		{
			const string __id = "dht_lookup_vector_get.(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.dht_lookup']]"
		[Register ("dht_lookup_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;JLcom/frostwire/jlibtorrent/swig/dht_lookup;)V", "")]
		public static unsafe void Dht_lookup_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Dht_lookup p3)
		{
			const string __id = "dht_lookup_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;JLcom/frostwire/jlibtorrent/swig/dht_lookup;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup_vector'] and parameter[3][@type='long']]"
		[Register ("dht_lookup_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;J)V", "")]
		public static unsafe void Dht_lookup_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup_vector p1, long p2)
		{
			const string __id = "dht_lookup_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.dht_lookup']]"
		[Register ("dht_lookup_vector_set", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;IJLcom/frostwire/jlibtorrent/swig/dht_lookup;)V", "")]
		public static unsafe void Dht_lookup_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Dht_lookup p4)
		{
			const string __id = "dht_lookup_vector_set.(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;IJLcom/frostwire/jlibtorrent/swig/dht_lookup;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_lookup_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_lookup_vector']]"
		[Register ("dht_lookup_vector_size", "(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;)J", "")]
		public static unsafe long Dht_lookup_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Dht_lookup_vector p1)
		{
			const string __id = "dht_lookup_vector_size.(JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_mutable_item_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_mutable_item_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_mutable_item_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_mutable_item_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_mutable_item_alert_alert_type_get ()
		{
			const string __id = "dht_mutable_item_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_authoritative_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_mutable_item_alert']]"
		[Register ("dht_mutable_item_alert_authoritative_get", "(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)Z", "")]
		public static unsafe bool Dht_mutable_item_alert_authoritative_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_mutable_item_alert p1)
		{
			const string __id = "dht_mutable_item_alert_authoritative_get.(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_authoritative_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_mutable_item_alert'] and parameter[3][@type='boolean']]"
		[Register ("dht_mutable_item_alert_authoritative_set", "(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;Z)V", "")]
		public static unsafe void Dht_mutable_item_alert_authoritative_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_mutable_item_alert p1, bool p2)
		{
			const string __id = "dht_mutable_item_alert_authoritative_set.(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_mutable_item_alert']]"
		[Register ("dht_mutable_item_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)J", "")]
		public static unsafe long Dht_mutable_item_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_mutable_item_alert p1)
		{
			const string __id = "dht_mutable_item_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_get_key' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_mutable_item_alert']]"
		[Register ("dht_mutable_item_alert_get_key", "(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)J", "")]
		public static unsafe long Dht_mutable_item_alert_get_key (long p0, global::FrostWire.Libtorrent.Swig.Dht_mutable_item_alert p1)
		{
			const string __id = "dht_mutable_item_alert_get_key.(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_get_salt' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_mutable_item_alert']]"
		[Register ("dht_mutable_item_alert_get_salt", "(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)J", "")]
		public static unsafe long Dht_mutable_item_alert_get_salt (long p0, global::FrostWire.Libtorrent.Swig.Dht_mutable_item_alert p1)
		{
			const string __id = "dht_mutable_item_alert_get_salt.(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_get_seq' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_mutable_item_alert']]"
		[Register ("dht_mutable_item_alert_get_seq", "(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)J", "")]
		public static unsafe long Dht_mutable_item_alert_get_seq (long p0, global::FrostWire.Libtorrent.Swig.Dht_mutable_item_alert p1)
		{
			const string __id = "dht_mutable_item_alert_get_seq.(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_get_signature' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_mutable_item_alert']]"
		[Register ("dht_mutable_item_alert_get_signature", "(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)J", "")]
		public static unsafe long Dht_mutable_item_alert_get_signature (long p0, global::FrostWire.Libtorrent.Swig.Dht_mutable_item_alert p1)
		{
			const string __id = "dht_mutable_item_alert_get_signature.(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_item_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_mutable_item_alert']]"
		[Register ("dht_mutable_item_alert_item_get", "(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)J", "")]
		public static unsafe long Dht_mutable_item_alert_item_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_mutable_item_alert p1)
		{
			const string __id = "dht_mutable_item_alert_item_get.(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_item_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_mutable_item_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("dht_mutable_item_alert_item_set", "(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;JLcom/frostwire/jlibtorrent/swig/entry;)V", "")]
		public static unsafe void Dht_mutable_item_alert_item_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_mutable_item_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Entry p3)
		{
			const string __id = "dht_mutable_item_alert_item_set.(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;JLcom/frostwire/jlibtorrent/swig/entry;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_mutable_item_alert']]"
		[Register ("dht_mutable_item_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_mutable_item_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_mutable_item_alert p1)
		{
			const string __id = "dht_mutable_item_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_mutable_item_alert_priority_get", "()I", "")]
		public static unsafe int Dht_mutable_item_alert_priority_get ()
		{
			const string __id = "dht_mutable_item_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_mutable_item_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_mutable_item_alert_static_category_get ()
		{
			const string __id = "dht_mutable_item_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_mutable_item_alert']]"
		[Register ("dht_mutable_item_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)I", "")]
		public static unsafe int Dht_mutable_item_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_mutable_item_alert p1)
		{
			const string __id = "dht_mutable_item_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_mutable_item_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_mutable_item_alert']]"
		[Register ("dht_mutable_item_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_mutable_item_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_mutable_item_alert p1)
		{
			const string __id = "dht_mutable_item_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_mutable_item_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_outgoing_get_peers_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_outgoing_get_peers_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_outgoing_get_peers_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_outgoing_get_peers_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_outgoing_get_peers_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_outgoing_get_peers_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_outgoing_get_peers_alert_alert_type_get ()
		{
			const string __id = "dht_outgoing_get_peers_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_outgoing_get_peers_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_outgoing_get_peers_alert']]"
		[Register ("dht_outgoing_get_peers_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;)J", "")]
		public static unsafe long Dht_outgoing_get_peers_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_outgoing_get_peers_alert p1)
		{
			const string __id = "dht_outgoing_get_peers_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_outgoing_get_peers_alert_get_endpoint' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_outgoing_get_peers_alert']]"
		[Register ("dht_outgoing_get_peers_alert_get_endpoint", "(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;)J", "")]
		public static unsafe long Dht_outgoing_get_peers_alert_get_endpoint (long p0, global::FrostWire.Libtorrent.Swig.Dht_outgoing_get_peers_alert p1)
		{
			const string __id = "dht_outgoing_get_peers_alert_get_endpoint.(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_outgoing_get_peers_alert_info_hash_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_outgoing_get_peers_alert']]"
		[Register ("dht_outgoing_get_peers_alert_info_hash_get", "(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;)J", "")]
		public static unsafe long Dht_outgoing_get_peers_alert_info_hash_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_outgoing_get_peers_alert p1)
		{
			const string __id = "dht_outgoing_get_peers_alert_info_hash_get.(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_outgoing_get_peers_alert_info_hash_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_outgoing_get_peers_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("dht_outgoing_get_peers_alert_info_hash_set", "(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Dht_outgoing_get_peers_alert_info_hash_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_outgoing_get_peers_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "dht_outgoing_get_peers_alert_info_hash_set.(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_outgoing_get_peers_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_outgoing_get_peers_alert']]"
		[Register ("dht_outgoing_get_peers_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_outgoing_get_peers_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_outgoing_get_peers_alert p1)
		{
			const string __id = "dht_outgoing_get_peers_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_outgoing_get_peers_alert_obfuscated_info_hash_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_outgoing_get_peers_alert']]"
		[Register ("dht_outgoing_get_peers_alert_obfuscated_info_hash_get", "(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;)J", "")]
		public static unsafe long Dht_outgoing_get_peers_alert_obfuscated_info_hash_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_outgoing_get_peers_alert p1)
		{
			const string __id = "dht_outgoing_get_peers_alert_obfuscated_info_hash_get.(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_outgoing_get_peers_alert_obfuscated_info_hash_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_outgoing_get_peers_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("dht_outgoing_get_peers_alert_obfuscated_info_hash_set", "(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Dht_outgoing_get_peers_alert_obfuscated_info_hash_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_outgoing_get_peers_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "dht_outgoing_get_peers_alert_obfuscated_info_hash_set.(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_outgoing_get_peers_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_outgoing_get_peers_alert_priority_get", "()I", "")]
		public static unsafe int Dht_outgoing_get_peers_alert_priority_get ()
		{
			const string __id = "dht_outgoing_get_peers_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_outgoing_get_peers_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_outgoing_get_peers_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_outgoing_get_peers_alert_static_category_get ()
		{
			const string __id = "dht_outgoing_get_peers_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_outgoing_get_peers_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_outgoing_get_peers_alert']]"
		[Register ("dht_outgoing_get_peers_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;)I", "")]
		public static unsafe int Dht_outgoing_get_peers_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_outgoing_get_peers_alert p1)
		{
			const string __id = "dht_outgoing_get_peers_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_outgoing_get_peers_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_outgoing_get_peers_alert']]"
		[Register ("dht_outgoing_get_peers_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_outgoing_get_peers_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_outgoing_get_peers_alert p1)
		{
			const string __id = "dht_outgoing_get_peers_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_outgoing_get_peers_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_pkt_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_pkt_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_pkt_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_pkt_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_pkt_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_pkt_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_pkt_alert_alert_type_get ()
		{
			const string __id = "dht_pkt_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_pkt_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_pkt_alert']]"
		[Register ("dht_pkt_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;)J", "")]
		public static unsafe long Dht_pkt_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_pkt_alert p1)
		{
			const string __id = "dht_pkt_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_pkt_alert_direction_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_pkt_alert']]"
		[Register ("dht_pkt_alert_direction_get", "(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;)I", "")]
		public static unsafe int Dht_pkt_alert_direction_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_pkt_alert p1)
		{
			const string __id = "dht_pkt_alert_direction_get.(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_pkt_alert_direction_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_pkt_alert'] and parameter[3][@type='int']]"
		[Register ("dht_pkt_alert_direction_set", "(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;I)V", "")]
		public static unsafe void Dht_pkt_alert_direction_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_pkt_alert p1, int p2)
		{
			const string __id = "dht_pkt_alert_direction_set.(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_pkt_alert_get_node' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_pkt_alert']]"
		[Register ("dht_pkt_alert_get_node", "(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;)J", "")]
		public static unsafe long Dht_pkt_alert_get_node (long p0, global::FrostWire.Libtorrent.Swig.Dht_pkt_alert p1)
		{
			const string __id = "dht_pkt_alert_get_node.(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_pkt_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_pkt_alert']]"
		[Register ("dht_pkt_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_pkt_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_pkt_alert p1)
		{
			const string __id = "dht_pkt_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_pkt_alert_pkt_buf' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_pkt_alert']]"
		[Register ("dht_pkt_alert_pkt_buf", "(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;)J", "")]
		public static unsafe long Dht_pkt_alert_pkt_buf (long p0, global::FrostWire.Libtorrent.Swig.Dht_pkt_alert p1)
		{
			const string __id = "dht_pkt_alert_pkt_buf.(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_pkt_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_pkt_alert_priority_get", "()I", "")]
		public static unsafe int Dht_pkt_alert_priority_get ()
		{
			const string __id = "dht_pkt_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_pkt_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_pkt_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_pkt_alert_static_category_get ()
		{
			const string __id = "dht_pkt_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_pkt_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_pkt_alert']]"
		[Register ("dht_pkt_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;)I", "")]
		public static unsafe int Dht_pkt_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_pkt_alert p1)
		{
			const string __id = "dht_pkt_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_pkt_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_pkt_alert']]"
		[Register ("dht_pkt_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_pkt_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_pkt_alert p1)
		{
			const string __id = "dht_pkt_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_pkt_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_put_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_put_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_put_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_put_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_put_alert_alert_type_get ()
		{
			const string __id = "dht_put_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_put_alert']]"
		[Register ("dht_put_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)J", "")]
		public static unsafe long Dht_put_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_put_alert p1)
		{
			const string __id = "dht_put_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_get_public_key' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_put_alert']]"
		[Register ("dht_put_alert_get_public_key", "(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)J", "")]
		public static unsafe long Dht_put_alert_get_public_key (long p0, global::FrostWire.Libtorrent.Swig.Dht_put_alert p1)
		{
			const string __id = "dht_put_alert_get_public_key.(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_get_salt' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_put_alert']]"
		[Register ("dht_put_alert_get_salt", "(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)J", "")]
		public static unsafe long Dht_put_alert_get_salt (long p0, global::FrostWire.Libtorrent.Swig.Dht_put_alert p1)
		{
			const string __id = "dht_put_alert_get_salt.(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_get_seq' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_put_alert']]"
		[Register ("dht_put_alert_get_seq", "(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)J", "")]
		public static unsafe long Dht_put_alert_get_seq (long p0, global::FrostWire.Libtorrent.Swig.Dht_put_alert p1)
		{
			const string __id = "dht_put_alert_get_seq.(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_get_signature' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_put_alert']]"
		[Register ("dht_put_alert_get_signature", "(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)J", "")]
		public static unsafe long Dht_put_alert_get_signature (long p0, global::FrostWire.Libtorrent.Swig.Dht_put_alert p1)
		{
			const string __id = "dht_put_alert_get_signature.(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_put_alert']]"
		[Register ("dht_put_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_put_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_put_alert p1)
		{
			const string __id = "dht_put_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_num_success_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_put_alert']]"
		[Register ("dht_put_alert_num_success_get", "(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)I", "")]
		public static unsafe int Dht_put_alert_num_success_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_put_alert p1)
		{
			const string __id = "dht_put_alert_num_success_get.(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_num_success_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_put_alert'] and parameter[3][@type='int']]"
		[Register ("dht_put_alert_num_success_set", "(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;I)V", "")]
		public static unsafe void Dht_put_alert_num_success_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_put_alert p1, int p2)
		{
			const string __id = "dht_put_alert_num_success_set.(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_put_alert_priority_get", "()I", "")]
		public static unsafe int Dht_put_alert_priority_get ()
		{
			const string __id = "dht_put_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_put_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_put_alert_static_category_get ()
		{
			const string __id = "dht_put_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_target_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_put_alert']]"
		[Register ("dht_put_alert_target_get", "(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)J", "")]
		public static unsafe long Dht_put_alert_target_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_put_alert p1)
		{
			const string __id = "dht_put_alert_target_get.(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_target_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_put_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("dht_put_alert_target_set", "(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Dht_put_alert_target_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_put_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "dht_put_alert_target_set.(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_put_alert']]"
		[Register ("dht_put_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)I", "")]
		public static unsafe int Dht_put_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_put_alert p1)
		{
			const string __id = "dht_put_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_put_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_put_alert']]"
		[Register ("dht_put_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_put_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_put_alert p1)
		{
			const string __id = "dht_put_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_put_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_reply_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_reply_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_reply_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_reply_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_reply_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_reply_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_reply_alert_alert_type_get ()
		{
			const string __id = "dht_reply_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_reply_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_reply_alert']]"
		[Register ("dht_reply_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_reply_alert;)J", "")]
		public static unsafe long Dht_reply_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_reply_alert p1)
		{
			const string __id = "dht_reply_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_reply_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_reply_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_reply_alert']]"
		[Register ("dht_reply_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_reply_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_reply_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_reply_alert p1)
		{
			const string __id = "dht_reply_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_reply_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_reply_alert_num_peers_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_reply_alert']]"
		[Register ("dht_reply_alert_num_peers_get", "(JLcom/frostwire/jlibtorrent/swig/dht_reply_alert;)I", "")]
		public static unsafe int Dht_reply_alert_num_peers_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_reply_alert p1)
		{
			const string __id = "dht_reply_alert_num_peers_get.(JLcom/frostwire/jlibtorrent/swig/dht_reply_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_reply_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_reply_alert_priority_get", "()I", "")]
		public static unsafe int Dht_reply_alert_priority_get ()
		{
			const string __id = "dht_reply_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_reply_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_reply_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_reply_alert_static_category_get ()
		{
			const string __id = "dht_reply_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_reply_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_reply_alert']]"
		[Register ("dht_reply_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_reply_alert;)I", "")]
		public static unsafe int Dht_reply_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_reply_alert p1)
		{
			const string __id = "dht_reply_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_reply_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_reply_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_reply_alert']]"
		[Register ("dht_reply_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_reply_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_reply_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_reply_alert p1)
		{
			const string __id = "dht_reply_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_reply_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_routing_bucket_last_active_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket']]"
		[Register ("dht_routing_bucket_last_active_get", "(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;)I", "")]
		public static unsafe int Dht_routing_bucket_last_active_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket p1)
		{
			const string __id = "dht_routing_bucket_last_active_get.(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_routing_bucket_last_active_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket'] and parameter[3][@type='int']]"
		[Register ("dht_routing_bucket_last_active_set", "(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;I)V", "")]
		public static unsafe void Dht_routing_bucket_last_active_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket p1, int p2)
		{
			const string __id = "dht_routing_bucket_last_active_set.(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_routing_bucket_num_nodes_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket']]"
		[Register ("dht_routing_bucket_num_nodes_get", "(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;)I", "")]
		public static unsafe int Dht_routing_bucket_num_nodes_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket p1)
		{
			const string __id = "dht_routing_bucket_num_nodes_get.(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_routing_bucket_num_nodes_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket'] and parameter[3][@type='int']]"
		[Register ("dht_routing_bucket_num_nodes_set", "(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;I)V", "")]
		public static unsafe void Dht_routing_bucket_num_nodes_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket p1, int p2)
		{
			const string __id = "dht_routing_bucket_num_nodes_set.(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_routing_bucket_num_replacements_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket']]"
		[Register ("dht_routing_bucket_num_replacements_get", "(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;)I", "")]
		public static unsafe int Dht_routing_bucket_num_replacements_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket p1)
		{
			const string __id = "dht_routing_bucket_num_replacements_get.(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_routing_bucket_num_replacements_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket'] and parameter[3][@type='int']]"
		[Register ("dht_routing_bucket_num_replacements_set", "(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;I)V", "")]
		public static unsafe void Dht_routing_bucket_num_replacements_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket p1, int p2)
		{
			const string __id = "dht_routing_bucket_num_replacements_set.(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_routing_bucket_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket_vector']]"
		[Register ("dht_routing_bucket_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;)J", "")]
		public static unsafe long Dht_routing_bucket_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket_vector p1)
		{
			const string __id = "dht_routing_bucket_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_routing_bucket_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket_vector']]"
		[Register ("dht_routing_bucket_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;)V", "")]
		public static unsafe void Dht_routing_bucket_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket_vector p1)
		{
			const string __id = "dht_routing_bucket_vector_clear.(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_routing_bucket_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket_vector']]"
		[Register ("dht_routing_bucket_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;)Z", "")]
		public static unsafe bool Dht_routing_bucket_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket_vector p1)
		{
			const string __id = "dht_routing_bucket_vector_empty.(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_routing_bucket_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket_vector'] and parameter[3][@type='int']]"
		[Register ("dht_routing_bucket_vector_get", "(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;I)J", "")]
		public static unsafe long Dht_routing_bucket_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket_vector p1, int p2)
		{
			const string __id = "dht_routing_bucket_vector_get.(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_routing_bucket_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket']]"
		[Register ("dht_routing_bucket_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;)V", "")]
		public static unsafe void Dht_routing_bucket_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket p3)
		{
			const string __id = "dht_routing_bucket_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_routing_bucket_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket_vector'] and parameter[3][@type='long']]"
		[Register ("dht_routing_bucket_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;J)V", "")]
		public static unsafe void Dht_routing_bucket_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket_vector p1, long p2)
		{
			const string __id = "dht_routing_bucket_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_routing_bucket_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket']]"
		[Register ("dht_routing_bucket_vector_set", "(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;IJLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;)V", "")]
		public static unsafe void Dht_routing_bucket_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket p4)
		{
			const string __id = "dht_routing_bucket_vector_set.(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;IJLcom/frostwire/jlibtorrent/swig/dht_routing_bucket;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_routing_bucket_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket_vector']]"
		[Register ("dht_routing_bucket_vector_size", "(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;)J", "")]
		public static unsafe long Dht_routing_bucket_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket_vector p1)
		{
			const string __id = "dht_routing_bucket_vector_size.(JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_sample_infohashes_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_sample_infohashes_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_sample_infohashes_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_sample_infohashes_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_sample_infohashes_alert_alert_type_get ()
		{
			const string __id = "dht_sample_infohashes_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_sample_infohashes_alert']]"
		[Register ("dht_sample_infohashes_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)J", "")]
		public static unsafe long Dht_sample_infohashes_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_sample_infohashes_alert p1)
		{
			const string __id = "dht_sample_infohashes_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_get_endpoint' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_sample_infohashes_alert']]"
		[Register ("dht_sample_infohashes_alert_get_endpoint", "(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)J", "")]
		public static unsafe long Dht_sample_infohashes_alert_get_endpoint (long p0, global::FrostWire.Libtorrent.Swig.Dht_sample_infohashes_alert p1)
		{
			const string __id = "dht_sample_infohashes_alert_get_endpoint.(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_get_interval' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_sample_infohashes_alert']]"
		[Register ("dht_sample_infohashes_alert_get_interval", "(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)J", "")]
		public static unsafe long Dht_sample_infohashes_alert_get_interval (long p0, global::FrostWire.Libtorrent.Swig.Dht_sample_infohashes_alert p1)
		{
			const string __id = "dht_sample_infohashes_alert_get_interval.(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_sample_infohashes_alert']]"
		[Register ("dht_sample_infohashes_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_sample_infohashes_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_sample_infohashes_alert p1)
		{
			const string __id = "dht_sample_infohashes_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_nodes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_sample_infohashes_alert']]"
		[Register ("dht_sample_infohashes_alert_nodes", "(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)J", "")]
		public static unsafe long Dht_sample_infohashes_alert_nodes (long p0, global::FrostWire.Libtorrent.Swig.Dht_sample_infohashes_alert p1)
		{
			const string __id = "dht_sample_infohashes_alert_nodes.(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_num_infohashes_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_sample_infohashes_alert']]"
		[Register ("dht_sample_infohashes_alert_num_infohashes_get", "(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)I", "")]
		public static unsafe int Dht_sample_infohashes_alert_num_infohashes_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_sample_infohashes_alert p1)
		{
			const string __id = "dht_sample_infohashes_alert_num_infohashes_get.(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_num_nodes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_sample_infohashes_alert']]"
		[Register ("dht_sample_infohashes_alert_num_nodes", "(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)I", "")]
		public static unsafe int Dht_sample_infohashes_alert_num_nodes (long p0, global::FrostWire.Libtorrent.Swig.Dht_sample_infohashes_alert p1)
		{
			const string __id = "dht_sample_infohashes_alert_num_nodes.(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_num_samples' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_sample_infohashes_alert']]"
		[Register ("dht_sample_infohashes_alert_num_samples", "(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)I", "")]
		public static unsafe int Dht_sample_infohashes_alert_num_samples (long p0, global::FrostWire.Libtorrent.Swig.Dht_sample_infohashes_alert p1)
		{
			const string __id = "dht_sample_infohashes_alert_num_samples.(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_sample_infohashes_alert_priority_get", "()I", "")]
		public static unsafe int Dht_sample_infohashes_alert_priority_get ()
		{
			const string __id = "dht_sample_infohashes_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_samples' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_sample_infohashes_alert']]"
		[Register ("dht_sample_infohashes_alert_samples", "(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)J", "")]
		public static unsafe long Dht_sample_infohashes_alert_samples (long p0, global::FrostWire.Libtorrent.Swig.Dht_sample_infohashes_alert p1)
		{
			const string __id = "dht_sample_infohashes_alert_samples.(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_sample_infohashes_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_sample_infohashes_alert_static_category_get ()
		{
			const string __id = "dht_sample_infohashes_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_sample_infohashes_alert']]"
		[Register ("dht_sample_infohashes_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)I", "")]
		public static unsafe int Dht_sample_infohashes_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_sample_infohashes_alert p1)
		{
			const string __id = "dht_sample_infohashes_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_sample_infohashes_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_sample_infohashes_alert']]"
		[Register ("dht_sample_infohashes_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_sample_infohashes_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_sample_infohashes_alert p1)
		{
			const string __id = "dht_sample_infohashes_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_sample_infohashes_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_aggressive_lookups_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_aggressive_lookups_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z", "")]
		public static unsafe bool Dht_settings_aggressive_lookups_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_aggressive_lookups_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_aggressive_lookups_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='boolean']]"
		[Register ("dht_settings_aggressive_lookups_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V", "")]
		public static unsafe void Dht_settings_aggressive_lookups_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, bool p2)
		{
			const string __id = "dht_settings_aggressive_lookups_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_block_ratelimit_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_block_ratelimit_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I", "")]
		public static unsafe int Dht_settings_block_ratelimit_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_block_ratelimit_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_block_ratelimit_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='int']]"
		[Register ("dht_settings_block_ratelimit_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V", "")]
		public static unsafe void Dht_settings_block_ratelimit_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, int p2)
		{
			const string __id = "dht_settings_block_ratelimit_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_block_timeout_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_block_timeout_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I", "")]
		public static unsafe int Dht_settings_block_timeout_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_block_timeout_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_block_timeout_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='int']]"
		[Register ("dht_settings_block_timeout_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V", "")]
		public static unsafe void Dht_settings_block_timeout_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, int p2)
		{
			const string __id = "dht_settings_block_timeout_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_enforce_node_id_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_enforce_node_id_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z", "")]
		public static unsafe bool Dht_settings_enforce_node_id_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_enforce_node_id_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_enforce_node_id_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='boolean']]"
		[Register ("dht_settings_enforce_node_id_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V", "")]
		public static unsafe void Dht_settings_enforce_node_id_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, bool p2)
		{
			const string __id = "dht_settings_enforce_node_id_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_extended_routing_table_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_extended_routing_table_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z", "")]
		public static unsafe bool Dht_settings_extended_routing_table_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_extended_routing_table_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_extended_routing_table_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='boolean']]"
		[Register ("dht_settings_extended_routing_table_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V", "")]
		public static unsafe void Dht_settings_extended_routing_table_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, bool p2)
		{
			const string __id = "dht_settings_extended_routing_table_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_ignore_dark_internet_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_ignore_dark_internet_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z", "")]
		public static unsafe bool Dht_settings_ignore_dark_internet_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_ignore_dark_internet_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_ignore_dark_internet_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='boolean']]"
		[Register ("dht_settings_ignore_dark_internet_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V", "")]
		public static unsafe void Dht_settings_ignore_dark_internet_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, bool p2)
		{
			const string __id = "dht_settings_ignore_dark_internet_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_item_lifetime_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_item_lifetime_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I", "")]
		public static unsafe int Dht_settings_item_lifetime_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_item_lifetime_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_item_lifetime_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='int']]"
		[Register ("dht_settings_item_lifetime_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V", "")]
		public static unsafe void Dht_settings_item_lifetime_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, int p2)
		{
			const string __id = "dht_settings_item_lifetime_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_max_dht_items_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_max_dht_items_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I", "")]
		public static unsafe int Dht_settings_max_dht_items_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_max_dht_items_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_max_dht_items_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='int']]"
		[Register ("dht_settings_max_dht_items_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V", "")]
		public static unsafe void Dht_settings_max_dht_items_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, int p2)
		{
			const string __id = "dht_settings_max_dht_items_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_max_fail_count_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_max_fail_count_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I", "")]
		public static unsafe int Dht_settings_max_fail_count_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_max_fail_count_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_max_fail_count_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='int']]"
		[Register ("dht_settings_max_fail_count_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V", "")]
		public static unsafe void Dht_settings_max_fail_count_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, int p2)
		{
			const string __id = "dht_settings_max_fail_count_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_max_infohashes_sample_count_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_max_infohashes_sample_count_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I", "")]
		public static unsafe int Dht_settings_max_infohashes_sample_count_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_max_infohashes_sample_count_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_max_infohashes_sample_count_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='int']]"
		[Register ("dht_settings_max_infohashes_sample_count_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V", "")]
		public static unsafe void Dht_settings_max_infohashes_sample_count_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, int p2)
		{
			const string __id = "dht_settings_max_infohashes_sample_count_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_max_peers_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_max_peers_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I", "")]
		public static unsafe int Dht_settings_max_peers_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_max_peers_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_max_peers_reply_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_max_peers_reply_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I", "")]
		public static unsafe int Dht_settings_max_peers_reply_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_max_peers_reply_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_max_peers_reply_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='int']]"
		[Register ("dht_settings_max_peers_reply_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V", "")]
		public static unsafe void Dht_settings_max_peers_reply_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, int p2)
		{
			const string __id = "dht_settings_max_peers_reply_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_max_peers_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='int']]"
		[Register ("dht_settings_max_peers_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V", "")]
		public static unsafe void Dht_settings_max_peers_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, int p2)
		{
			const string __id = "dht_settings_max_peers_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_max_torrent_search_reply_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_max_torrent_search_reply_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I", "")]
		public static unsafe int Dht_settings_max_torrent_search_reply_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_max_torrent_search_reply_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_max_torrent_search_reply_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='int']]"
		[Register ("dht_settings_max_torrent_search_reply_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V", "")]
		public static unsafe void Dht_settings_max_torrent_search_reply_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, int p2)
		{
			const string __id = "dht_settings_max_torrent_search_reply_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_max_torrents_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_max_torrents_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I", "")]
		public static unsafe int Dht_settings_max_torrents_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_max_torrents_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_max_torrents_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='int']]"
		[Register ("dht_settings_max_torrents_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V", "")]
		public static unsafe void Dht_settings_max_torrents_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, int p2)
		{
			const string __id = "dht_settings_max_torrents_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_privacy_lookups_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_privacy_lookups_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z", "")]
		public static unsafe bool Dht_settings_privacy_lookups_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_privacy_lookups_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_privacy_lookups_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='boolean']]"
		[Register ("dht_settings_privacy_lookups_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V", "")]
		public static unsafe void Dht_settings_privacy_lookups_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, bool p2)
		{
			const string __id = "dht_settings_privacy_lookups_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_read_only_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_read_only_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z", "")]
		public static unsafe bool Dht_settings_read_only_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_read_only_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_read_only_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='boolean']]"
		[Register ("dht_settings_read_only_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V", "")]
		public static unsafe void Dht_settings_read_only_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, bool p2)
		{
			const string __id = "dht_settings_read_only_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_restrict_routing_ips_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_restrict_routing_ips_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z", "")]
		public static unsafe bool Dht_settings_restrict_routing_ips_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_restrict_routing_ips_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_restrict_routing_ips_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='boolean']]"
		[Register ("dht_settings_restrict_routing_ips_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V", "")]
		public static unsafe void Dht_settings_restrict_routing_ips_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, bool p2)
		{
			const string __id = "dht_settings_restrict_routing_ips_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_restrict_search_ips_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_restrict_search_ips_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z", "")]
		public static unsafe bool Dht_settings_restrict_search_ips_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_restrict_search_ips_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_restrict_search_ips_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='boolean']]"
		[Register ("dht_settings_restrict_search_ips_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V", "")]
		public static unsafe void Dht_settings_restrict_search_ips_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, bool p2)
		{
			const string __id = "dht_settings_restrict_search_ips_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_sample_infohashes_interval_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_sample_infohashes_interval_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I", "")]
		public static unsafe int Dht_settings_sample_infohashes_interval_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_sample_infohashes_interval_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_sample_infohashes_interval_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='int']]"
		[Register ("dht_settings_sample_infohashes_interval_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V", "")]
		public static unsafe void Dht_settings_sample_infohashes_interval_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, int p2)
		{
			const string __id = "dht_settings_sample_infohashes_interval_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_search_branching_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_search_branching_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I", "")]
		public static unsafe int Dht_settings_search_branching_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_search_branching_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_search_branching_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='int']]"
		[Register ("dht_settings_search_branching_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V", "")]
		public static unsafe void Dht_settings_search_branching_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, int p2)
		{
			const string __id = "dht_settings_search_branching_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_upload_rate_limit_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("dht_settings_upload_rate_limit_get", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I", "")]
		public static unsafe int Dht_settings_upload_rate_limit_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1)
		{
			const string __id = "dht_settings_upload_rate_limit_get.(JLcom/frostwire/jlibtorrent/swig/dht_settings;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_settings_upload_rate_limit_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_settings'] and parameter[3][@type='int']]"
		[Register ("dht_settings_upload_rate_limit_set", "(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V", "")]
		public static unsafe void Dht_settings_upload_rate_limit_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_settings p1, int p2)
		{
			const string __id = "dht_settings_upload_rate_limit_set.(JLcom/frostwire/jlibtorrent/swig/dht_settings;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_state_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_state']]"
		[Register ("dht_state_clear", "(JLcom/frostwire/jlibtorrent/swig/dht_state;)V", "")]
		public static unsafe void Dht_state_clear (long p0, global::FrostWire.Libtorrent.Swig.Dht_state p1)
		{
			const string __id = "dht_state_clear.(JLcom/frostwire/jlibtorrent/swig/dht_state;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_state_nids_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_state']]"
		[Register ("dht_state_nids_get", "(JLcom/frostwire/jlibtorrent/swig/dht_state;)J", "")]
		public static unsafe long Dht_state_nids_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_state p1)
		{
			const string __id = "dht_state_nids_get.(JLcom/frostwire/jlibtorrent/swig/dht_state;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_state_nids_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_state'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair_vector']]"
		[Register ("dht_state_nids_set", "(JLcom/frostwire/jlibtorrent/swig/dht_state;JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;)V", "")]
		public static unsafe void Dht_state_nids_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_state p1, long p2, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair_vector p3)
		{
			const string __id = "dht_state_nids_set.(JLcom/frostwire/jlibtorrent/swig/dht_state;JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_state_nodes6_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_state']]"
		[Register ("dht_state_nodes6_get", "(JLcom/frostwire/jlibtorrent/swig/dht_state;)J", "")]
		public static unsafe long Dht_state_nodes6_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_state p1)
		{
			const string __id = "dht_state_nodes6_get.(JLcom/frostwire/jlibtorrent/swig/dht_state;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_state_nodes6_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_state'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.udp_endpoint_vector']]"
		[Register ("dht_state_nodes6_set", "(JLcom/frostwire/jlibtorrent/swig/dht_state;JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;)V", "")]
		public static unsafe void Dht_state_nodes6_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_state p1, long p2, global::FrostWire.Libtorrent.Swig.Udp_endpoint_vector p3)
		{
			const string __id = "dht_state_nodes6_set.(JLcom/frostwire/jlibtorrent/swig/dht_state;JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_state_nodes_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_state']]"
		[Register ("dht_state_nodes_get", "(JLcom/frostwire/jlibtorrent/swig/dht_state;)J", "")]
		public static unsafe long Dht_state_nodes_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_state p1)
		{
			const string __id = "dht_state_nodes_get.(JLcom/frostwire/jlibtorrent/swig/dht_state;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_state_nodes_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_state'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.udp_endpoint_vector']]"
		[Register ("dht_state_nodes_set", "(JLcom/frostwire/jlibtorrent/swig/dht_state;JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;)V", "")]
		public static unsafe void Dht_state_nodes_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_state p1, long p2, global::FrostWire.Libtorrent.Swig.Udp_endpoint_vector p3)
		{
			const string __id = "dht_state_nodes_set.(JLcom/frostwire/jlibtorrent/swig/dht_state;JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_stats_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dht_stats_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Dht_stats_alert_SWIGUpcast (long p0)
		{
			const string __id = "dht_stats_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_stats_alert_active_requests_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_stats_alert']]"
		[Register ("dht_stats_alert_active_requests_get", "(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;)J", "")]
		public static unsafe long Dht_stats_alert_active_requests_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_stats_alert p1)
		{
			const string __id = "dht_stats_alert_active_requests_get.(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_stats_alert_active_requests_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_stats_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.dht_lookup_vector']]"
		[Register ("dht_stats_alert_active_requests_set", "(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;)V", "")]
		public static unsafe void Dht_stats_alert_active_requests_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_stats_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Dht_lookup_vector p3)
		{
			const string __id = "dht_stats_alert_active_requests_set.(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;JLcom/frostwire/jlibtorrent/swig/dht_lookup_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_stats_alert_alert_type_get' and count(parameter)=0]"
		[Register ("dht_stats_alert_alert_type_get", "()I", "")]
		public static unsafe int Dht_stats_alert_alert_type_get ()
		{
			const string __id = "dht_stats_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_stats_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_stats_alert']]"
		[Register ("dht_stats_alert_category", "(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;)J", "")]
		public static unsafe long Dht_stats_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Dht_stats_alert p1)
		{
			const string __id = "dht_stats_alert_category.(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_stats_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_stats_alert']]"
		[Register ("dht_stats_alert_message", "(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_stats_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Dht_stats_alert p1)
		{
			const string __id = "dht_stats_alert_message.(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_stats_alert_priority_get' and count(parameter)=0]"
		[Register ("dht_stats_alert_priority_get", "()I", "")]
		public static unsafe int Dht_stats_alert_priority_get ()
		{
			const string __id = "dht_stats_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_stats_alert_routing_table_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_stats_alert']]"
		[Register ("dht_stats_alert_routing_table_get", "(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;)J", "")]
		public static unsafe long Dht_stats_alert_routing_table_get (long p0, global::FrostWire.Libtorrent.Swig.Dht_stats_alert p1)
		{
			const string __id = "dht_stats_alert_routing_table_get.(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_stats_alert_routing_table_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_stats_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.dht_routing_bucket_vector']]"
		[Register ("dht_stats_alert_routing_table_set", "(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;)V", "")]
		public static unsafe void Dht_stats_alert_routing_table_set (long p0, global::FrostWire.Libtorrent.Swig.Dht_stats_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Dht_routing_bucket_vector p3)
		{
			const string __id = "dht_stats_alert_routing_table_set.(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;JLcom/frostwire/jlibtorrent/swig/dht_routing_bucket_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_stats_alert_static_category_get' and count(parameter)=0]"
		[Register ("dht_stats_alert_static_category_get", "()J", "")]
		public static unsafe long Dht_stats_alert_static_category_get ()
		{
			const string __id = "dht_stats_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_stats_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_stats_alert']]"
		[Register ("dht_stats_alert_type", "(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;)I", "")]
		public static unsafe int Dht_stats_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Dht_stats_alert p1)
		{
			const string __id = "dht_stats_alert_type.(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='dht_stats_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.dht_stats_alert']]"
		[Register ("dht_stats_alert_what", "(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;)Ljava/lang/String;", "")]
		public static unsafe string Dht_stats_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Dht_stats_alert p1)
		{
			const string __id = "dht_stats_alert_what.(JLcom/frostwire/jlibtorrent/swig/dht_stats_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='directBufferAddress' and count(parameter)=1 and parameter[1][@type='java.nio.Buffer']]"
		[Register ("directBufferAddress", "(Ljava/nio/Buffer;)J", "")]
		public static unsafe long DirectBufferAddress (global::Java.Nio.Buffer p0)
		{
			const string __id = "directBufferAddress.(Ljava/nio/Buffer;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='directBufferCapacity' and count(parameter)=1 and parameter[1][@type='java.nio.Buffer']]"
		[Register ("directBufferCapacity", "(Ljava/nio/Buffer;)J", "")]
		public static unsafe long DirectBufferCapacity (global::Java.Nio.Buffer p0)
		{
			const string __id = "directBufferCapacity.(Ljava/nio/Buffer;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='directory_not_empty_get' and count(parameter)=0]"
		[Register ("directory_not_empty_get", "()I", "")]
		public static unsafe int Directory_not_empty_get ()
		{
			const string __id = "directory_not_empty_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='duplicate_is_error_get' and count(parameter)=0]"
		[Register ("duplicate_is_error_get", "()J", "")]
		public static unsafe long Duplicate_is_error_get ()
		{
			const string __id = "duplicate_is_error_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ed25519_add_scalar_public' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("ed25519_add_scalar_public", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)J", "")]
		public static unsafe long Ed25519_add_scalar_public (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "ed25519_add_scalar_public.(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ed25519_add_scalar_secret' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("ed25519_add_scalar_secret", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)J", "")]
		public static unsafe long Ed25519_add_scalar_secret (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "ed25519_add_scalar_secret.(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ed25519_create_keypair' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("ed25519_create_keypair", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J", "")]
		public static unsafe long Ed25519_create_keypair (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1)
		{
			const string __id = "ed25519_create_keypair.(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ed25519_create_seed' and count(parameter)=0]"
		[Register ("ed25519_create_seed", "()J", "")]
		public static unsafe long Ed25519_create_seed ()
		{
			const string __id = "ed25519_create_seed.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ed25519_key_exchange' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("ed25519_key_exchange", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)J", "")]
		public static unsafe long Ed25519_key_exchange (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "ed25519_key_exchange.(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ed25519_sign' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("ed25519_sign", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)J", "")]
		public static unsafe long Ed25519_sign (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3, long p4, global::FrostWire.Libtorrent.Swig.Byte_vector p5)
		{
			const string __id = "ed25519_sign.(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ed25519_verify' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("ed25519_verify", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)Z", "")]
		public static unsafe bool Ed25519_verify (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3, long p4, global::FrostWire.Libtorrent.Swig.Byte_vector p5)
		{
			const string __id = "ed25519_verify.(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_bdecode' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("entry_bdecode", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J", "")]
		public static unsafe long Entry_bdecode (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1)
		{
			const string __id = "entry_bdecode.(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_bencode' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("entry_bencode", "(JLcom/frostwire/jlibtorrent/swig/entry;)J", "")]
		public static unsafe long Entry_bencode (long p0, global::FrostWire.Libtorrent.Swig.Entry p1)
		{
			const string __id = "entry_bencode.(JLcom/frostwire/jlibtorrent/swig/entry;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_dict' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("entry_dict", "(JLcom/frostwire/jlibtorrent/swig/entry;)J", "")]
		public static unsafe long Entry_dict (long p0, global::FrostWire.Libtorrent.Swig.Entry p1)
		{
			const string __id = "entry_dict.(JLcom/frostwire/jlibtorrent/swig/entry;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_find_key' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_view']]"
		[Register ("entry_find_key", "(JLcom/frostwire/jlibtorrent/swig/entry;JLcom/frostwire/jlibtorrent/swig/string_view;)J", "")]
		public static unsafe long Entry_find_key (long p0, global::FrostWire.Libtorrent.Swig.Entry p1, long p2, global::FrostWire.Libtorrent.Swig.String_view p3)
		{
			const string __id = "entry_find_key.(JLcom/frostwire/jlibtorrent/swig/entry;JLcom/frostwire/jlibtorrent/swig/string_view;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_from_preformatted_bytes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("entry_from_preformatted_bytes", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J", "")]
		public static unsafe long Entry_from_preformatted_bytes (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1)
		{
			const string __id = "entry_from_preformatted_bytes.(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_from_string_bytes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("entry_from_string_bytes", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J", "")]
		public static unsafe long Entry_from_string_bytes (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1)
		{
			const string __id = "entry_from_string_bytes.(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry'] and parameter[3][@type='java.lang.String']]"
		[Register ("entry_get", "(JLcom/frostwire/jlibtorrent/swig/entry;Ljava/lang/String;)J", "")]
		public static unsafe long Entry_get (long p0, global::FrostWire.Libtorrent.Swig.Entry p1, string p2)
		{
			const string __id = "entry_get.(JLcom/frostwire/jlibtorrent/swig/entry;Ljava/lang/String;)J";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_integer' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("entry_integer", "(JLcom/frostwire/jlibtorrent/swig/entry;)J", "")]
		public static unsafe long Entry_integer (long p0, global::FrostWire.Libtorrent.Swig.Entry p1)
		{
			const string __id = "entry_integer.(JLcom/frostwire/jlibtorrent/swig/entry;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_list' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("entry_list", "(JLcom/frostwire/jlibtorrent/swig/entry;)J", "")]
		public static unsafe long Entry_list (long p0, global::FrostWire.Libtorrent.Swig.Entry p1)
		{
			const string __id = "entry_list.(JLcom/frostwire/jlibtorrent/swig/entry;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_preformatted_bytes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("entry_preformatted_bytes", "(JLcom/frostwire/jlibtorrent/swig/entry;)J", "")]
		public static unsafe long Entry_preformatted_bytes (long p0, global::FrostWire.Libtorrent.Swig.Entry p1)
		{
			const string __id = "entry_preformatted_bytes.(JLcom/frostwire/jlibtorrent/swig/entry;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_set__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("entry_set__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/entry;Ljava/lang/String;Ljava/lang/String;)V", "")]
		public static unsafe void Entry_set__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Entry p1, string p2, string p3)
		{
			const string __id = "entry_set__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/entry;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (native_p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_set__SWIG_1' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("entry_set__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/entry;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Entry_set__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Entry p1, string p2, long p3, global::FrostWire.Libtorrent.Swig.Byte_vector p4)
		{
			const string __id = "entry_set__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/entry;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_set__SWIG_2' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long']]"
		[Register ("entry_set__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/entry;Ljava/lang/String;J)V", "")]
		public static unsafe void Entry_set__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Entry p1, string p2, long p3)
		{
			const string __id = "entry_set__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/entry;Ljava/lang/String;J)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_set__SWIG_3' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("entry_set__SWIG_3", "(JLcom/frostwire/jlibtorrent/swig/entry;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/entry;)V", "")]
		public static unsafe void Entry_set__SWIG_3 (long p0, global::FrostWire.Libtorrent.Swig.Entry p1, string p2, long p3, global::FrostWire.Libtorrent.Swig.Entry p4)
		{
			const string __id = "entry_set__SWIG_3.(JLcom/frostwire/jlibtorrent/swig/entry;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/entry;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_string' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("entry_string", "(JLcom/frostwire/jlibtorrent/swig/entry;)Ljava/lang/String;", "")]
		public static unsafe string Entry_string (long p0, global::FrostWire.Libtorrent.Swig.Entry p1)
		{
			const string __id = "entry_string.(JLcom/frostwire/jlibtorrent/swig/entry;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_string_bytes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("entry_string_bytes", "(JLcom/frostwire/jlibtorrent/swig/entry;)J", "")]
		public static unsafe long Entry_string_bytes (long p0, global::FrostWire.Libtorrent.Swig.Entry p1)
		{
			const string __id = "entry_string_bytes.(JLcom/frostwire/jlibtorrent/swig/entry;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_to_string' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("entry_to_string", "(JLcom/frostwire/jlibtorrent/swig/entry;)Ljava/lang/String;", "")]
		public static unsafe string Entry_to_string (long p0, global::FrostWire.Libtorrent.Swig.Entry p1)
		{
			const string __id = "entry_to_string.(JLcom/frostwire/jlibtorrent/swig/entry;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("entry_type", "(JLcom/frostwire/jlibtorrent/swig/entry;)I", "")]
		public static unsafe int Entry_type (long p0, global::FrostWire.Libtorrent.Swig.Entry p1)
		{
			const string __id = "entry_type.(JLcom/frostwire/jlibtorrent/swig/entry;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry_vector']]"
		[Register ("entry_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/entry_vector;)J", "")]
		public static unsafe long Entry_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Entry_vector p1)
		{
			const string __id = "entry_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/entry_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry_vector']]"
		[Register ("entry_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/entry_vector;)V", "")]
		public static unsafe void Entry_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Entry_vector p1)
		{
			const string __id = "entry_vector_clear.(JLcom/frostwire/jlibtorrent/swig/entry_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry_vector']]"
		[Register ("entry_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/entry_vector;)Z", "")]
		public static unsafe bool Entry_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Entry_vector p1)
		{
			const string __id = "entry_vector_empty.(JLcom/frostwire/jlibtorrent/swig/entry_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry_vector'] and parameter[3][@type='int']]"
		[Register ("entry_vector_get", "(JLcom/frostwire/jlibtorrent/swig/entry_vector;I)J", "")]
		public static unsafe long Entry_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Entry_vector p1, int p2)
		{
			const string __id = "entry_vector_get.(JLcom/frostwire/jlibtorrent/swig/entry_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("entry_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/entry_vector;JLcom/frostwire/jlibtorrent/swig/entry;)V", "")]
		public static unsafe void Entry_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Entry_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Entry p3)
		{
			const string __id = "entry_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/entry_vector;JLcom/frostwire/jlibtorrent/swig/entry;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry_vector'] and parameter[3][@type='long']]"
		[Register ("entry_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/entry_vector;J)V", "")]
		public static unsafe void Entry_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Entry_vector p1, long p2)
		{
			const string __id = "entry_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/entry_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("entry_vector_set", "(JLcom/frostwire/jlibtorrent/swig/entry_vector;IJLcom/frostwire/jlibtorrent/swig/entry;)V", "")]
		public static unsafe void Entry_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Entry_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Entry p4)
		{
			const string __id = "entry_vector_set.(JLcom/frostwire/jlibtorrent/swig/entry_vector;IJLcom/frostwire/jlibtorrent/swig/entry;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='entry_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry_vector']]"
		[Register ("entry_vector_size", "(JLcom/frostwire/jlibtorrent/swig/entry_vector;)J", "")]
		public static unsafe long Entry_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Entry_vector p1)
		{
			const string __id = "entry_vector_size.(JLcom/frostwire/jlibtorrent/swig/entry_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='enum_net_interfaces' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session']]"
		[Register ("enum_net_interfaces", "(JLcom/frostwire/jlibtorrent/swig/session;)J", "")]
		public static unsafe long Enum_net_interfaces (long p0, global::FrostWire.Libtorrent.Swig.Session p1)
		{
			const string __id = "enum_net_interfaces.(JLcom/frostwire/jlibtorrent/swig/session;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='enum_routes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session']]"
		[Register ("enum_routes", "(JLcom/frostwire/jlibtorrent/swig/session;)J", "")]
		public static unsafe long Enum_routes (long p0, global::FrostWire.Libtorrent.Swig.Session p1)
		{
			const string __id = "enum_routes.(JLcom/frostwire/jlibtorrent/swig/session;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='error_code_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("error_code_clear", "(JLcom/frostwire/jlibtorrent/swig/error_code;)V", "")]
		public static unsafe void Error_code_clear (long p0, global::FrostWire.Libtorrent.Swig.Error_code p1)
		{
			const string __id = "error_code_clear.(JLcom/frostwire/jlibtorrent/swig/error_code;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='error_code_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("error_code_message", "(JLcom/frostwire/jlibtorrent/swig/error_code;)Ljava/lang/String;", "")]
		public static unsafe string Error_code_message (long p0, global::FrostWire.Libtorrent.Swig.Error_code p1)
		{
			const string __id = "error_code_message.(JLcom/frostwire/jlibtorrent/swig/error_code;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='error_code_op_bool' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("error_code_op_bool", "(JLcom/frostwire/jlibtorrent/swig/error_code;)Z", "")]
		public static unsafe bool Error_code_op_bool (long p0, global::FrostWire.Libtorrent.Swig.Error_code p1)
		{
			const string __id = "error_code_op_bool.(JLcom/frostwire/jlibtorrent/swig/error_code;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='error_code_value' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("error_code_value", "(JLcom/frostwire/jlibtorrent/swig/error_code;)I", "")]
		public static unsafe int Error_code_value (long p0, global::FrostWire.Libtorrent.Swig.Error_code p1)
		{
			const string __id = "error_code_value.(JLcom/frostwire/jlibtorrent/swig/error_code;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='executable_format_error_get' and count(parameter)=0]"
		[Register ("executable_format_error_get", "()I", "")]
		public static unsafe int Executable_format_error_get ()
		{
			const string __id = "executable_format_error_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='external_ip_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("external_ip_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long External_ip_alert_SWIGUpcast (long p0)
		{
			const string __id = "external_ip_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='external_ip_alert_alert_type_get' and count(parameter)=0]"
		[Register ("external_ip_alert_alert_type_get", "()I", "")]
		public static unsafe int External_ip_alert_alert_type_get ()
		{
			const string __id = "external_ip_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='external_ip_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.external_ip_alert']]"
		[Register ("external_ip_alert_category", "(JLcom/frostwire/jlibtorrent/swig/external_ip_alert;)J", "")]
		public static unsafe long External_ip_alert_category (long p0, global::FrostWire.Libtorrent.Swig.External_ip_alert p1)
		{
			const string __id = "external_ip_alert_category.(JLcom/frostwire/jlibtorrent/swig/external_ip_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='external_ip_alert_get_external_address' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.external_ip_alert']]"
		[Register ("external_ip_alert_get_external_address", "(JLcom/frostwire/jlibtorrent/swig/external_ip_alert;)J", "")]
		public static unsafe long External_ip_alert_get_external_address (long p0, global::FrostWire.Libtorrent.Swig.External_ip_alert p1)
		{
			const string __id = "external_ip_alert_get_external_address.(JLcom/frostwire/jlibtorrent/swig/external_ip_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='external_ip_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.external_ip_alert']]"
		[Register ("external_ip_alert_message", "(JLcom/frostwire/jlibtorrent/swig/external_ip_alert;)Ljava/lang/String;", "")]
		public static unsafe string External_ip_alert_message (long p0, global::FrostWire.Libtorrent.Swig.External_ip_alert p1)
		{
			const string __id = "external_ip_alert_message.(JLcom/frostwire/jlibtorrent/swig/external_ip_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='external_ip_alert_priority_get' and count(parameter)=0]"
		[Register ("external_ip_alert_priority_get", "()I", "")]
		public static unsafe int External_ip_alert_priority_get ()
		{
			const string __id = "external_ip_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='external_ip_alert_static_category_get' and count(parameter)=0]"
		[Register ("external_ip_alert_static_category_get", "()J", "")]
		public static unsafe long External_ip_alert_static_category_get ()
		{
			const string __id = "external_ip_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='external_ip_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.external_ip_alert']]"
		[Register ("external_ip_alert_type", "(JLcom/frostwire/jlibtorrent/swig/external_ip_alert;)I", "")]
		public static unsafe int External_ip_alert_type (long p0, global::FrostWire.Libtorrent.Swig.External_ip_alert p1)
		{
			const string __id = "external_ip_alert_type.(JLcom/frostwire/jlibtorrent/swig/external_ip_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='external_ip_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.external_ip_alert']]"
		[Register ("external_ip_alert_what", "(JLcom/frostwire/jlibtorrent/swig/external_ip_alert;)Ljava/lang/String;", "")]
		public static unsafe string External_ip_alert_what (long p0, global::FrostWire.Libtorrent.Swig.External_ip_alert p1)
		{
			const string __id = "external_ip_alert_what.(JLcom/frostwire/jlibtorrent/swig/external_ip_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='fastresume_rejected_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("fastresume_rejected_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Fastresume_rejected_alert_SWIGUpcast (long p0)
		{
			const string __id = "fastresume_rejected_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='fastresume_rejected_alert_alert_type_get' and count(parameter)=0]"
		[Register ("fastresume_rejected_alert_alert_type_get", "()I", "")]
		public static unsafe int Fastresume_rejected_alert_alert_type_get ()
		{
			const string __id = "fastresume_rejected_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='fastresume_rejected_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.fastresume_rejected_alert']]"
		[Register ("fastresume_rejected_alert_category", "(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;)J", "")]
		public static unsafe long Fastresume_rejected_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Fastresume_rejected_alert p1)
		{
			const string __id = "fastresume_rejected_alert_category.(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='fastresume_rejected_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.fastresume_rejected_alert']]"
		[Register ("fastresume_rejected_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;)J", "")]
		public static unsafe long Fastresume_rejected_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Fastresume_rejected_alert p1)
		{
			const string __id = "fastresume_rejected_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='fastresume_rejected_alert_error_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.fastresume_rejected_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("fastresume_rejected_alert_error_set", "(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;JLcom/frostwire/jlibtorrent/swig/error_code;)V", "")]
		public static unsafe void Fastresume_rejected_alert_error_set (long p0, global::FrostWire.Libtorrent.Swig.Fastresume_rejected_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "fastresume_rejected_alert_error_set.(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;JLcom/frostwire/jlibtorrent/swig/error_code;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='fastresume_rejected_alert_file_path' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.fastresume_rejected_alert']]"
		[Register ("fastresume_rejected_alert_file_path", "(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;)Ljava/lang/String;", "")]
		public static unsafe string Fastresume_rejected_alert_file_path (long p0, global::FrostWire.Libtorrent.Swig.Fastresume_rejected_alert p1)
		{
			const string __id = "fastresume_rejected_alert_file_path.(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='fastresume_rejected_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.fastresume_rejected_alert']]"
		[Register ("fastresume_rejected_alert_message", "(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;)Ljava/lang/String;", "")]
		public static unsafe string Fastresume_rejected_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Fastresume_rejected_alert p1)
		{
			const string __id = "fastresume_rejected_alert_message.(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='fastresume_rejected_alert_op_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.fastresume_rejected_alert']]"
		[Register ("fastresume_rejected_alert_op_get", "(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;)I", "")]
		public static unsafe int Fastresume_rejected_alert_op_get (long p0, global::FrostWire.Libtorrent.Swig.Fastresume_rejected_alert p1)
		{
			const string __id = "fastresume_rejected_alert_op_get.(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='fastresume_rejected_alert_op_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.fastresume_rejected_alert'] and parameter[3][@type='int']]"
		[Register ("fastresume_rejected_alert_op_set", "(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;I)V", "")]
		public static unsafe void Fastresume_rejected_alert_op_set (long p0, global::FrostWire.Libtorrent.Swig.Fastresume_rejected_alert p1, int p2)
		{
			const string __id = "fastresume_rejected_alert_op_set.(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='fastresume_rejected_alert_priority_get' and count(parameter)=0]"
		[Register ("fastresume_rejected_alert_priority_get", "()I", "")]
		public static unsafe int Fastresume_rejected_alert_priority_get ()
		{
			const string __id = "fastresume_rejected_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='fastresume_rejected_alert_static_category_get' and count(parameter)=0]"
		[Register ("fastresume_rejected_alert_static_category_get", "()J", "")]
		public static unsafe long Fastresume_rejected_alert_static_category_get ()
		{
			const string __id = "fastresume_rejected_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='fastresume_rejected_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.fastresume_rejected_alert']]"
		[Register ("fastresume_rejected_alert_type", "(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;)I", "")]
		public static unsafe int Fastresume_rejected_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Fastresume_rejected_alert p1)
		{
			const string __id = "fastresume_rejected_alert_type.(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='fastresume_rejected_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.fastresume_rejected_alert']]"
		[Register ("fastresume_rejected_alert_what", "(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;)Ljava/lang/String;", "")]
		public static unsafe string Fastresume_rejected_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Fastresume_rejected_alert p1)
		{
			const string __id = "fastresume_rejected_alert_what.(JLcom/frostwire/jlibtorrent/swig/fastresume_rejected_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_completed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("file_completed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long File_completed_alert_SWIGUpcast (long p0)
		{
			const string __id = "file_completed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_completed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("file_completed_alert_alert_type_get", "()I", "")]
		public static unsafe int File_completed_alert_alert_type_get ()
		{
			const string __id = "file_completed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_completed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_completed_alert']]"
		[Register ("file_completed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/file_completed_alert;)J", "")]
		public static unsafe long File_completed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.File_completed_alert p1)
		{
			const string __id = "file_completed_alert_category.(JLcom/frostwire/jlibtorrent/swig/file_completed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_completed_alert_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_completed_alert']]"
		[Register ("file_completed_alert_index_get", "(JLcom/frostwire/jlibtorrent/swig/file_completed_alert;)I", "")]
		public static unsafe int File_completed_alert_index_get (long p0, global::FrostWire.Libtorrent.Swig.File_completed_alert p1)
		{
			const string __id = "file_completed_alert_index_get.(JLcom/frostwire/jlibtorrent/swig/file_completed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_completed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_completed_alert']]"
		[Register ("file_completed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/file_completed_alert;)Ljava/lang/String;", "")]
		public static unsafe string File_completed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.File_completed_alert p1)
		{
			const string __id = "file_completed_alert_message.(JLcom/frostwire/jlibtorrent/swig/file_completed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_completed_alert_priority_get' and count(parameter)=0]"
		[Register ("file_completed_alert_priority_get", "()I", "")]
		public static unsafe int File_completed_alert_priority_get ()
		{
			const string __id = "file_completed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_completed_alert_static_category_get' and count(parameter)=0]"
		[Register ("file_completed_alert_static_category_get", "()J", "")]
		public static unsafe long File_completed_alert_static_category_get ()
		{
			const string __id = "file_completed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_completed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_completed_alert']]"
		[Register ("file_completed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/file_completed_alert;)I", "")]
		public static unsafe int File_completed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.File_completed_alert p1)
		{
			const string __id = "file_completed_alert_type.(JLcom/frostwire/jlibtorrent/swig/file_completed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_completed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_completed_alert']]"
		[Register ("file_completed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/file_completed_alert;)Ljava/lang/String;", "")]
		public static unsafe string File_completed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.File_completed_alert p1)
		{
			const string __id = "file_completed_alert_what.(JLcom/frostwire/jlibtorrent/swig/file_completed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_error_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("file_error_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long File_error_alert_SWIGUpcast (long p0)
		{
			const string __id = "file_error_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_error_alert_alert_type_get' and count(parameter)=0]"
		[Register ("file_error_alert_alert_type_get", "()I", "")]
		public static unsafe int File_error_alert_alert_type_get ()
		{
			const string __id = "file_error_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_error_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_error_alert']]"
		[Register ("file_error_alert_category", "(JLcom/frostwire/jlibtorrent/swig/file_error_alert;)J", "")]
		public static unsafe long File_error_alert_category (long p0, global::FrostWire.Libtorrent.Swig.File_error_alert p1)
		{
			const string __id = "file_error_alert_category.(JLcom/frostwire/jlibtorrent/swig/file_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_error_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_error_alert']]"
		[Register ("file_error_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/file_error_alert;)J", "")]
		public static unsafe long File_error_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.File_error_alert p1)
		{
			const string __id = "file_error_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/file_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_error_alert_filename' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_error_alert']]"
		[Register ("file_error_alert_filename", "(JLcom/frostwire/jlibtorrent/swig/file_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string File_error_alert_filename (long p0, global::FrostWire.Libtorrent.Swig.File_error_alert p1)
		{
			const string __id = "file_error_alert_filename.(JLcom/frostwire/jlibtorrent/swig/file_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_error_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_error_alert']]"
		[Register ("file_error_alert_message", "(JLcom/frostwire/jlibtorrent/swig/file_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string File_error_alert_message (long p0, global::FrostWire.Libtorrent.Swig.File_error_alert p1)
		{
			const string __id = "file_error_alert_message.(JLcom/frostwire/jlibtorrent/swig/file_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_error_alert_op_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_error_alert']]"
		[Register ("file_error_alert_op_get", "(JLcom/frostwire/jlibtorrent/swig/file_error_alert;)I", "")]
		public static unsafe int File_error_alert_op_get (long p0, global::FrostWire.Libtorrent.Swig.File_error_alert p1)
		{
			const string __id = "file_error_alert_op_get.(JLcom/frostwire/jlibtorrent/swig/file_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_error_alert_op_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_error_alert'] and parameter[3][@type='int']]"
		[Register ("file_error_alert_op_set", "(JLcom/frostwire/jlibtorrent/swig/file_error_alert;I)V", "")]
		public static unsafe void File_error_alert_op_set (long p0, global::FrostWire.Libtorrent.Swig.File_error_alert p1, int p2)
		{
			const string __id = "file_error_alert_op_set.(JLcom/frostwire/jlibtorrent/swig/file_error_alert;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_error_alert_priority_get' and count(parameter)=0]"
		[Register ("file_error_alert_priority_get", "()I", "")]
		public static unsafe int File_error_alert_priority_get ()
		{
			const string __id = "file_error_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_error_alert_static_category_get' and count(parameter)=0]"
		[Register ("file_error_alert_static_category_get", "()J", "")]
		public static unsafe long File_error_alert_static_category_get ()
		{
			const string __id = "file_error_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_error_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_error_alert']]"
		[Register ("file_error_alert_type", "(JLcom/frostwire/jlibtorrent/swig/file_error_alert;)I", "")]
		public static unsafe int File_error_alert_type (long p0, global::FrostWire.Libtorrent.Swig.File_error_alert p1)
		{
			const string __id = "file_error_alert_type.(JLcom/frostwire/jlibtorrent/swig/file_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_error_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_error_alert']]"
		[Register ("file_error_alert_what", "(JLcom/frostwire/jlibtorrent/swig/file_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string File_error_alert_what (long p0, global::FrostWire.Libtorrent.Swig.File_error_alert p1)
		{
			const string __id = "file_error_alert_what.(JLcom/frostwire/jlibtorrent/swig/file_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_exists_get' and count(parameter)=0]"
		[Register ("file_exists_get", "()I", "")]
		public static unsafe int File_exists_get ()
		{
			const string __id = "file_exists_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_flags_t_all' and count(parameter)=0]"
		[Register ("file_flags_t_all", "()J", "")]
		public static unsafe long File_flags_t_all ()
		{
			const string __id = "file_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.file_flags_t']]"
		[Register ("file_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/file_flags_t;JLcom/frostwire/jlibtorrent/swig/file_flags_t;)J", "")]
		public static unsafe long File_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.File_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.File_flags_t p3)
		{
			const string __id = "file_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/file_flags_t;JLcom/frostwire/jlibtorrent/swig/file_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.file_flags_t']]"
		[Register ("file_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/file_flags_t;JLcom/frostwire/jlibtorrent/swig/file_flags_t;)Z", "")]
		public static unsafe bool File_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.File_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.File_flags_t p3)
		{
			const string __id = "file_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/file_flags_t;JLcom/frostwire/jlibtorrent/swig/file_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_flags_t']]"
		[Register ("file_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/file_flags_t;)J", "")]
		public static unsafe long File_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.File_flags_t p1)
		{
			const string __id = "file_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/file_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.file_flags_t']]"
		[Register ("file_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/file_flags_t;JLcom/frostwire/jlibtorrent/swig/file_flags_t;)Z", "")]
		public static unsafe bool File_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.File_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.File_flags_t p3)
		{
			const string __id = "file_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/file_flags_t;JLcom/frostwire/jlibtorrent/swig/file_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_flags_t']]"
		[Register ("file_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/file_flags_t;)Z", "")]
		public static unsafe bool File_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.File_flags_t p1)
		{
			const string __id = "file_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/file_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.file_flags_t']]"
		[Register ("file_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/file_flags_t;JLcom/frostwire/jlibtorrent/swig/file_flags_t;)J", "")]
		public static unsafe long File_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.File_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.File_flags_t p3)
		{
			const string __id = "file_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/file_flags_t;JLcom/frostwire/jlibtorrent/swig/file_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_flags_t']]"
		[Register ("file_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/file_flags_t;)I", "")]
		public static unsafe int File_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.File_flags_t p1)
		{
			const string __id = "file_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/file_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.file_flags_t']]"
		[Register ("file_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/file_flags_t;JLcom/frostwire/jlibtorrent/swig/file_flags_t;)J", "")]
		public static unsafe long File_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.File_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.File_flags_t p3)
		{
			const string __id = "file_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/file_flags_t;JLcom/frostwire/jlibtorrent/swig/file_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_string_map_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_string_map']]"
		[Register ("file_index_string_map_clear", "(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;)V", "")]
		public static unsafe void File_index_string_map_clear (long p0, global::FrostWire.Libtorrent.Swig.File_index_string_map p1)
		{
			const string __id = "file_index_string_map_clear.(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_string_map_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_string_map']]"
		[Register ("file_index_string_map_empty", "(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;)Z", "")]
		public static unsafe bool File_index_string_map_empty (long p0, global::FrostWire.Libtorrent.Swig.File_index_string_map p1)
		{
			const string __id = "file_index_string_map_empty.(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_string_map_erase' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_string_map'] and parameter[3][@type='int']]"
		[Register ("file_index_string_map_erase", "(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;I)V", "")]
		public static unsafe void File_index_string_map_erase (long p0, global::FrostWire.Libtorrent.Swig.File_index_string_map p1, int p2)
		{
			const string __id = "file_index_string_map_erase.(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_string_map_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_string_map'] and parameter[3][@type='int']]"
		[Register ("file_index_string_map_get", "(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;I)Ljava/lang/String;", "")]
		public static unsafe string File_index_string_map_get (long p0, global::FrostWire.Libtorrent.Swig.File_index_string_map p1, int p2)
		{
			const string __id = "file_index_string_map_get.(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;I)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_string_map_has_key' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_string_map'] and parameter[3][@type='int']]"
		[Register ("file_index_string_map_has_key", "(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;I)Z", "")]
		public static unsafe bool File_index_string_map_has_key (long p0, global::FrostWire.Libtorrent.Swig.File_index_string_map p1, int p2)
		{
			const string __id = "file_index_string_map_has_key.(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_string_map_keys' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_string_map']]"
		[Register ("file_index_string_map_keys", "(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;)J", "")]
		public static unsafe long File_index_string_map_keys (long p0, global::FrostWire.Libtorrent.Swig.File_index_string_map p1)
		{
			const string __id = "file_index_string_map_keys.(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_string_map_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_string_map'] and parameter[3][@type='int'] and parameter[4][@type='java.lang.String']]"
		[Register ("file_index_string_map_set", "(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;ILjava/lang/String;)V", "")]
		public static unsafe void File_index_string_map_set (long p0, global::FrostWire.Libtorrent.Swig.File_index_string_map p1, int p2, string p3)
		{
			const string __id = "file_index_string_map_set.(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;ILjava/lang/String;)V";
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (native_p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_string_map_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_string_map']]"
		[Register ("file_index_string_map_size", "(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;)J", "")]
		public static unsafe long File_index_string_map_size (long p0, global::FrostWire.Libtorrent.Swig.File_index_string_map p1)
		{
			const string __id = "file_index_string_map_size.(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_vector']]"
		[Register ("file_index_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/file_index_vector;)J", "")]
		public static unsafe long File_index_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.File_index_vector p1)
		{
			const string __id = "file_index_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/file_index_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_vector']]"
		[Register ("file_index_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/file_index_vector;)V", "")]
		public static unsafe void File_index_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.File_index_vector p1)
		{
			const string __id = "file_index_vector_clear.(JLcom/frostwire/jlibtorrent/swig/file_index_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_vector']]"
		[Register ("file_index_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/file_index_vector;)Z", "")]
		public static unsafe bool File_index_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.File_index_vector p1)
		{
			const string __id = "file_index_vector_empty.(JLcom/frostwire/jlibtorrent/swig/file_index_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_vector'] and parameter[3][@type='int']]"
		[Register ("file_index_vector_get", "(JLcom/frostwire/jlibtorrent/swig/file_index_vector;I)I", "")]
		public static unsafe int File_index_vector_get (long p0, global::FrostWire.Libtorrent.Swig.File_index_vector p1, int p2)
		{
			const string __id = "file_index_vector_get.(JLcom/frostwire/jlibtorrent/swig/file_index_vector;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_vector_push_back' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_vector'] and parameter[3][@type='int']]"
		[Register ("file_index_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/file_index_vector;I)V", "")]
		public static unsafe void File_index_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.File_index_vector p1, int p2)
		{
			const string __id = "file_index_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/file_index_vector;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_vector'] and parameter[3][@type='long']]"
		[Register ("file_index_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/file_index_vector;J)V", "")]
		public static unsafe void File_index_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.File_index_vector p1, long p2)
		{
			const string __id = "file_index_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/file_index_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_vector_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_vector'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("file_index_vector_set", "(JLcom/frostwire/jlibtorrent/swig/file_index_vector;II)V", "")]
		public static unsafe void File_index_vector_set (long p0, global::FrostWire.Libtorrent.Swig.File_index_vector p1, int p2, int p3)
		{
			const string __id = "file_index_vector_set.(JLcom/frostwire/jlibtorrent/swig/file_index_vector;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_index_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_vector']]"
		[Register ("file_index_vector_size", "(JLcom/frostwire/jlibtorrent/swig/file_index_vector;)J", "")]
		public static unsafe long File_index_vector_size (long p0, global::FrostWire.Libtorrent.Swig.File_index_vector p1)
		{
			const string __id = "file_index_vector_size.(JLcom/frostwire/jlibtorrent/swig/file_index_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_rename_failed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("file_rename_failed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long File_rename_failed_alert_SWIGUpcast (long p0)
		{
			const string __id = "file_rename_failed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_rename_failed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("file_rename_failed_alert_alert_type_get", "()I", "")]
		public static unsafe int File_rename_failed_alert_alert_type_get ()
		{
			const string __id = "file_rename_failed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_rename_failed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_rename_failed_alert']]"
		[Register ("file_rename_failed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/file_rename_failed_alert;)J", "")]
		public static unsafe long File_rename_failed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.File_rename_failed_alert p1)
		{
			const string __id = "file_rename_failed_alert_category.(JLcom/frostwire/jlibtorrent/swig/file_rename_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_rename_failed_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_rename_failed_alert']]"
		[Register ("file_rename_failed_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/file_rename_failed_alert;)J", "")]
		public static unsafe long File_rename_failed_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.File_rename_failed_alert p1)
		{
			const string __id = "file_rename_failed_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/file_rename_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_rename_failed_alert_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_rename_failed_alert']]"
		[Register ("file_rename_failed_alert_index_get", "(JLcom/frostwire/jlibtorrent/swig/file_rename_failed_alert;)I", "")]
		public static unsafe int File_rename_failed_alert_index_get (long p0, global::FrostWire.Libtorrent.Swig.File_rename_failed_alert p1)
		{
			const string __id = "file_rename_failed_alert_index_get.(JLcom/frostwire/jlibtorrent/swig/file_rename_failed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_rename_failed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_rename_failed_alert']]"
		[Register ("file_rename_failed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/file_rename_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string File_rename_failed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.File_rename_failed_alert p1)
		{
			const string __id = "file_rename_failed_alert_message.(JLcom/frostwire/jlibtorrent/swig/file_rename_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_rename_failed_alert_priority_get' and count(parameter)=0]"
		[Register ("file_rename_failed_alert_priority_get", "()I", "")]
		public static unsafe int File_rename_failed_alert_priority_get ()
		{
			const string __id = "file_rename_failed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_rename_failed_alert_static_category_get' and count(parameter)=0]"
		[Register ("file_rename_failed_alert_static_category_get", "()J", "")]
		public static unsafe long File_rename_failed_alert_static_category_get ()
		{
			const string __id = "file_rename_failed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_rename_failed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_rename_failed_alert']]"
		[Register ("file_rename_failed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/file_rename_failed_alert;)I", "")]
		public static unsafe int File_rename_failed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.File_rename_failed_alert p1)
		{
			const string __id = "file_rename_failed_alert_type.(JLcom/frostwire/jlibtorrent/swig/file_rename_failed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_rename_failed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_rename_failed_alert']]"
		[Register ("file_rename_failed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/file_rename_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string File_rename_failed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.File_rename_failed_alert p1)
		{
			const string __id = "file_rename_failed_alert_what.(JLcom/frostwire/jlibtorrent/swig/file_rename_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_renamed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("file_renamed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long File_renamed_alert_SWIGUpcast (long p0)
		{
			const string __id = "file_renamed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_renamed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("file_renamed_alert_alert_type_get", "()I", "")]
		public static unsafe int File_renamed_alert_alert_type_get ()
		{
			const string __id = "file_renamed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_renamed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_renamed_alert']]"
		[Register ("file_renamed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/file_renamed_alert;)J", "")]
		public static unsafe long File_renamed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.File_renamed_alert p1)
		{
			const string __id = "file_renamed_alert_category.(JLcom/frostwire/jlibtorrent/swig/file_renamed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_renamed_alert_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_renamed_alert']]"
		[Register ("file_renamed_alert_index_get", "(JLcom/frostwire/jlibtorrent/swig/file_renamed_alert;)I", "")]
		public static unsafe int File_renamed_alert_index_get (long p0, global::FrostWire.Libtorrent.Swig.File_renamed_alert p1)
		{
			const string __id = "file_renamed_alert_index_get.(JLcom/frostwire/jlibtorrent/swig/file_renamed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_renamed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_renamed_alert']]"
		[Register ("file_renamed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/file_renamed_alert;)Ljava/lang/String;", "")]
		public static unsafe string File_renamed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.File_renamed_alert p1)
		{
			const string __id = "file_renamed_alert_message.(JLcom/frostwire/jlibtorrent/swig/file_renamed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_renamed_alert_new_name' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_renamed_alert']]"
		[Register ("file_renamed_alert_new_name", "(JLcom/frostwire/jlibtorrent/swig/file_renamed_alert;)Ljava/lang/String;", "")]
		public static unsafe string File_renamed_alert_new_name (long p0, global::FrostWire.Libtorrent.Swig.File_renamed_alert p1)
		{
			const string __id = "file_renamed_alert_new_name.(JLcom/frostwire/jlibtorrent/swig/file_renamed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_renamed_alert_priority_get' and count(parameter)=0]"
		[Register ("file_renamed_alert_priority_get", "()I", "")]
		public static unsafe int File_renamed_alert_priority_get ()
		{
			const string __id = "file_renamed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_renamed_alert_static_category_get' and count(parameter)=0]"
		[Register ("file_renamed_alert_static_category_get", "()J", "")]
		public static unsafe long File_renamed_alert_static_category_get ()
		{
			const string __id = "file_renamed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_renamed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_renamed_alert']]"
		[Register ("file_renamed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/file_renamed_alert;)I", "")]
		public static unsafe int File_renamed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.File_renamed_alert p1)
		{
			const string __id = "file_renamed_alert_type.(JLcom/frostwire/jlibtorrent/swig/file_renamed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_renamed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_renamed_alert']]"
		[Register ("file_renamed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/file_renamed_alert;)Ljava/lang/String;", "")]
		public static unsafe string File_renamed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.File_renamed_alert p1)
		{
			const string __id = "file_renamed_alert_what.(JLcom/frostwire/jlibtorrent/swig/file_renamed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_slice_file_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_slice']]"
		[Register ("file_slice_file_index_get", "(JLcom/frostwire/jlibtorrent/swig/file_slice;)I", "")]
		public static unsafe int File_slice_file_index_get (long p0, global::FrostWire.Libtorrent.Swig.File_slice p1)
		{
			const string __id = "file_slice_file_index_get.(JLcom/frostwire/jlibtorrent/swig/file_slice;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_slice_file_index_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_slice'] and parameter[3][@type='int']]"
		[Register ("file_slice_file_index_set", "(JLcom/frostwire/jlibtorrent/swig/file_slice;I)V", "")]
		public static unsafe void File_slice_file_index_set (long p0, global::FrostWire.Libtorrent.Swig.File_slice p1, int p2)
		{
			const string __id = "file_slice_file_index_set.(JLcom/frostwire/jlibtorrent/swig/file_slice;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_slice_offset_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_slice']]"
		[Register ("file_slice_offset_get", "(JLcom/frostwire/jlibtorrent/swig/file_slice;)J", "")]
		public static unsafe long File_slice_offset_get (long p0, global::FrostWire.Libtorrent.Swig.File_slice p1)
		{
			const string __id = "file_slice_offset_get.(JLcom/frostwire/jlibtorrent/swig/file_slice;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_slice_offset_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_slice'] and parameter[3][@type='long']]"
		[Register ("file_slice_offset_set", "(JLcom/frostwire/jlibtorrent/swig/file_slice;J)V", "")]
		public static unsafe void File_slice_offset_set (long p0, global::FrostWire.Libtorrent.Swig.File_slice p1, long p2)
		{
			const string __id = "file_slice_offset_set.(JLcom/frostwire/jlibtorrent/swig/file_slice;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_slice_size_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_slice']]"
		[Register ("file_slice_size_get", "(JLcom/frostwire/jlibtorrent/swig/file_slice;)J", "")]
		public static unsafe long File_slice_size_get (long p0, global::FrostWire.Libtorrent.Swig.File_slice p1)
		{
			const string __id = "file_slice_size_get.(JLcom/frostwire/jlibtorrent/swig/file_slice;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_slice_size_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_slice'] and parameter[3][@type='long']]"
		[Register ("file_slice_size_set", "(JLcom/frostwire/jlibtorrent/swig/file_slice;J)V", "")]
		public static unsafe void File_slice_size_set (long p0, global::FrostWire.Libtorrent.Swig.File_slice p1, long p2)
		{
			const string __id = "file_slice_size_set.(JLcom/frostwire/jlibtorrent/swig/file_slice;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_slice_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_slice_vector']]"
		[Register ("file_slice_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;)J", "")]
		public static unsafe long File_slice_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.File_slice_vector p1)
		{
			const string __id = "file_slice_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_slice_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_slice_vector']]"
		[Register ("file_slice_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;)V", "")]
		public static unsafe void File_slice_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.File_slice_vector p1)
		{
			const string __id = "file_slice_vector_clear.(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_slice_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_slice_vector']]"
		[Register ("file_slice_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;)Z", "")]
		public static unsafe bool File_slice_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.File_slice_vector p1)
		{
			const string __id = "file_slice_vector_empty.(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_slice_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_slice_vector'] and parameter[3][@type='int']]"
		[Register ("file_slice_vector_get", "(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;I)J", "")]
		public static unsafe long File_slice_vector_get (long p0, global::FrostWire.Libtorrent.Swig.File_slice_vector p1, int p2)
		{
			const string __id = "file_slice_vector_get.(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_slice_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_slice_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.file_slice']]"
		[Register ("file_slice_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;JLcom/frostwire/jlibtorrent/swig/file_slice;)V", "")]
		public static unsafe void File_slice_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.File_slice_vector p1, long p2, global::FrostWire.Libtorrent.Swig.File_slice p3)
		{
			const string __id = "file_slice_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;JLcom/frostwire/jlibtorrent/swig/file_slice;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_slice_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_slice_vector'] and parameter[3][@type='long']]"
		[Register ("file_slice_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;J)V", "")]
		public static unsafe void File_slice_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.File_slice_vector p1, long p2)
		{
			const string __id = "file_slice_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_slice_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_slice_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.file_slice']]"
		[Register ("file_slice_vector_set", "(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;IJLcom/frostwire/jlibtorrent/swig/file_slice;)V", "")]
		public static unsafe void File_slice_vector_set (long p0, global::FrostWire.Libtorrent.Swig.File_slice_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.File_slice p4)
		{
			const string __id = "file_slice_vector_set.(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;IJLcom/frostwire/jlibtorrent/swig/file_slice;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_slice_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_slice_vector']]"
		[Register ("file_slice_vector_size", "(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;)J", "")]
		public static unsafe long File_slice_vector_size (long p0, global::FrostWire.Libtorrent.Swig.File_slice_vector p1)
		{
			const string __id = "file_slice_vector_size.(JLcom/frostwire/jlibtorrent/swig/file_slice_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_add_file__SWIG_0' and count(parameter)=9 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.file_flags_t'] and parameter[7][@type='long'] and parameter[8][@type='long'] and parameter[9][@type='com.frostwire.jlibtorrent.swig.string_view']]"
		[Register ("file_storage_add_file__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;JJLcom/frostwire/jlibtorrent/swig/string_view;)V", "")]
		public static unsafe void File_storage_add_file__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, string p2, long p3, long p4, global::FrostWire.Libtorrent.Swig.File_flags_t p5, long p6, long p7, global::FrostWire.Libtorrent.Swig.String_view p8)
		{
			const string __id = "file_storage_add_file__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;JJLcom/frostwire/jlibtorrent/swig/string_view;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [9];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				__args [6] = new JniArgumentValue (p6);
				__args [7] = new JniArgumentValue (p7);
				__args [8] = new JniArgumentValue ((p8 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p8).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_add_file__SWIG_1' and count(parameter)=7 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.file_flags_t'] and parameter[7][@type='long']]"
		[Register ("file_storage_add_file__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;J)V", "")]
		public static unsafe void File_storage_add_file__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, string p2, long p3, long p4, global::FrostWire.Libtorrent.Swig.File_flags_t p5, long p6)
		{
			const string __id = "file_storage_add_file__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;J)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				__args [6] = new JniArgumentValue (p6);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_add_file__SWIG_2' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.file_flags_t']]"
		[Register ("file_storage_add_file__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;)V", "")]
		public static unsafe void File_storage_add_file__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, string p2, long p3, long p4, global::FrostWire.Libtorrent.Swig.File_flags_t p5)
		{
			const string __id = "file_storage_add_file__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_add_file__SWIG_3' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long']]"
		[Register ("file_storage_add_file__SWIG_3", "(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;J)V", "")]
		public static unsafe void File_storage_add_file__SWIG_3 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, string p2, long p3)
		{
			const string __id = "file_storage_add_file__SWIG_3.(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;J)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_add_file__SWIG_4' and count(parameter)=8 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.file_flags_t'] and parameter[7][@type='long'] and parameter[8][@type='java.lang.String']]"
		[Register ("file_storage_add_file__SWIG_4", "(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;JLjava/lang/String;)V", "")]
		public static unsafe void File_storage_add_file__SWIG_4 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, string p2, long p3, long p4, global::FrostWire.Libtorrent.Swig.File_flags_t p5, long p6, string p7)
		{
			const string __id = "file_storage_add_file__SWIG_4.(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;JLjava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			IntPtr native_p7 = JNIEnv.NewString (p7);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [8];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				__args [6] = new JniArgumentValue (p6);
				__args [7] = new JniArgumentValue (native_p7);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p7);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_add_file_borrow__SWIG_0' and count(parameter)=12 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_view'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='long'] and parameter[7][@type='long'] and parameter[8][@type='com.frostwire.jlibtorrent.swig.file_flags_t'] and parameter[9][@type='java.lang.String'] and parameter[10][@type='long'] and parameter[11][@type='long'] and parameter[12][@type='com.frostwire.jlibtorrent.swig.string_view']]"
		[Register ("file_storage_add_file_borrow__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/file_storage;JLcom/frostwire/jlibtorrent/swig/string_view;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/string_view;)V", "")]
		public static unsafe void File_storage_add_file_borrow__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, long p2, global::FrostWire.Libtorrent.Swig.String_view p3, string p4, long p5, long p6, global::FrostWire.Libtorrent.Swig.File_flags_t p7, string p8, long p9, long p10, global::FrostWire.Libtorrent.Swig.String_view p11)
		{
			const string __id = "file_storage_add_file_borrow__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/file_storage;JLcom/frostwire/jlibtorrent/swig/string_view;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/string_view;)V";
			IntPtr native_p4 = JNIEnv.NewString (p4);
			IntPtr native_p8 = JNIEnv.NewString (p8);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [12];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (native_p4);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue (p6);
				__args [7] = new JniArgumentValue ((p7 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p7).Handle);
				__args [8] = new JniArgumentValue (native_p8);
				__args [9] = new JniArgumentValue (p9);
				__args [10] = new JniArgumentValue (p10);
				__args [11] = new JniArgumentValue ((p11 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p11).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p4);
				JNIEnv.DeleteLocalRef (native_p8);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_add_file_borrow__SWIG_1' and count(parameter)=10 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_view'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='long'] and parameter[7][@type='long'] and parameter[8][@type='com.frostwire.jlibtorrent.swig.file_flags_t'] and parameter[9][@type='java.lang.String'] and parameter[10][@type='long']]"
		[Register ("file_storage_add_file_borrow__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/file_storage;JLcom/frostwire/jlibtorrent/swig/string_view;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;Ljava/lang/String;J)V", "")]
		public static unsafe void File_storage_add_file_borrow__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, long p2, global::FrostWire.Libtorrent.Swig.String_view p3, string p4, long p5, long p6, global::FrostWire.Libtorrent.Swig.File_flags_t p7, string p8, long p9)
		{
			const string __id = "file_storage_add_file_borrow__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/file_storage;JLcom/frostwire/jlibtorrent/swig/string_view;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;Ljava/lang/String;J)V";
			IntPtr native_p4 = JNIEnv.NewString (p4);
			IntPtr native_p8 = JNIEnv.NewString (p8);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [10];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (native_p4);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue (p6);
				__args [7] = new JniArgumentValue ((p7 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p7).Handle);
				__args [8] = new JniArgumentValue (native_p8);
				__args [9] = new JniArgumentValue (p9);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p4);
				JNIEnv.DeleteLocalRef (native_p8);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_add_file_borrow__SWIG_2' and count(parameter)=9 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_view'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='long'] and parameter[7][@type='long'] and parameter[8][@type='com.frostwire.jlibtorrent.swig.file_flags_t'] and parameter[9][@type='java.lang.String']]"
		[Register ("file_storage_add_file_borrow__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/file_storage;JLcom/frostwire/jlibtorrent/swig/string_view;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;Ljava/lang/String;)V", "")]
		public static unsafe void File_storage_add_file_borrow__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, long p2, global::FrostWire.Libtorrent.Swig.String_view p3, string p4, long p5, long p6, global::FrostWire.Libtorrent.Swig.File_flags_t p7, string p8)
		{
			const string __id = "file_storage_add_file_borrow__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/file_storage;JLcom/frostwire/jlibtorrent/swig/string_view;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;Ljava/lang/String;)V";
			IntPtr native_p4 = JNIEnv.NewString (p4);
			IntPtr native_p8 = JNIEnv.NewString (p8);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [9];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (native_p4);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue (p6);
				__args [7] = new JniArgumentValue ((p7 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p7).Handle);
				__args [8] = new JniArgumentValue (native_p8);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p4);
				JNIEnv.DeleteLocalRef (native_p8);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_add_file_borrow__SWIG_3' and count(parameter)=8 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_view'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='long'] and parameter[7][@type='long'] and parameter[8][@type='com.frostwire.jlibtorrent.swig.file_flags_t']]"
		[Register ("file_storage_add_file_borrow__SWIG_3", "(JLcom/frostwire/jlibtorrent/swig/file_storage;JLcom/frostwire/jlibtorrent/swig/string_view;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;)V", "")]
		public static unsafe void File_storage_add_file_borrow__SWIG_3 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, long p2, global::FrostWire.Libtorrent.Swig.String_view p3, string p4, long p5, long p6, global::FrostWire.Libtorrent.Swig.File_flags_t p7)
		{
			const string __id = "file_storage_add_file_borrow__SWIG_3.(JLcom/frostwire/jlibtorrent/swig/file_storage;JLcom/frostwire/jlibtorrent/swig/string_view;Ljava/lang/String;JJLcom/frostwire/jlibtorrent/swig/file_flags_t;)V";
			IntPtr native_p4 = JNIEnv.NewString (p4);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [8];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (native_p4);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue (p6);
				__args [7] = new JniArgumentValue ((p7 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p7).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p4);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_add_file_borrow__SWIG_4' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_view'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='long']]"
		[Register ("file_storage_add_file_borrow__SWIG_4", "(JLcom/frostwire/jlibtorrent/swig/file_storage;JLcom/frostwire/jlibtorrent/swig/string_view;Ljava/lang/String;J)V", "")]
		public static unsafe void File_storage_add_file_borrow__SWIG_4 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, long p2, global::FrostWire.Libtorrent.Swig.String_view p3, string p4, long p5)
		{
			const string __id = "file_storage_add_file_borrow__SWIG_4.(JLcom/frostwire/jlibtorrent/swig/file_storage;JLcom/frostwire/jlibtorrent/swig/string_view;Ljava/lang/String;J)V";
			IntPtr native_p4 = JNIEnv.NewString (p4);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (native_p4);
				__args [5] = new JniArgumentValue (p5);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p4);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_end_file' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("file_storage_end_file", "(JLcom/frostwire/jlibtorrent/swig/file_storage;)I", "")]
		public static unsafe int File_storage_end_file (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1)
		{
			const string __id = "file_storage_end_file.(JLcom/frostwire/jlibtorrent/swig/file_storage;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_end_piece' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("file_storage_end_piece", "(JLcom/frostwire/jlibtorrent/swig/file_storage;)I", "")]
		public static unsafe int File_storage_end_piece (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1)
		{
			const string __id = "file_storage_end_piece.(JLcom/frostwire/jlibtorrent/swig/file_storage;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_file_absolute_path' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_file_absolute_path", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)Z", "")]
		public static unsafe bool File_storage_file_absolute_path (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_file_absolute_path.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_file_flags' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_file_flags", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)J", "")]
		public static unsafe long File_storage_file_flags (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_file_flags.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_file_index_at_offset' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='long']]"
		[Register ("file_storage_file_index_at_offset", "(JLcom/frostwire/jlibtorrent/swig/file_storage;J)I", "")]
		public static unsafe int File_storage_file_index_at_offset (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, long p2)
		{
			const string __id = "file_storage_file_index_at_offset.(JLcom/frostwire/jlibtorrent/swig/file_storage;J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_file_name' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_file_name", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)J", "")]
		public static unsafe long File_storage_file_name (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_file_name.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_file_offset' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_file_offset", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)J", "")]
		public static unsafe long File_storage_file_offset (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_file_offset.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_file_path__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int'] and parameter[4][@type='java.lang.String']]"
		[Register ("file_storage_file_path__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/file_storage;ILjava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string File_storage_file_path__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2, string p3)
		{
			const string __id = "file_storage_file_path__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/file_storage;ILjava/lang/String;)Ljava/lang/String;";
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (native_p3);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_file_path__SWIG_1' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_file_path__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)Ljava/lang/String;", "")]
		public static unsafe string File_storage_file_path__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_file_path__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_file_size' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_file_size", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)J", "")]
		public static unsafe long File_storage_file_size (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_file_size.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_flag_executable_get' and count(parameter)=0]"
		[Register ("file_storage_flag_executable_get", "()J", "")]
		public static unsafe long File_storage_flag_executable_get ()
		{
			const string __id = "file_storage_flag_executable_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_flag_hidden_get' and count(parameter)=0]"
		[Register ("file_storage_flag_hidden_get", "()J", "")]
		public static unsafe long File_storage_flag_hidden_get ()
		{
			const string __id = "file_storage_flag_hidden_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_flag_pad_file_get' and count(parameter)=0]"
		[Register ("file_storage_flag_pad_file_get", "()J", "")]
		public static unsafe long File_storage_flag_pad_file_get ()
		{
			const string __id = "file_storage_flag_pad_file_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_flag_symlink_get' and count(parameter)=0]"
		[Register ("file_storage_flag_symlink_get", "()J", "")]
		public static unsafe long File_storage_flag_symlink_get ()
		{
			const string __id = "file_storage_flag_symlink_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_hash' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_hash", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)J", "")]
		public static unsafe long File_storage_hash (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_hash.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_is_valid' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("file_storage_is_valid", "(JLcom/frostwire/jlibtorrent/swig/file_storage;)Z", "")]
		public static unsafe bool File_storage_is_valid (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1)
		{
			const string __id = "file_storage_is_valid.(JLcom/frostwire/jlibtorrent/swig/file_storage;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_last_piece' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("file_storage_last_piece", "(JLcom/frostwire/jlibtorrent/swig/file_storage;)I", "")]
		public static unsafe int File_storage_last_piece (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1)
		{
			const string __id = "file_storage_last_piece.(JLcom/frostwire/jlibtorrent/swig/file_storage;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_map_block' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='int']]"
		[Register ("file_storage_map_block", "(JLcom/frostwire/jlibtorrent/swig/file_storage;IJI)J", "")]
		public static unsafe long File_storage_map_block (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2, long p3, int p4)
		{
			const string __id = "file_storage_map_block.(JLcom/frostwire/jlibtorrent/swig/file_storage;IJI)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_map_file' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='int']]"
		[Register ("file_storage_map_file", "(JLcom/frostwire/jlibtorrent/swig/file_storage;IJI)J", "")]
		public static unsafe long File_storage_map_file (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2, long p3, int p4)
		{
			const string __id = "file_storage_map_file.(JLcom/frostwire/jlibtorrent/swig/file_storage;IJI)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_mtime' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_mtime", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)J", "")]
		public static unsafe long File_storage_mtime (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_mtime.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_name' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("file_storage_name", "(JLcom/frostwire/jlibtorrent/swig/file_storage;)Ljava/lang/String;", "")]
		public static unsafe string File_storage_name (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1)
		{
			const string __id = "file_storage_name.(JLcom/frostwire/jlibtorrent/swig/file_storage;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_num_files' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("file_storage_num_files", "(JLcom/frostwire/jlibtorrent/swig/file_storage;)I", "")]
		public static unsafe int File_storage_num_files (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1)
		{
			const string __id = "file_storage_num_files.(JLcom/frostwire/jlibtorrent/swig/file_storage;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_num_pieces' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("file_storage_num_pieces", "(JLcom/frostwire/jlibtorrent/swig/file_storage;)I", "")]
		public static unsafe int File_storage_num_pieces (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1)
		{
			const string __id = "file_storage_num_pieces.(JLcom/frostwire/jlibtorrent/swig/file_storage;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_optimize__SWIG_0' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='boolean']]"
		[Register ("file_storage_optimize__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/file_storage;IIZ)V", "")]
		public static unsafe void File_storage_optimize__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2, int p3, bool p4)
		{
			const string __id = "file_storage_optimize__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/file_storage;IIZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_optimize__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("file_storage_optimize__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/file_storage;II)V", "")]
		public static unsafe void File_storage_optimize__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2, int p3)
		{
			const string __id = "file_storage_optimize__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/file_storage;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_optimize__SWIG_2' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_optimize__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)V", "")]
		public static unsafe void File_storage_optimize__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_optimize__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_optimize__SWIG_3' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("file_storage_optimize__SWIG_3", "(JLcom/frostwire/jlibtorrent/swig/file_storage;)V", "")]
		public static unsafe void File_storage_optimize__SWIG_3 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1)
		{
			const string __id = "file_storage_optimize__SWIG_3.(JLcom/frostwire/jlibtorrent/swig/file_storage;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_pad_file_at' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_pad_file_at", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)Z", "")]
		public static unsafe bool File_storage_pad_file_at (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_pad_file_at.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_paths' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("file_storage_paths", "(JLcom/frostwire/jlibtorrent/swig/file_storage;)J", "")]
		public static unsafe long File_storage_paths (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1)
		{
			const string __id = "file_storage_paths.(JLcom/frostwire/jlibtorrent/swig/file_storage;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_piece_length' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("file_storage_piece_length", "(JLcom/frostwire/jlibtorrent/swig/file_storage;)I", "")]
		public static unsafe int File_storage_piece_length (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1)
		{
			const string __id = "file_storage_piece_length.(JLcom/frostwire/jlibtorrent/swig/file_storage;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_piece_size' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_piece_size", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)I", "")]
		public static unsafe int File_storage_piece_size (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_piece_size.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_rename_file' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int'] and parameter[4][@type='java.lang.String']]"
		[Register ("file_storage_rename_file", "(JLcom/frostwire/jlibtorrent/swig/file_storage;ILjava/lang/String;)V", "")]
		public static unsafe void File_storage_rename_file (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2, string p3)
		{
			const string __id = "file_storage_rename_file.(JLcom/frostwire/jlibtorrent/swig/file_storage;ILjava/lang/String;)V";
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (native_p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_reserve", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)V", "")]
		public static unsafe void File_storage_reserve (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_reserve.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_set_name' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='java.lang.String']]"
		[Register ("file_storage_set_name", "(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;)V", "")]
		public static unsafe void File_storage_set_name (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, string p2)
		{
			const string __id = "file_storage_set_name.(JLcom/frostwire/jlibtorrent/swig/file_storage;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_set_num_pieces' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_set_num_pieces", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)V", "")]
		public static unsafe void File_storage_set_num_pieces (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_set_num_pieces.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_set_piece_length' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_set_piece_length", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)V", "")]
		public static unsafe void File_storage_set_piece_length (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_set_piece_length.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_swap' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("file_storage_swap", "(JLcom/frostwire/jlibtorrent/swig/file_storage;JLcom/frostwire/jlibtorrent/swig/file_storage;)V", "")]
		public static unsafe void File_storage_swap (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, long p2, global::FrostWire.Libtorrent.Swig.File_storage p3)
		{
			const string __id = "file_storage_swap.(JLcom/frostwire/jlibtorrent/swig/file_storage;JLcom/frostwire/jlibtorrent/swig/file_storage;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_symlink' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("file_storage_symlink", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)Ljava/lang/String;", "")]
		public static unsafe string File_storage_symlink (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "file_storage_symlink.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_storage_total_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("file_storage_total_size", "(JLcom/frostwire/jlibtorrent/swig/file_storage;)J", "")]
		public static unsafe long File_storage_total_size (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1)
		{
			const string __id = "file_storage_total_size.(JLcom/frostwire/jlibtorrent/swig/file_storage;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='file_too_large_get' and count(parameter)=0]"
		[Register ("file_too_large_get", "()I", "")]
		public static unsafe int File_too_large_get ()
		{
			const string __id = "file_too_large_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='filename_too_long_get' and count(parameter)=0]"
		[Register ("filename_too_long_get", "()I", "")]
		public static unsafe int Filename_too_long_get ()
		{
			const string __id = "filename_too_long_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='find_metric_idx_s' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("find_metric_idx_s", "(Ljava/lang/String;)I", "")]
		public static unsafe int Find_metric_idx_s (string p0)
		{
			const string __id = "find_metric_idx_s.(Ljava/lang/String;)I";
			IntPtr native_p0 = JNIEnv.NewString (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='forbidden_get' and count(parameter)=0]"
		[Register ("forbidden_get", "()I", "")]
		public static unsafe int Forbidden_get ()
		{
			const string __id = "forbidden_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='function_not_supported_get' and count(parameter)=0]"
		[Register ("function_not_supported_get", "()I", "")]
		public static unsafe int Function_not_supported_get ()
		{
			const string __id = "function_not_supported_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='generate_fingerprint' and count(parameter)=5 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int']]"
		[Register ("generate_fingerprint", "(Ljava/lang/String;IIII)Ljava/lang/String;", "")]
		public static unsafe string Generate_fingerprint (string p0, int p1, int p2, int p3, int p4)
		{
			const string __id = "generate_fingerprint.(Ljava/lang/String;IIII)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='get_default_gateway' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[5][@type='boolean']]"
		[Register ("get_default_gateway", "(JLcom/frostwire/jlibtorrent/swig/session;JLcom/frostwire/jlibtorrent/swig/byte_vector;Z)J", "")]
		public static unsafe long Get_default_gateway (long p0, global::FrostWire.Libtorrent.Swig.Session p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3, bool p4)
		{
			const string __id = "get_default_gateway.(JLcom/frostwire/jlibtorrent/swig/session;JLcom/frostwire/jlibtorrent/swig/byte_vector;Z)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='hash_failed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("hash_failed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Hash_failed_alert_SWIGUpcast (long p0)
		{
			const string __id = "hash_failed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='hash_failed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("hash_failed_alert_alert_type_get", "()I", "")]
		public static unsafe int Hash_failed_alert_alert_type_get ()
		{
			const string __id = "hash_failed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='hash_failed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.hash_failed_alert']]"
		[Register ("hash_failed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/hash_failed_alert;)J", "")]
		public static unsafe long Hash_failed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Hash_failed_alert p1)
		{
			const string __id = "hash_failed_alert_category.(JLcom/frostwire/jlibtorrent/swig/hash_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='hash_failed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.hash_failed_alert']]"
		[Register ("hash_failed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/hash_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Hash_failed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Hash_failed_alert p1)
		{
			const string __id = "hash_failed_alert_message.(JLcom/frostwire/jlibtorrent/swig/hash_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='hash_failed_alert_piece_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.hash_failed_alert']]"
		[Register ("hash_failed_alert_piece_index_get", "(JLcom/frostwire/jlibtorrent/swig/hash_failed_alert;)I", "")]
		public static unsafe int Hash_failed_alert_piece_index_get (long p0, global::FrostWire.Libtorrent.Swig.Hash_failed_alert p1)
		{
			const string __id = "hash_failed_alert_piece_index_get.(JLcom/frostwire/jlibtorrent/swig/hash_failed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='hash_failed_alert_priority_get' and count(parameter)=0]"
		[Register ("hash_failed_alert_priority_get", "()I", "")]
		public static unsafe int Hash_failed_alert_priority_get ()
		{
			const string __id = "hash_failed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='hash_failed_alert_static_category_get' and count(parameter)=0]"
		[Register ("hash_failed_alert_static_category_get", "()J", "")]
		public static unsafe long Hash_failed_alert_static_category_get ()
		{
			const string __id = "hash_failed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='hash_failed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.hash_failed_alert']]"
		[Register ("hash_failed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/hash_failed_alert;)I", "")]
		public static unsafe int Hash_failed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Hash_failed_alert p1)
		{
			const string __id = "hash_failed_alert_type.(JLcom/frostwire/jlibtorrent/swig/hash_failed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='hash_failed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.hash_failed_alert']]"
		[Register ("hash_failed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/hash_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Hash_failed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Hash_failed_alert p1)
		{
			const string __id = "hash_failed_alert_what.(JLcom/frostwire/jlibtorrent/swig/hash_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='high_performance_seed' and count(parameter)=0]"
		[Register ("high_performance_seed", "()J", "")]
		public static unsafe long High_performance_seed ()
		{
			const string __id = "high_performance_seed.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='host_unreachable_get' and count(parameter)=0]"
		[Register ("host_unreachable_get", "()I", "")]
		public static unsafe int Host_unreachable_get ()
		{
			const string __id = "host_unreachable_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='http_parse_error_get' and count(parameter)=0]"
		[Register ("http_parse_error_get", "()I", "")]
		public static unsafe int Http_parse_error_get ()
		{
			const string __id = "http_parse_error_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='i2p_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("i2p_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long I2p_alert_SWIGUpcast (long p0)
		{
			const string __id = "i2p_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='i2p_alert_alert_type_get' and count(parameter)=0]"
		[Register ("i2p_alert_alert_type_get", "()I", "")]
		public static unsafe int I2p_alert_alert_type_get ()
		{
			const string __id = "i2p_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='i2p_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.i2p_alert']]"
		[Register ("i2p_alert_category", "(JLcom/frostwire/jlibtorrent/swig/i2p_alert;)J", "")]
		public static unsafe long I2p_alert_category (long p0, global::FrostWire.Libtorrent.Swig.I2p_alert p1)
		{
			const string __id = "i2p_alert_category.(JLcom/frostwire/jlibtorrent/swig/i2p_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='i2p_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.i2p_alert']]"
		[Register ("i2p_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/i2p_alert;)J", "")]
		public static unsafe long I2p_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.I2p_alert p1)
		{
			const string __id = "i2p_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/i2p_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='i2p_alert_error_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.i2p_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("i2p_alert_error_set", "(JLcom/frostwire/jlibtorrent/swig/i2p_alert;JLcom/frostwire/jlibtorrent/swig/error_code;)V", "")]
		public static unsafe void I2p_alert_error_set (long p0, global::FrostWire.Libtorrent.Swig.I2p_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "i2p_alert_error_set.(JLcom/frostwire/jlibtorrent/swig/i2p_alert;JLcom/frostwire/jlibtorrent/swig/error_code;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='i2p_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.i2p_alert']]"
		[Register ("i2p_alert_message", "(JLcom/frostwire/jlibtorrent/swig/i2p_alert;)Ljava/lang/String;", "")]
		public static unsafe string I2p_alert_message (long p0, global::FrostWire.Libtorrent.Swig.I2p_alert p1)
		{
			const string __id = "i2p_alert_message.(JLcom/frostwire/jlibtorrent/swig/i2p_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='i2p_alert_priority_get' and count(parameter)=0]"
		[Register ("i2p_alert_priority_get", "()I", "")]
		public static unsafe int I2p_alert_priority_get ()
		{
			const string __id = "i2p_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='i2p_alert_static_category_get' and count(parameter)=0]"
		[Register ("i2p_alert_static_category_get", "()J", "")]
		public static unsafe long I2p_alert_static_category_get ()
		{
			const string __id = "i2p_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='i2p_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.i2p_alert']]"
		[Register ("i2p_alert_type", "(JLcom/frostwire/jlibtorrent/swig/i2p_alert;)I", "")]
		public static unsafe int I2p_alert_type (long p0, global::FrostWire.Libtorrent.Swig.I2p_alert p1)
		{
			const string __id = "i2p_alert_type.(JLcom/frostwire/jlibtorrent/swig/i2p_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='i2p_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.i2p_alert']]"
		[Register ("i2p_alert_what", "(JLcom/frostwire/jlibtorrent/swig/i2p_alert;)Ljava/lang/String;", "")]
		public static unsafe string I2p_alert_what (long p0, global::FrostWire.Libtorrent.Swig.I2p_alert p1)
		{
			const string __id = "i2p_alert_what.(JLcom/frostwire/jlibtorrent/swig/i2p_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='identifier_removed_get' and count(parameter)=0]"
		[Register ("identifier_removed_get", "()I", "")]
		public static unsafe int Identifier_removed_get ()
		{
			const string __id = "identifier_removed_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='illegal_byte_sequence_get' and count(parameter)=0]"
		[Register ("illegal_byte_sequence_get", "()I", "")]
		public static unsafe int Illegal_byte_sequence_get ()
		{
			const string __id = "illegal_byte_sequence_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='inappropriate_io_control_operation_get' and count(parameter)=0]"
		[Register ("inappropriate_io_control_operation_get", "()I", "")]
		public static unsafe int Inappropriate_io_control_operation_get ()
		{
			const string __id = "inappropriate_io_control_operation_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_connection_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("incoming_connection_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Incoming_connection_alert_SWIGUpcast (long p0)
		{
			const string __id = "incoming_connection_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_connection_alert_alert_type_get' and count(parameter)=0]"
		[Register ("incoming_connection_alert_alert_type_get", "()I", "")]
		public static unsafe int Incoming_connection_alert_alert_type_get ()
		{
			const string __id = "incoming_connection_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_connection_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.incoming_connection_alert']]"
		[Register ("incoming_connection_alert_category", "(JLcom/frostwire/jlibtorrent/swig/incoming_connection_alert;)J", "")]
		public static unsafe long Incoming_connection_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Incoming_connection_alert p1)
		{
			const string __id = "incoming_connection_alert_category.(JLcom/frostwire/jlibtorrent/swig/incoming_connection_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_connection_alert_get_endpoint' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.incoming_connection_alert']]"
		[Register ("incoming_connection_alert_get_endpoint", "(JLcom/frostwire/jlibtorrent/swig/incoming_connection_alert;)J", "")]
		public static unsafe long Incoming_connection_alert_get_endpoint (long p0, global::FrostWire.Libtorrent.Swig.Incoming_connection_alert p1)
		{
			const string __id = "incoming_connection_alert_get_endpoint.(JLcom/frostwire/jlibtorrent/swig/incoming_connection_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_connection_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.incoming_connection_alert']]"
		[Register ("incoming_connection_alert_message", "(JLcom/frostwire/jlibtorrent/swig/incoming_connection_alert;)Ljava/lang/String;", "")]
		public static unsafe string Incoming_connection_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Incoming_connection_alert p1)
		{
			const string __id = "incoming_connection_alert_message.(JLcom/frostwire/jlibtorrent/swig/incoming_connection_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_connection_alert_priority_get' and count(parameter)=0]"
		[Register ("incoming_connection_alert_priority_get", "()I", "")]
		public static unsafe int Incoming_connection_alert_priority_get ()
		{
			const string __id = "incoming_connection_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_connection_alert_socket_type_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.incoming_connection_alert']]"
		[Register ("incoming_connection_alert_socket_type_get", "(JLcom/frostwire/jlibtorrent/swig/incoming_connection_alert;)I", "")]
		public static unsafe int Incoming_connection_alert_socket_type_get (long p0, global::FrostWire.Libtorrent.Swig.Incoming_connection_alert p1)
		{
			const string __id = "incoming_connection_alert_socket_type_get.(JLcom/frostwire/jlibtorrent/swig/incoming_connection_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_connection_alert_static_category_get' and count(parameter)=0]"
		[Register ("incoming_connection_alert_static_category_get", "()J", "")]
		public static unsafe long Incoming_connection_alert_static_category_get ()
		{
			const string __id = "incoming_connection_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_connection_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.incoming_connection_alert']]"
		[Register ("incoming_connection_alert_type", "(JLcom/frostwire/jlibtorrent/swig/incoming_connection_alert;)I", "")]
		public static unsafe int Incoming_connection_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Incoming_connection_alert p1)
		{
			const string __id = "incoming_connection_alert_type.(JLcom/frostwire/jlibtorrent/swig/incoming_connection_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_connection_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.incoming_connection_alert']]"
		[Register ("incoming_connection_alert_what", "(JLcom/frostwire/jlibtorrent/swig/incoming_connection_alert;)Ljava/lang/String;", "")]
		public static unsafe string Incoming_connection_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Incoming_connection_alert p1)
		{
			const string __id = "incoming_connection_alert_what.(JLcom/frostwire/jlibtorrent/swig/incoming_connection_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_request_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("incoming_request_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Incoming_request_alert_SWIGUpcast (long p0)
		{
			const string __id = "incoming_request_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_request_alert_alert_type_get' and count(parameter)=0]"
		[Register ("incoming_request_alert_alert_type_get", "()I", "")]
		public static unsafe int Incoming_request_alert_alert_type_get ()
		{
			const string __id = "incoming_request_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_request_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.incoming_request_alert']]"
		[Register ("incoming_request_alert_category", "(JLcom/frostwire/jlibtorrent/swig/incoming_request_alert;)J", "")]
		public static unsafe long Incoming_request_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Incoming_request_alert p1)
		{
			const string __id = "incoming_request_alert_category.(JLcom/frostwire/jlibtorrent/swig/incoming_request_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_request_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.incoming_request_alert']]"
		[Register ("incoming_request_alert_message", "(JLcom/frostwire/jlibtorrent/swig/incoming_request_alert;)Ljava/lang/String;", "")]
		public static unsafe string Incoming_request_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Incoming_request_alert p1)
		{
			const string __id = "incoming_request_alert_message.(JLcom/frostwire/jlibtorrent/swig/incoming_request_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_request_alert_priority_get' and count(parameter)=0]"
		[Register ("incoming_request_alert_priority_get", "()I", "")]
		public static unsafe int Incoming_request_alert_priority_get ()
		{
			const string __id = "incoming_request_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_request_alert_req_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.incoming_request_alert']]"
		[Register ("incoming_request_alert_req_get", "(JLcom/frostwire/jlibtorrent/swig/incoming_request_alert;)J", "")]
		public static unsafe long Incoming_request_alert_req_get (long p0, global::FrostWire.Libtorrent.Swig.Incoming_request_alert p1)
		{
			const string __id = "incoming_request_alert_req_get.(JLcom/frostwire/jlibtorrent/swig/incoming_request_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_request_alert_req_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.incoming_request_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_request']]"
		[Register ("incoming_request_alert_req_set", "(JLcom/frostwire/jlibtorrent/swig/incoming_request_alert;JLcom/frostwire/jlibtorrent/swig/peer_request;)V", "")]
		public static unsafe void Incoming_request_alert_req_set (long p0, global::FrostWire.Libtorrent.Swig.Incoming_request_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_request p3)
		{
			const string __id = "incoming_request_alert_req_set.(JLcom/frostwire/jlibtorrent/swig/incoming_request_alert;JLcom/frostwire/jlibtorrent/swig/peer_request;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_request_alert_static_category_get' and count(parameter)=0]"
		[Register ("incoming_request_alert_static_category_get", "()J", "")]
		public static unsafe long Incoming_request_alert_static_category_get ()
		{
			const string __id = "incoming_request_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_request_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.incoming_request_alert']]"
		[Register ("incoming_request_alert_type", "(JLcom/frostwire/jlibtorrent/swig/incoming_request_alert;)I", "")]
		public static unsafe int Incoming_request_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Incoming_request_alert p1)
		{
			const string __id = "incoming_request_alert_type.(JLcom/frostwire/jlibtorrent/swig/incoming_request_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='incoming_request_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.incoming_request_alert']]"
		[Register ("incoming_request_alert_what", "(JLcom/frostwire/jlibtorrent/swig/incoming_request_alert;)Ljava/lang/String;", "")]
		public static unsafe string Incoming_request_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Incoming_request_alert p1)
		{
			const string __id = "incoming_request_alert_what.(JLcom/frostwire/jlibtorrent/swig/incoming_request_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int64_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int64_vector']]"
		[Register ("int64_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/int64_vector;)J", "")]
		public static unsafe long Int64_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Int64_vector p1)
		{
			const string __id = "int64_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/int64_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int64_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int64_vector']]"
		[Register ("int64_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/int64_vector;)V", "")]
		public static unsafe void Int64_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Int64_vector p1)
		{
			const string __id = "int64_vector_clear.(JLcom/frostwire/jlibtorrent/swig/int64_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int64_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int64_vector']]"
		[Register ("int64_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/int64_vector;)Z", "")]
		public static unsafe bool Int64_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Int64_vector p1)
		{
			const string __id = "int64_vector_empty.(JLcom/frostwire/jlibtorrent/swig/int64_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int64_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int64_vector'] and parameter[3][@type='int']]"
		[Register ("int64_vector_get", "(JLcom/frostwire/jlibtorrent/swig/int64_vector;I)J", "")]
		public static unsafe long Int64_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Int64_vector p1, int p2)
		{
			const string __id = "int64_vector_get.(JLcom/frostwire/jlibtorrent/swig/int64_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int64_vector_push_back' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int64_vector'] and parameter[3][@type='long']]"
		[Register ("int64_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/int64_vector;J)V", "")]
		public static unsafe void Int64_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Int64_vector p1, long p2)
		{
			const string __id = "int64_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/int64_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int64_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int64_vector'] and parameter[3][@type='long']]"
		[Register ("int64_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/int64_vector;J)V", "")]
		public static unsafe void Int64_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Int64_vector p1, long p2)
		{
			const string __id = "int64_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/int64_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int64_vector_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int64_vector'] and parameter[3][@type='int'] and parameter[4][@type='long']]"
		[Register ("int64_vector_set", "(JLcom/frostwire/jlibtorrent/swig/int64_vector;IJ)V", "")]
		public static unsafe void Int64_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Int64_vector p1, int p2, long p3)
		{
			const string __id = "int64_vector_set.(JLcom/frostwire/jlibtorrent/swig/int64_vector;IJ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int64_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int64_vector']]"
		[Register ("int64_vector_size", "(JLcom/frostwire/jlibtorrent/swig/int64_vector;)J", "")]
		public static unsafe long Int64_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Int64_vector p1)
		{
			const string __id = "int64_vector_size.(JLcom/frostwire/jlibtorrent/swig/int64_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int_vector']]"
		[Register ("int_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/int_vector;)J", "")]
		public static unsafe long Int_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Int_vector p1)
		{
			const string __id = "int_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/int_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int_vector']]"
		[Register ("int_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/int_vector;)V", "")]
		public static unsafe void Int_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Int_vector p1)
		{
			const string __id = "int_vector_clear.(JLcom/frostwire/jlibtorrent/swig/int_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int_vector']]"
		[Register ("int_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/int_vector;)Z", "")]
		public static unsafe bool Int_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Int_vector p1)
		{
			const string __id = "int_vector_empty.(JLcom/frostwire/jlibtorrent/swig/int_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int_vector'] and parameter[3][@type='int']]"
		[Register ("int_vector_get", "(JLcom/frostwire/jlibtorrent/swig/int_vector;I)I", "")]
		public static unsafe int Int_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Int_vector p1, int p2)
		{
			const string __id = "int_vector_get.(JLcom/frostwire/jlibtorrent/swig/int_vector;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int_vector_push_back' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int_vector'] and parameter[3][@type='int']]"
		[Register ("int_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/int_vector;I)V", "")]
		public static unsafe void Int_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Int_vector p1, int p2)
		{
			const string __id = "int_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/int_vector;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int_vector'] and parameter[3][@type='long']]"
		[Register ("int_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/int_vector;J)V", "")]
		public static unsafe void Int_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Int_vector p1, long p2)
		{
			const string __id = "int_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/int_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int_vector_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int_vector'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("int_vector_set", "(JLcom/frostwire/jlibtorrent/swig/int_vector;II)V", "")]
		public static unsafe void Int_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Int_vector p1, int p2, int p3)
		{
			const string __id = "int_vector_set.(JLcom/frostwire/jlibtorrent/swig/int_vector;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='int_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.int_vector']]"
		[Register ("int_vector_size", "(JLcom/frostwire/jlibtorrent/swig/int_vector;)J", "")]
		public static unsafe long Int_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Int_vector p1)
		{
			const string __id = "int_vector_size.(JLcom/frostwire/jlibtorrent/swig/int_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='internal_server_error_get' and count(parameter)=0]"
		[Register ("internal_server_error_get", "()I", "")]
		public static unsafe int Internal_server_error_get ()
		{
			const string __id = "internal_server_error_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='interrupted_get' and count(parameter)=0]"
		[Register ("interrupted_get", "()I", "")]
		public static unsafe int Interrupted_get ()
		{
			const string __id = "interrupted_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='invalid_argument_get' and count(parameter)=0]"
		[Register ("invalid_argument_get", "()I", "")]
		public static unsafe int Invalid_argument_get ()
		{
			const string __id = "invalid_argument_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='invalid_request_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("invalid_request_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Invalid_request_alert_SWIGUpcast (long p0)
		{
			const string __id = "invalid_request_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='invalid_request_alert_alert_type_get' and count(parameter)=0]"
		[Register ("invalid_request_alert_alert_type_get", "()I", "")]
		public static unsafe int Invalid_request_alert_alert_type_get ()
		{
			const string __id = "invalid_request_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='invalid_request_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.invalid_request_alert']]"
		[Register ("invalid_request_alert_category", "(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)J", "")]
		public static unsafe long Invalid_request_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Invalid_request_alert p1)
		{
			const string __id = "invalid_request_alert_category.(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='invalid_request_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.invalid_request_alert']]"
		[Register ("invalid_request_alert_message", "(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)Ljava/lang/String;", "")]
		public static unsafe string Invalid_request_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Invalid_request_alert p1)
		{
			const string __id = "invalid_request_alert_message.(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='invalid_request_alert_peer_interested_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.invalid_request_alert']]"
		[Register ("invalid_request_alert_peer_interested_get", "(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)Z", "")]
		public static unsafe bool Invalid_request_alert_peer_interested_get (long p0, global::FrostWire.Libtorrent.Swig.Invalid_request_alert p1)
		{
			const string __id = "invalid_request_alert_peer_interested_get.(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='invalid_request_alert_priority_get' and count(parameter)=0]"
		[Register ("invalid_request_alert_priority_get", "()I", "")]
		public static unsafe int Invalid_request_alert_priority_get ()
		{
			const string __id = "invalid_request_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='invalid_request_alert_request_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.invalid_request_alert']]"
		[Register ("invalid_request_alert_request_get", "(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)J", "")]
		public static unsafe long Invalid_request_alert_request_get (long p0, global::FrostWire.Libtorrent.Swig.Invalid_request_alert p1)
		{
			const string __id = "invalid_request_alert_request_get.(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='invalid_request_alert_static_category_get' and count(parameter)=0]"
		[Register ("invalid_request_alert_static_category_get", "()J", "")]
		public static unsafe long Invalid_request_alert_static_category_get ()
		{
			const string __id = "invalid_request_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='invalid_request_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.invalid_request_alert']]"
		[Register ("invalid_request_alert_type", "(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)I", "")]
		public static unsafe int Invalid_request_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Invalid_request_alert p1)
		{
			const string __id = "invalid_request_alert_type.(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='invalid_request_alert_we_have_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.invalid_request_alert']]"
		[Register ("invalid_request_alert_we_have_get", "(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)Z", "")]
		public static unsafe bool Invalid_request_alert_we_have_get (long p0, global::FrostWire.Libtorrent.Swig.Invalid_request_alert p1)
		{
			const string __id = "invalid_request_alert_we_have_get.(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='invalid_request_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.invalid_request_alert']]"
		[Register ("invalid_request_alert_what", "(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)Ljava/lang/String;", "")]
		public static unsafe string Invalid_request_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Invalid_request_alert p1)
		{
			const string __id = "invalid_request_alert_what.(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='invalid_request_alert_withheld_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.invalid_request_alert']]"
		[Register ("invalid_request_alert_withheld_get", "(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)Z", "")]
		public static unsafe bool Invalid_request_alert_withheld_get (long p0, global::FrostWire.Libtorrent.Swig.Invalid_request_alert p1)
		{
			const string __id = "invalid_request_alert_withheld_get.(JLcom/frostwire/jlibtorrent/swig/invalid_request_alert;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='invalid_seek_get' and count(parameter)=0]"
		[Register ("invalid_seek_get", "()I", "")]
		public static unsafe int Invalid_seek_get ()
		{
			const string __id = "invalid_seek_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='io_error_get' and count(parameter)=0]"
		[Register ("io_error_get", "()I", "")]
		public static unsafe int Io_error_get ()
		{
			const string __id = "io_error_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_filter_access' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_filter'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("ip_filter_access", "(JLcom/frostwire/jlibtorrent/swig/ip_filter;JLcom/frostwire/jlibtorrent/swig/address;)J", "")]
		public static unsafe long Ip_filter_access (long p0, global::FrostWire.Libtorrent.Swig.Ip_filter p1, long p2, global::FrostWire.Libtorrent.Swig.Address p3)
		{
			const string __id = "ip_filter_access.(JLcom/frostwire/jlibtorrent/swig/ip_filter;JLcom/frostwire/jlibtorrent/swig/address;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_filter_add_rule' and count(parameter)=7 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_filter'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.address'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.address'] and parameter[7][@type='long']]"
		[Register ("ip_filter_add_rule", "(JLcom/frostwire/jlibtorrent/swig/ip_filter;JLcom/frostwire/jlibtorrent/swig/address;JLcom/frostwire/jlibtorrent/swig/address;J)V", "")]
		public static unsafe void Ip_filter_add_rule (long p0, global::FrostWire.Libtorrent.Swig.Ip_filter p1, long p2, global::FrostWire.Libtorrent.Swig.Address p3, long p4, global::FrostWire.Libtorrent.Swig.Address p5, long p6)
		{
			const string __id = "ip_filter_add_rule.(JLcom/frostwire/jlibtorrent/swig/ip_filter;JLcom/frostwire/jlibtorrent/swig/address;JLcom/frostwire/jlibtorrent/swig/address;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				__args [6] = new JniArgumentValue (p6);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_filter_blocked_get' and count(parameter)=0]"
		[Register ("ip_filter_blocked_get", "()I", "")]
		public static unsafe int Ip_filter_blocked_get ()
		{
			const string __id = "ip_filter_blocked_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_description_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface']]"
		[Register ("ip_interface_description_get", "(JLcom/frostwire/jlibtorrent/swig/ip_interface;)J", "")]
		public static unsafe long Ip_interface_description_get (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface p1)
		{
			const string __id = "ip_interface_description_get.(JLcom/frostwire/jlibtorrent/swig/ip_interface;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_description_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("ip_interface_description_set", "(JLcom/frostwire/jlibtorrent/swig/ip_interface;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Ip_interface_description_set (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "ip_interface_description_set.(JLcom/frostwire/jlibtorrent/swig/ip_interface;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_friendly_name_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface']]"
		[Register ("ip_interface_friendly_name_get", "(JLcom/frostwire/jlibtorrent/swig/ip_interface;)J", "")]
		public static unsafe long Ip_interface_friendly_name_get (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface p1)
		{
			const string __id = "ip_interface_friendly_name_get.(JLcom/frostwire/jlibtorrent/swig/ip_interface;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_friendly_name_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("ip_interface_friendly_name_set", "(JLcom/frostwire/jlibtorrent/swig/ip_interface;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Ip_interface_friendly_name_set (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "ip_interface_friendly_name_set.(JLcom/frostwire/jlibtorrent/swig/ip_interface;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_interface_address_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface']]"
		[Register ("ip_interface_interface_address_get", "(JLcom/frostwire/jlibtorrent/swig/ip_interface;)J", "")]
		public static unsafe long Ip_interface_interface_address_get (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface p1)
		{
			const string __id = "ip_interface_interface_address_get.(JLcom/frostwire/jlibtorrent/swig/ip_interface;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_interface_address_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("ip_interface_interface_address_set", "(JLcom/frostwire/jlibtorrent/swig/ip_interface;JLcom/frostwire/jlibtorrent/swig/address;)V", "")]
		public static unsafe void Ip_interface_interface_address_set (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface p1, long p2, global::FrostWire.Libtorrent.Swig.Address p3)
		{
			const string __id = "ip_interface_interface_address_set.(JLcom/frostwire/jlibtorrent/swig/ip_interface;JLcom/frostwire/jlibtorrent/swig/address;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_name_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface']]"
		[Register ("ip_interface_name_get", "(JLcom/frostwire/jlibtorrent/swig/ip_interface;)J", "")]
		public static unsafe long Ip_interface_name_get (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface p1)
		{
			const string __id = "ip_interface_name_get.(JLcom/frostwire/jlibtorrent/swig/ip_interface;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_name_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("ip_interface_name_set", "(JLcom/frostwire/jlibtorrent/swig/ip_interface;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Ip_interface_name_set (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "ip_interface_name_set.(JLcom/frostwire/jlibtorrent/swig/ip_interface;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_netmask_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface']]"
		[Register ("ip_interface_netmask_get", "(JLcom/frostwire/jlibtorrent/swig/ip_interface;)J", "")]
		public static unsafe long Ip_interface_netmask_get (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface p1)
		{
			const string __id = "ip_interface_netmask_get.(JLcom/frostwire/jlibtorrent/swig/ip_interface;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_netmask_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("ip_interface_netmask_set", "(JLcom/frostwire/jlibtorrent/swig/ip_interface;JLcom/frostwire/jlibtorrent/swig/address;)V", "")]
		public static unsafe void Ip_interface_netmask_set (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface p1, long p2, global::FrostWire.Libtorrent.Swig.Address p3)
		{
			const string __id = "ip_interface_netmask_set.(JLcom/frostwire/jlibtorrent/swig/ip_interface;JLcom/frostwire/jlibtorrent/swig/address;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_preferred_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface']]"
		[Register ("ip_interface_preferred_get", "(JLcom/frostwire/jlibtorrent/swig/ip_interface;)Z", "")]
		public static unsafe bool Ip_interface_preferred_get (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface p1)
		{
			const string __id = "ip_interface_preferred_get.(JLcom/frostwire/jlibtorrent/swig/ip_interface;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_preferred_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface'] and parameter[3][@type='boolean']]"
		[Register ("ip_interface_preferred_set", "(JLcom/frostwire/jlibtorrent/swig/ip_interface;Z)V", "")]
		public static unsafe void Ip_interface_preferred_set (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface p1, bool p2)
		{
			const string __id = "ip_interface_preferred_set.(JLcom/frostwire/jlibtorrent/swig/ip_interface;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface_vector']]"
		[Register ("ip_interface_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;)J", "")]
		public static unsafe long Ip_interface_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface_vector p1)
		{
			const string __id = "ip_interface_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface_vector']]"
		[Register ("ip_interface_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;)V", "")]
		public static unsafe void Ip_interface_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface_vector p1)
		{
			const string __id = "ip_interface_vector_clear.(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface_vector']]"
		[Register ("ip_interface_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;)Z", "")]
		public static unsafe bool Ip_interface_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface_vector p1)
		{
			const string __id = "ip_interface_vector_empty.(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface_vector'] and parameter[3][@type='int']]"
		[Register ("ip_interface_vector_get", "(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;I)J", "")]
		public static unsafe long Ip_interface_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface_vector p1, int p2)
		{
			const string __id = "ip_interface_vector_get.(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.ip_interface']]"
		[Register ("ip_interface_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;JLcom/frostwire/jlibtorrent/swig/ip_interface;)V", "")]
		public static unsafe void Ip_interface_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Ip_interface p3)
		{
			const string __id = "ip_interface_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;JLcom/frostwire/jlibtorrent/swig/ip_interface;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface_vector'] and parameter[3][@type='long']]"
		[Register ("ip_interface_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;J)V", "")]
		public static unsafe void Ip_interface_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface_vector p1, long p2)
		{
			const string __id = "ip_interface_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.ip_interface']]"
		[Register ("ip_interface_vector_set", "(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;IJLcom/frostwire/jlibtorrent/swig/ip_interface;)V", "")]
		public static unsafe void Ip_interface_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Ip_interface p4)
		{
			const string __id = "ip_interface_vector_set.(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;IJLcom/frostwire/jlibtorrent/swig/ip_interface;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_interface_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_interface_vector']]"
		[Register ("ip_interface_vector_size", "(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;)J", "")]
		public static unsafe long Ip_interface_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Ip_interface_vector p1)
		{
			const string __id = "ip_interface_vector_size.(JLcom/frostwire/jlibtorrent/swig/ip_interface_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_destination_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route']]"
		[Register ("ip_route_destination_get", "(JLcom/frostwire/jlibtorrent/swig/ip_route;)J", "")]
		public static unsafe long Ip_route_destination_get (long p0, global::FrostWire.Libtorrent.Swig.Ip_route p1)
		{
			const string __id = "ip_route_destination_get.(JLcom/frostwire/jlibtorrent/swig/ip_route;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_destination_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("ip_route_destination_set", "(JLcom/frostwire/jlibtorrent/swig/ip_route;JLcom/frostwire/jlibtorrent/swig/address;)V", "")]
		public static unsafe void Ip_route_destination_set (long p0, global::FrostWire.Libtorrent.Swig.Ip_route p1, long p2, global::FrostWire.Libtorrent.Swig.Address p3)
		{
			const string __id = "ip_route_destination_set.(JLcom/frostwire/jlibtorrent/swig/ip_route;JLcom/frostwire/jlibtorrent/swig/address;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_gateway_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route']]"
		[Register ("ip_route_gateway_get", "(JLcom/frostwire/jlibtorrent/swig/ip_route;)J", "")]
		public static unsafe long Ip_route_gateway_get (long p0, global::FrostWire.Libtorrent.Swig.Ip_route p1)
		{
			const string __id = "ip_route_gateway_get.(JLcom/frostwire/jlibtorrent/swig/ip_route;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_gateway_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("ip_route_gateway_set", "(JLcom/frostwire/jlibtorrent/swig/ip_route;JLcom/frostwire/jlibtorrent/swig/address;)V", "")]
		public static unsafe void Ip_route_gateway_set (long p0, global::FrostWire.Libtorrent.Swig.Ip_route p1, long p2, global::FrostWire.Libtorrent.Swig.Address p3)
		{
			const string __id = "ip_route_gateway_set.(JLcom/frostwire/jlibtorrent/swig/ip_route;JLcom/frostwire/jlibtorrent/swig/address;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_mtu_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route']]"
		[Register ("ip_route_mtu_get", "(JLcom/frostwire/jlibtorrent/swig/ip_route;)I", "")]
		public static unsafe int Ip_route_mtu_get (long p0, global::FrostWire.Libtorrent.Swig.Ip_route p1)
		{
			const string __id = "ip_route_mtu_get.(JLcom/frostwire/jlibtorrent/swig/ip_route;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_mtu_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route'] and parameter[3][@type='int']]"
		[Register ("ip_route_mtu_set", "(JLcom/frostwire/jlibtorrent/swig/ip_route;I)V", "")]
		public static unsafe void Ip_route_mtu_set (long p0, global::FrostWire.Libtorrent.Swig.Ip_route p1, int p2)
		{
			const string __id = "ip_route_mtu_set.(JLcom/frostwire/jlibtorrent/swig/ip_route;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_name_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route']]"
		[Register ("ip_route_name_get", "(JLcom/frostwire/jlibtorrent/swig/ip_route;)J", "")]
		public static unsafe long Ip_route_name_get (long p0, global::FrostWire.Libtorrent.Swig.Ip_route p1)
		{
			const string __id = "ip_route_name_get.(JLcom/frostwire/jlibtorrent/swig/ip_route;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_name_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("ip_route_name_set", "(JLcom/frostwire/jlibtorrent/swig/ip_route;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Ip_route_name_set (long p0, global::FrostWire.Libtorrent.Swig.Ip_route p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "ip_route_name_set.(JLcom/frostwire/jlibtorrent/swig/ip_route;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_netmask_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route']]"
		[Register ("ip_route_netmask_get", "(JLcom/frostwire/jlibtorrent/swig/ip_route;)J", "")]
		public static unsafe long Ip_route_netmask_get (long p0, global::FrostWire.Libtorrent.Swig.Ip_route p1)
		{
			const string __id = "ip_route_netmask_get.(JLcom/frostwire/jlibtorrent/swig/ip_route;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_netmask_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("ip_route_netmask_set", "(JLcom/frostwire/jlibtorrent/swig/ip_route;JLcom/frostwire/jlibtorrent/swig/address;)V", "")]
		public static unsafe void Ip_route_netmask_set (long p0, global::FrostWire.Libtorrent.Swig.Ip_route p1, long p2, global::FrostWire.Libtorrent.Swig.Address p3)
		{
			const string __id = "ip_route_netmask_set.(JLcom/frostwire/jlibtorrent/swig/ip_route;JLcom/frostwire/jlibtorrent/swig/address;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route_vector']]"
		[Register ("ip_route_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;)J", "")]
		public static unsafe long Ip_route_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Ip_route_vector p1)
		{
			const string __id = "ip_route_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route_vector']]"
		[Register ("ip_route_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;)V", "")]
		public static unsafe void Ip_route_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Ip_route_vector p1)
		{
			const string __id = "ip_route_vector_clear.(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route_vector']]"
		[Register ("ip_route_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;)Z", "")]
		public static unsafe bool Ip_route_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Ip_route_vector p1)
		{
			const string __id = "ip_route_vector_empty.(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route_vector'] and parameter[3][@type='int']]"
		[Register ("ip_route_vector_get", "(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;I)J", "")]
		public static unsafe long Ip_route_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Ip_route_vector p1, int p2)
		{
			const string __id = "ip_route_vector_get.(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.ip_route']]"
		[Register ("ip_route_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;JLcom/frostwire/jlibtorrent/swig/ip_route;)V", "")]
		public static unsafe void Ip_route_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Ip_route_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Ip_route p3)
		{
			const string __id = "ip_route_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;JLcom/frostwire/jlibtorrent/swig/ip_route;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route_vector'] and parameter[3][@type='long']]"
		[Register ("ip_route_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;J)V", "")]
		public static unsafe void Ip_route_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Ip_route_vector p1, long p2)
		{
			const string __id = "ip_route_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.ip_route']]"
		[Register ("ip_route_vector_set", "(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;IJLcom/frostwire/jlibtorrent/swig/ip_route;)V", "")]
		public static unsafe void Ip_route_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Ip_route_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Ip_route p4)
		{
			const string __id = "ip_route_vector_set.(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;IJLcom/frostwire/jlibtorrent/swig/ip_route;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ip_route_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.ip_route_vector']]"
		[Register ("ip_route_vector_size", "(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;)J", "")]
		public static unsafe long Ip_route_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Ip_route_vector p1)
		{
			const string __id = "ip_route_vector_size.(JLcom/frostwire/jlibtorrent/swig/ip_route_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='is_a_directory_get' and count(parameter)=0]"
		[Register ("is_a_directory_get", "()I", "")]
		public static unsafe int Is_a_directory_get ()
		{
			const string __id = "is_a_directory_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='jlibtorrentVersion' and count(parameter)=0]"
		[Register ("jlibtorrentVersion", "()Ljava/lang/String;", "")]
		public static unsafe string JlibtorrentVersion ()
		{
			const string __id = "jlibtorrentVersion.()Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='libtorrent_no_error_get' and count(parameter)=0]"
		[Register ("libtorrent_no_error_get", "()I", "")]
		public static unsafe int Libtorrent_no_error_get ()
		{
			const string __id = "libtorrent_no_error_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("listen_failed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Listen_failed_alert_SWIGUpcast (long p0)
		{
			const string __id = "listen_failed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("listen_failed_alert_alert_type_get", "()I", "")]
		public static unsafe int Listen_failed_alert_alert_type_get ()
		{
			const string __id = "listen_failed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_failed_alert']]"
		[Register ("listen_failed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)J", "")]
		public static unsafe long Listen_failed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Listen_failed_alert p1)
		{
			const string __id = "listen_failed_alert_category.(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_failed_alert']]"
		[Register ("listen_failed_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)J", "")]
		public static unsafe long Listen_failed_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Listen_failed_alert p1)
		{
			const string __id = "listen_failed_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_get_address' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_failed_alert']]"
		[Register ("listen_failed_alert_get_address", "(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)J", "")]
		public static unsafe long Listen_failed_alert_get_address (long p0, global::FrostWire.Libtorrent.Swig.Listen_failed_alert p1)
		{
			const string __id = "listen_failed_alert_get_address.(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_listen_interface' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_failed_alert']]"
		[Register ("listen_failed_alert_listen_interface", "(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Listen_failed_alert_listen_interface (long p0, global::FrostWire.Libtorrent.Swig.Listen_failed_alert p1)
		{
			const string __id = "listen_failed_alert_listen_interface.(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_failed_alert']]"
		[Register ("listen_failed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Listen_failed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Listen_failed_alert p1)
		{
			const string __id = "listen_failed_alert_message.(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_op_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_failed_alert']]"
		[Register ("listen_failed_alert_op_get", "(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)I", "")]
		public static unsafe int Listen_failed_alert_op_get (long p0, global::FrostWire.Libtorrent.Swig.Listen_failed_alert p1)
		{
			const string __id = "listen_failed_alert_op_get.(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_op_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_failed_alert'] and parameter[3][@type='int']]"
		[Register ("listen_failed_alert_op_set", "(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;I)V", "")]
		public static unsafe void Listen_failed_alert_op_set (long p0, global::FrostWire.Libtorrent.Swig.Listen_failed_alert p1, int p2)
		{
			const string __id = "listen_failed_alert_op_set.(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_port_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_failed_alert']]"
		[Register ("listen_failed_alert_port_get", "(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)I", "")]
		public static unsafe int Listen_failed_alert_port_get (long p0, global::FrostWire.Libtorrent.Swig.Listen_failed_alert p1)
		{
			const string __id = "listen_failed_alert_port_get.(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_priority_get' and count(parameter)=0]"
		[Register ("listen_failed_alert_priority_get", "()I", "")]
		public static unsafe int Listen_failed_alert_priority_get ()
		{
			const string __id = "listen_failed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_socket_type_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_failed_alert']]"
		[Register ("listen_failed_alert_socket_type_get", "(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)I", "")]
		public static unsafe int Listen_failed_alert_socket_type_get (long p0, global::FrostWire.Libtorrent.Swig.Listen_failed_alert p1)
		{
			const string __id = "listen_failed_alert_socket_type_get.(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_static_category_get' and count(parameter)=0]"
		[Register ("listen_failed_alert_static_category_get", "()J", "")]
		public static unsafe long Listen_failed_alert_static_category_get ()
		{
			const string __id = "listen_failed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_failed_alert']]"
		[Register ("listen_failed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)I", "")]
		public static unsafe int Listen_failed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Listen_failed_alert p1)
		{
			const string __id = "listen_failed_alert_type.(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_failed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_failed_alert']]"
		[Register ("listen_failed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Listen_failed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Listen_failed_alert p1)
		{
			const string __id = "listen_failed_alert_what.(JLcom/frostwire/jlibtorrent/swig/listen_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_succeeded_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("listen_succeeded_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Listen_succeeded_alert_SWIGUpcast (long p0)
		{
			const string __id = "listen_succeeded_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_succeeded_alert_alert_type_get' and count(parameter)=0]"
		[Register ("listen_succeeded_alert_alert_type_get", "()I", "")]
		public static unsafe int Listen_succeeded_alert_alert_type_get ()
		{
			const string __id = "listen_succeeded_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_succeeded_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_succeeded_alert']]"
		[Register ("listen_succeeded_alert_category", "(JLcom/frostwire/jlibtorrent/swig/listen_succeeded_alert;)J", "")]
		public static unsafe long Listen_succeeded_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Listen_succeeded_alert p1)
		{
			const string __id = "listen_succeeded_alert_category.(JLcom/frostwire/jlibtorrent/swig/listen_succeeded_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_succeeded_alert_get_address' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_succeeded_alert']]"
		[Register ("listen_succeeded_alert_get_address", "(JLcom/frostwire/jlibtorrent/swig/listen_succeeded_alert;)J", "")]
		public static unsafe long Listen_succeeded_alert_get_address (long p0, global::FrostWire.Libtorrent.Swig.Listen_succeeded_alert p1)
		{
			const string __id = "listen_succeeded_alert_get_address.(JLcom/frostwire/jlibtorrent/swig/listen_succeeded_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_succeeded_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_succeeded_alert']]"
		[Register ("listen_succeeded_alert_message", "(JLcom/frostwire/jlibtorrent/swig/listen_succeeded_alert;)Ljava/lang/String;", "")]
		public static unsafe string Listen_succeeded_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Listen_succeeded_alert p1)
		{
			const string __id = "listen_succeeded_alert_message.(JLcom/frostwire/jlibtorrent/swig/listen_succeeded_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_succeeded_alert_port_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_succeeded_alert']]"
		[Register ("listen_succeeded_alert_port_get", "(JLcom/frostwire/jlibtorrent/swig/listen_succeeded_alert;)I", "")]
		public static unsafe int Listen_succeeded_alert_port_get (long p0, global::FrostWire.Libtorrent.Swig.Listen_succeeded_alert p1)
		{
			const string __id = "listen_succeeded_alert_port_get.(JLcom/frostwire/jlibtorrent/swig/listen_succeeded_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_succeeded_alert_priority_get' and count(parameter)=0]"
		[Register ("listen_succeeded_alert_priority_get", "()I", "")]
		public static unsafe int Listen_succeeded_alert_priority_get ()
		{
			const string __id = "listen_succeeded_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_succeeded_alert_socket_type_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_succeeded_alert']]"
		[Register ("listen_succeeded_alert_socket_type_get", "(JLcom/frostwire/jlibtorrent/swig/listen_succeeded_alert;)I", "")]
		public static unsafe int Listen_succeeded_alert_socket_type_get (long p0, global::FrostWire.Libtorrent.Swig.Listen_succeeded_alert p1)
		{
			const string __id = "listen_succeeded_alert_socket_type_get.(JLcom/frostwire/jlibtorrent/swig/listen_succeeded_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_succeeded_alert_static_category_get' and count(parameter)=0]"
		[Register ("listen_succeeded_alert_static_category_get", "()J", "")]
		public static unsafe long Listen_succeeded_alert_static_category_get ()
		{
			const string __id = "listen_succeeded_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_succeeded_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_succeeded_alert']]"
		[Register ("listen_succeeded_alert_type", "(JLcom/frostwire/jlibtorrent/swig/listen_succeeded_alert;)I", "")]
		public static unsafe int Listen_succeeded_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Listen_succeeded_alert p1)
		{
			const string __id = "listen_succeeded_alert_type.(JLcom/frostwire/jlibtorrent/swig/listen_succeeded_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='listen_succeeded_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.listen_succeeded_alert']]"
		[Register ("listen_succeeded_alert_what", "(JLcom/frostwire/jlibtorrent/swig/listen_succeeded_alert;)Ljava/lang/String;", "")]
		public static unsafe string Listen_succeeded_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Listen_succeeded_alert p1)
		{
			const string __id = "listen_succeeded_alert_what.(JLcom/frostwire/jlibtorrent/swig/listen_succeeded_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='log_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("log_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Log_alert_SWIGUpcast (long p0)
		{
			const string __id = "log_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='log_alert_alert_type_get' and count(parameter)=0]"
		[Register ("log_alert_alert_type_get", "()I", "")]
		public static unsafe int Log_alert_alert_type_get ()
		{
			const string __id = "log_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='log_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.log_alert']]"
		[Register ("log_alert_category", "(JLcom/frostwire/jlibtorrent/swig/log_alert;)J", "")]
		public static unsafe long Log_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Log_alert p1)
		{
			const string __id = "log_alert_category.(JLcom/frostwire/jlibtorrent/swig/log_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='log_alert_log_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.log_alert']]"
		[Register ("log_alert_log_message", "(JLcom/frostwire/jlibtorrent/swig/log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Log_alert_log_message (long p0, global::FrostWire.Libtorrent.Swig.Log_alert p1)
		{
			const string __id = "log_alert_log_message.(JLcom/frostwire/jlibtorrent/swig/log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='log_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.log_alert']]"
		[Register ("log_alert_message", "(JLcom/frostwire/jlibtorrent/swig/log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Log_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Log_alert p1)
		{
			const string __id = "log_alert_message.(JLcom/frostwire/jlibtorrent/swig/log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='log_alert_priority_get' and count(parameter)=0]"
		[Register ("log_alert_priority_get", "()I", "")]
		public static unsafe int Log_alert_priority_get ()
		{
			const string __id = "log_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='log_alert_static_category_get' and count(parameter)=0]"
		[Register ("log_alert_static_category_get", "()J", "")]
		public static unsafe long Log_alert_static_category_get ()
		{
			const string __id = "log_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='log_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.log_alert']]"
		[Register ("log_alert_type", "(JLcom/frostwire/jlibtorrent/swig/log_alert;)I", "")]
		public static unsafe int Log_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Log_alert p1)
		{
			const string __id = "log_alert_type.(JLcom/frostwire/jlibtorrent/swig/log_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='log_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.log_alert']]"
		[Register ("log_alert_what", "(JLcom/frostwire/jlibtorrent/swig/log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Log_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Log_alert p1)
		{
			const string __id = "log_alert_what.(JLcom/frostwire/jlibtorrent/swig/log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_error_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("lsd_error_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Lsd_error_alert_SWIGUpcast (long p0)
		{
			const string __id = "lsd_error_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_error_alert_alert_type_get' and count(parameter)=0]"
		[Register ("lsd_error_alert_alert_type_get", "()I", "")]
		public static unsafe int Lsd_error_alert_alert_type_get ()
		{
			const string __id = "lsd_error_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_error_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.lsd_error_alert']]"
		[Register ("lsd_error_alert_category", "(JLcom/frostwire/jlibtorrent/swig/lsd_error_alert;)J", "")]
		public static unsafe long Lsd_error_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Lsd_error_alert p1)
		{
			const string __id = "lsd_error_alert_category.(JLcom/frostwire/jlibtorrent/swig/lsd_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_error_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.lsd_error_alert']]"
		[Register ("lsd_error_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/lsd_error_alert;)J", "")]
		public static unsafe long Lsd_error_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Lsd_error_alert p1)
		{
			const string __id = "lsd_error_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/lsd_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_error_alert_error_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.lsd_error_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("lsd_error_alert_error_set", "(JLcom/frostwire/jlibtorrent/swig/lsd_error_alert;JLcom/frostwire/jlibtorrent/swig/error_code;)V", "")]
		public static unsafe void Lsd_error_alert_error_set (long p0, global::FrostWire.Libtorrent.Swig.Lsd_error_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "lsd_error_alert_error_set.(JLcom/frostwire/jlibtorrent/swig/lsd_error_alert;JLcom/frostwire/jlibtorrent/swig/error_code;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_error_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.lsd_error_alert']]"
		[Register ("lsd_error_alert_message", "(JLcom/frostwire/jlibtorrent/swig/lsd_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Lsd_error_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Lsd_error_alert p1)
		{
			const string __id = "lsd_error_alert_message.(JLcom/frostwire/jlibtorrent/swig/lsd_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_error_alert_priority_get' and count(parameter)=0]"
		[Register ("lsd_error_alert_priority_get", "()I", "")]
		public static unsafe int Lsd_error_alert_priority_get ()
		{
			const string __id = "lsd_error_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_error_alert_static_category_get' and count(parameter)=0]"
		[Register ("lsd_error_alert_static_category_get", "()J", "")]
		public static unsafe long Lsd_error_alert_static_category_get ()
		{
			const string __id = "lsd_error_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_error_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.lsd_error_alert']]"
		[Register ("lsd_error_alert_type", "(JLcom/frostwire/jlibtorrent/swig/lsd_error_alert;)I", "")]
		public static unsafe int Lsd_error_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Lsd_error_alert p1)
		{
			const string __id = "lsd_error_alert_type.(JLcom/frostwire/jlibtorrent/swig/lsd_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_error_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.lsd_error_alert']]"
		[Register ("lsd_error_alert_what", "(JLcom/frostwire/jlibtorrent/swig/lsd_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Lsd_error_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Lsd_error_alert p1)
		{
			const string __id = "lsd_error_alert_what.(JLcom/frostwire/jlibtorrent/swig/lsd_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_peer_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("lsd_peer_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Lsd_peer_alert_SWIGUpcast (long p0)
		{
			const string __id = "lsd_peer_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_peer_alert_alert_type_get' and count(parameter)=0]"
		[Register ("lsd_peer_alert_alert_type_get", "()I", "")]
		public static unsafe int Lsd_peer_alert_alert_type_get ()
		{
			const string __id = "lsd_peer_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_peer_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.lsd_peer_alert']]"
		[Register ("lsd_peer_alert_category", "(JLcom/frostwire/jlibtorrent/swig/lsd_peer_alert;)J", "")]
		public static unsafe long Lsd_peer_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Lsd_peer_alert p1)
		{
			const string __id = "lsd_peer_alert_category.(JLcom/frostwire/jlibtorrent/swig/lsd_peer_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_peer_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.lsd_peer_alert']]"
		[Register ("lsd_peer_alert_message", "(JLcom/frostwire/jlibtorrent/swig/lsd_peer_alert;)Ljava/lang/String;", "")]
		public static unsafe string Lsd_peer_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Lsd_peer_alert p1)
		{
			const string __id = "lsd_peer_alert_message.(JLcom/frostwire/jlibtorrent/swig/lsd_peer_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_peer_alert_priority_get' and count(parameter)=0]"
		[Register ("lsd_peer_alert_priority_get", "()I", "")]
		public static unsafe int Lsd_peer_alert_priority_get ()
		{
			const string __id = "lsd_peer_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_peer_alert_static_category_get' and count(parameter)=0]"
		[Register ("lsd_peer_alert_static_category_get", "()J", "")]
		public static unsafe long Lsd_peer_alert_static_category_get ()
		{
			const string __id = "lsd_peer_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_peer_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.lsd_peer_alert']]"
		[Register ("lsd_peer_alert_type", "(JLcom/frostwire/jlibtorrent/swig/lsd_peer_alert;)I", "")]
		public static unsafe int Lsd_peer_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Lsd_peer_alert p1)
		{
			const string __id = "lsd_peer_alert_type.(JLcom/frostwire/jlibtorrent/swig/lsd_peer_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='lsd_peer_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.lsd_peer_alert']]"
		[Register ("lsd_peer_alert_what", "(JLcom/frostwire/jlibtorrent/swig/lsd_peer_alert;)Ljava/lang/String;", "")]
		public static unsafe string Lsd_peer_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Lsd_peer_alert p1)
		{
			const string __id = "lsd_peer_alert_what.(JLcom/frostwire/jlibtorrent/swig/lsd_peer_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='make_error_code' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("make_error_code", "(I)J", "")]
		public static unsafe long Make_error_code (int p0)
		{
			const string __id = "make_error_code.(I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='make_magnet_uri__SWIG_0' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("make_magnet_uri__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)Ljava/lang/String;", "")]
		public static unsafe string Make_magnet_uri__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "make_magnet_uri__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='make_magnet_uri__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("make_magnet_uri__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Ljava/lang/String;", "")]
		public static unsafe string Make_magnet_uri__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "make_magnet_uri__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='message_size_get' and count(parameter)=0]"
		[Register ("message_size_get", "()I", "")]
		public static unsafe int Message_size_get ()
		{
			const string __id = "message_size_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_failed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("metadata_failed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Metadata_failed_alert_SWIGUpcast (long p0)
		{
			const string __id = "metadata_failed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_failed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("metadata_failed_alert_alert_type_get", "()I", "")]
		public static unsafe int Metadata_failed_alert_alert_type_get ()
		{
			const string __id = "metadata_failed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_failed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.metadata_failed_alert']]"
		[Register ("metadata_failed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/metadata_failed_alert;)J", "")]
		public static unsafe long Metadata_failed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Metadata_failed_alert p1)
		{
			const string __id = "metadata_failed_alert_category.(JLcom/frostwire/jlibtorrent/swig/metadata_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_failed_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.metadata_failed_alert']]"
		[Register ("metadata_failed_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/metadata_failed_alert;)J", "")]
		public static unsafe long Metadata_failed_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Metadata_failed_alert p1)
		{
			const string __id = "metadata_failed_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/metadata_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_failed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.metadata_failed_alert']]"
		[Register ("metadata_failed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/metadata_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Metadata_failed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Metadata_failed_alert p1)
		{
			const string __id = "metadata_failed_alert_message.(JLcom/frostwire/jlibtorrent/swig/metadata_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_failed_alert_priority_get' and count(parameter)=0]"
		[Register ("metadata_failed_alert_priority_get", "()I", "")]
		public static unsafe int Metadata_failed_alert_priority_get ()
		{
			const string __id = "metadata_failed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_failed_alert_static_category_get' and count(parameter)=0]"
		[Register ("metadata_failed_alert_static_category_get", "()J", "")]
		public static unsafe long Metadata_failed_alert_static_category_get ()
		{
			const string __id = "metadata_failed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_failed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.metadata_failed_alert']]"
		[Register ("metadata_failed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/metadata_failed_alert;)I", "")]
		public static unsafe int Metadata_failed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Metadata_failed_alert p1)
		{
			const string __id = "metadata_failed_alert_type.(JLcom/frostwire/jlibtorrent/swig/metadata_failed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_failed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.metadata_failed_alert']]"
		[Register ("metadata_failed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/metadata_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Metadata_failed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Metadata_failed_alert p1)
		{
			const string __id = "metadata_failed_alert_what.(JLcom/frostwire/jlibtorrent/swig/metadata_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_received_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("metadata_received_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Metadata_received_alert_SWIGUpcast (long p0)
		{
			const string __id = "metadata_received_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_received_alert_alert_type_get' and count(parameter)=0]"
		[Register ("metadata_received_alert_alert_type_get", "()I", "")]
		public static unsafe int Metadata_received_alert_alert_type_get ()
		{
			const string __id = "metadata_received_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_received_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.metadata_received_alert']]"
		[Register ("metadata_received_alert_category", "(JLcom/frostwire/jlibtorrent/swig/metadata_received_alert;)J", "")]
		public static unsafe long Metadata_received_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Metadata_received_alert p1)
		{
			const string __id = "metadata_received_alert_category.(JLcom/frostwire/jlibtorrent/swig/metadata_received_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_received_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.metadata_received_alert']]"
		[Register ("metadata_received_alert_message", "(JLcom/frostwire/jlibtorrent/swig/metadata_received_alert;)Ljava/lang/String;", "")]
		public static unsafe string Metadata_received_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Metadata_received_alert p1)
		{
			const string __id = "metadata_received_alert_message.(JLcom/frostwire/jlibtorrent/swig/metadata_received_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_received_alert_priority_get' and count(parameter)=0]"
		[Register ("metadata_received_alert_priority_get", "()I", "")]
		public static unsafe int Metadata_received_alert_priority_get ()
		{
			const string __id = "metadata_received_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_received_alert_static_category_get' and count(parameter)=0]"
		[Register ("metadata_received_alert_static_category_get", "()J", "")]
		public static unsafe long Metadata_received_alert_static_category_get ()
		{
			const string __id = "metadata_received_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_received_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.metadata_received_alert']]"
		[Register ("metadata_received_alert_type", "(JLcom/frostwire/jlibtorrent/swig/metadata_received_alert;)I", "")]
		public static unsafe int Metadata_received_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Metadata_received_alert p1)
		{
			const string __id = "metadata_received_alert_type.(JLcom/frostwire/jlibtorrent/swig/metadata_received_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='metadata_received_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.metadata_received_alert']]"
		[Register ("metadata_received_alert_what", "(JLcom/frostwire/jlibtorrent/swig/metadata_received_alert;)Ljava/lang/String;", "")]
		public static unsafe string Metadata_received_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Metadata_received_alert p1)
		{
			const string __id = "metadata_received_alert_what.(JLcom/frostwire/jlibtorrent/swig/metadata_received_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='min_memory_usage' and count(parameter)=0]"
		[Register ("min_memory_usage", "()J", "")]
		public static unsafe long Min_memory_usage ()
		{
			const string __id = "min_memory_usage.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='missing_file_sizes_get' and count(parameter)=0]"
		[Register ("missing_file_sizes_get", "()I", "")]
		public static unsafe int Missing_file_sizes_get ()
		{
			const string __id = "missing_file_sizes_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='moved_permanently_get' and count(parameter)=0]"
		[Register ("moved_permanently_get", "()I", "")]
		public static unsafe int Moved_permanently_get ()
		{
			const string __id = "moved_permanently_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='moved_temporarily_get' and count(parameter)=0]"
		[Register ("moved_temporarily_get", "()I", "")]
		public static unsafe int Moved_temporarily_get ()
		{
			const string __id = "moved_temporarily_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='multiple_choices_get' and count(parameter)=0]"
		[Register ("multiple_choices_get", "()I", "")]
		public static unsafe int Multiple_choices_get ()
		{
			const string __id = "multiple_choices_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='name_for_setting' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("name_for_setting", "(I)Ljava/lang/String;", "")]
		public static unsafe string Name_for_setting (int p0)
		{
			const string __id = "name_for_setting.(I)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='need_save_resume_get' and count(parameter)=0]"
		[Register ("need_save_resume_get", "()J", "")]
		public static unsafe long Need_save_resume_get ()
		{
			const string __id = "need_save_resume_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='network_down_get' and count(parameter)=0]"
		[Register ("network_down_get", "()I", "")]
		public static unsafe int Network_down_get ()
		{
			const string __id = "network_down_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='network_reset_get' and count(parameter)=0]"
		[Register ("network_reset_get", "()I", "")]
		public static unsafe int Network_reset_get ()
		{
			const string __id = "network_reset_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='network_unreachable_get' and count(parameter)=0]"
		[Register ("network_unreachable_get", "()I", "")]
		public static unsafe int Network_unreachable_get ()
		{
			const string __id = "network_unreachable_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_add_files_listener' and count(parameter)=0]"
		[Register ("new_add_files_listener", "()J", "")]
		public static unsafe long New_add_files_listener ()
		{
			const string __id = "new_add_files_listener.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_add_piece_flags_t' and count(parameter)=0]"
		[Register ("new_add_piece_flags_t", "()J", "")]
		public static unsafe long New_add_piece_flags_t ()
		{
			const string __id = "new_add_piece_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_address__SWIG_0' and count(parameter)=0]"
		[Register ("new_address__SWIG_0", "()J", "")]
		public static unsafe long New_address__SWIG_0 ()
		{
			const string __id = "new_address__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_address__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("new_address__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/address;)J", "")]
		public static unsafe long New_address__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Address p1)
		{
			const string __id = "new_address__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/address;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_address_sha1_hash_pair__SWIG_0' and count(parameter)=0]"
		[Register ("new_address_sha1_hash_pair__SWIG_0", "()J", "")]
		public static unsafe long New_address_sha1_hash_pair__SWIG_0 ()
		{
			const string __id = "new_address_sha1_hash_pair__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_address_sha1_hash_pair__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("new_address_sha1_hash_pair__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/address;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)J", "")]
		public static unsafe long New_address_sha1_hash_pair__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Address p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "new_address_sha1_hash_pair__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/address;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_address_sha1_hash_pair__SWIG_2' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address_sha1_hash_pair']]"
		[Register ("new_address_sha1_hash_pair__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair;)J", "")]
		public static unsafe long New_address_sha1_hash_pair__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Address_sha1_hash_pair p1)
		{
			const string __id = "new_address_sha1_hash_pair__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/address_sha1_hash_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_address_sha1_hash_pair_vector' and count(parameter)=0]"
		[Register ("new_address_sha1_hash_pair_vector", "()J", "")]
		public static unsafe long New_address_sha1_hash_pair_vector ()
		{
			const string __id = "new_address_sha1_hash_pair_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_alert_category_t' and count(parameter)=0]"
		[Register ("new_alert_category_t", "()J", "")]
		public static unsafe long New_alert_category_t ()
		{
			const string __id = "new_alert_category_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_alert_notify_callback' and count(parameter)=0]"
		[Register ("new_alert_notify_callback", "()J", "")]
		public static unsafe long New_alert_notify_callback ()
		{
			const string __id = "new_alert_notify_callback.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_alert_ptr_vector' and count(parameter)=0]"
		[Register ("new_alert_ptr_vector", "()J", "")]
		public static unsafe long New_alert_ptr_vector ()
		{
			const string __id = "new_alert_ptr_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_announce_endpoint_vector' and count(parameter)=0]"
		[Register ("new_announce_endpoint_vector", "()J", "")]
		public static unsafe long New_announce_endpoint_vector ()
		{
			const string __id = "new_announce_endpoint_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_announce_entry' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("new_announce_entry", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J", "")]
		public static unsafe long New_announce_entry (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1)
		{
			const string __id = "new_announce_entry.(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_announce_entry_vector' and count(parameter)=0]"
		[Register ("new_announce_entry_vector", "()J", "")]
		public static unsafe long New_announce_entry_vector ()
		{
			const string __id = "new_announce_entry_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_bandwidth_state_flags_t' and count(parameter)=0]"
		[Register ("new_bandwidth_state_flags_t", "()J", "")]
		public static unsafe long New_bandwidth_state_flags_t ()
		{
			const string __id = "new_bandwidth_state_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_bdecode_node__SWIG_0' and count(parameter)=0]"
		[Register ("new_bdecode_node__SWIG_0", "()J", "")]
		public static unsafe long New_bdecode_node__SWIG_0 ()
		{
			const string __id = "new_bdecode_node__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_bdecode_node__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node']]"
		[Register ("new_bdecode_node__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)J", "")]
		public static unsafe long New_bdecode_node__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1)
		{
			const string __id = "new_bdecode_node__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_bitset_96' and count(parameter)=0]"
		[Register ("new_bitset_96", "()J", "")]
		public static unsafe long New_bitset_96 ()
		{
			const string __id = "new_bitset_96.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_block_info' and count(parameter)=0]"
		[Register ("new_block_info", "()J", "")]
		public static unsafe long New_block_info ()
		{
			const string __id = "new_block_info.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_block_info_vector' and count(parameter)=0]"
		[Register ("new_block_info_vector", "()J", "")]
		public static unsafe long New_block_info_vector ()
		{
			const string __id = "new_block_info_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_bloom_filter_128' and count(parameter)=0]"
		[Register ("new_bloom_filter_128", "()J", "")]
		public static unsafe long New_bloom_filter_128 ()
		{
			const string __id = "new_bloom_filter_128.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_bloom_filter_256' and count(parameter)=0]"
		[Register ("new_bloom_filter_256", "()J", "")]
		public static unsafe long New_bloom_filter_256 ()
		{
			const string __id = "new_bloom_filter_256.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_bt_peer_connection_handle' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("new_bt_peer_connection_handle", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)J", "")]
		public static unsafe long New_bt_peer_connection_handle (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "new_bt_peer_connection_handle.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_byte_const_span' and count(parameter)=0]"
		[Register ("new_byte_const_span", "()J", "")]
		public static unsafe long New_byte_const_span ()
		{
			const string __id = "new_byte_const_span.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_byte_span' and count(parameter)=0]"
		[Register ("new_byte_span", "()J", "")]
		public static unsafe long New_byte_span ()
		{
			const string __id = "new_byte_span.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_byte_vector' and count(parameter)=0]"
		[Register ("new_byte_vector", "()J", "")]
		public static unsafe long New_byte_vector ()
		{
			const string __id = "new_byte_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_byte_vectors_pair__SWIG_0' and count(parameter)=0]"
		[Register ("new_byte_vectors_pair__SWIG_0", "()J", "")]
		public static unsafe long New_byte_vectors_pair__SWIG_0 ()
		{
			const string __id = "new_byte_vectors_pair__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_byte_vectors_pair__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("new_byte_vectors_pair__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)J", "")]
		public static unsafe long New_byte_vectors_pair__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3)
		{
			const string __id = "new_byte_vectors_pair__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_byte_vectors_pair__SWIG_2' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vectors_pair']]"
		[Register ("new_byte_vectors_pair__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/byte_vectors_pair;)J", "")]
		public static unsafe long New_byte_vectors_pair__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Byte_vectors_pair p1)
		{
			const string __id = "new_byte_vectors_pair__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/byte_vectors_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_create_flags_t' and count(parameter)=0]"
		[Register ("new_create_flags_t", "()J", "")]
		public static unsafe long New_create_flags_t ()
		{
			const string __id = "new_create_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_create_torrent__SWIG_0' and count(parameter)=7 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.create_flags_t'] and parameter[7][@type='int']]"
		[Register ("new_create_torrent__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/file_storage;IIJLcom/frostwire/jlibtorrent/swig/create_flags_t;I)J", "")]
		public static unsafe long New_create_torrent__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2, int p3, long p4, global::FrostWire.Libtorrent.Swig.Create_flags_t p5, int p6)
		{
			const string __id = "new_create_torrent__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/file_storage;IIJLcom/frostwire/jlibtorrent/swig/create_flags_t;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				__args [6] = new JniArgumentValue (p6);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_create_torrent__SWIG_1' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.create_flags_t']]"
		[Register ("new_create_torrent__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/file_storage;IIJLcom/frostwire/jlibtorrent/swig/create_flags_t;)J", "")]
		public static unsafe long New_create_torrent__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2, int p3, long p4, global::FrostWire.Libtorrent.Swig.Create_flags_t p5)
		{
			const string __id = "new_create_torrent__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/file_storage;IIJLcom/frostwire/jlibtorrent/swig/create_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_create_torrent__SWIG_2' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("new_create_torrent__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/file_storage;II)J", "")]
		public static unsafe long New_create_torrent__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2, int p3)
		{
			const string __id = "new_create_torrent__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/file_storage;II)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_create_torrent__SWIG_3' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage'] and parameter[3][@type='int']]"
		[Register ("new_create_torrent__SWIG_3", "(JLcom/frostwire/jlibtorrent/swig/file_storage;I)J", "")]
		public static unsafe long New_create_torrent__SWIG_3 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1, int p2)
		{
			const string __id = "new_create_torrent__SWIG_3.(JLcom/frostwire/jlibtorrent/swig/file_storage;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_create_torrent__SWIG_4' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("new_create_torrent__SWIG_4", "(JLcom/frostwire/jlibtorrent/swig/file_storage;)J", "")]
		public static unsafe long New_create_torrent__SWIG_4 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1)
		{
			const string __id = "new_create_torrent__SWIG_4.(JLcom/frostwire/jlibtorrent/swig/file_storage;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_create_torrent__SWIG_5' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("new_create_torrent__SWIG_5", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J", "")]
		public static unsafe long New_create_torrent__SWIG_5 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "new_create_torrent__SWIG_5.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_deadline_flags_t' and count(parameter)=0]"
		[Register ("new_deadline_flags_t", "()J", "")]
		public static unsafe long New_deadline_flags_t ()
		{
			const string __id = "new_deadline_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_dht_lookup' and count(parameter)=0]"
		[Register ("new_dht_lookup", "()J", "")]
		public static unsafe long New_dht_lookup ()
		{
			const string __id = "new_dht_lookup.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_dht_lookup_vector' and count(parameter)=0]"
		[Register ("new_dht_lookup_vector", "()J", "")]
		public static unsafe long New_dht_lookup_vector ()
		{
			const string __id = "new_dht_lookup_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_dht_routing_bucket' and count(parameter)=0]"
		[Register ("new_dht_routing_bucket", "()J", "")]
		public static unsafe long New_dht_routing_bucket ()
		{
			const string __id = "new_dht_routing_bucket.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_dht_routing_bucket_vector' and count(parameter)=0]"
		[Register ("new_dht_routing_bucket_vector", "()J", "")]
		public static unsafe long New_dht_routing_bucket_vector ()
		{
			const string __id = "new_dht_routing_bucket_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_dht_settings' and count(parameter)=0]"
		[Register ("new_dht_settings", "()J", "")]
		public static unsafe long New_dht_settings ()
		{
			const string __id = "new_dht_settings.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_dht_state' and count(parameter)=0]"
		[Register ("new_dht_state", "()J", "")]
		public static unsafe long New_dht_state ()
		{
			const string __id = "new_dht_state.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_entry__SWIG_0' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_entry_map']]"
		[Register ("new_entry__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/string_entry_map;)J", "")]
		public static unsafe long New_entry__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.String_entry_map p1)
		{
			const string __id = "new_entry__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/string_entry_map;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_entry__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_const_span']]"
		[Register ("new_entry__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/byte_const_span;)J", "")]
		public static unsafe long New_entry__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Byte_const_span p1)
		{
			const string __id = "new_entry__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/byte_const_span;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_entry__SWIG_2' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("new_entry__SWIG_2", "(Ljava/lang/String;)J", "")]
		public static unsafe long New_entry__SWIG_2 (string p0)
		{
			const string __id = "new_entry__SWIG_2.(Ljava/lang/String;)J";
			IntPtr native_p0 = JNIEnv.NewString (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_entry__SWIG_3' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry_vector']]"
		[Register ("new_entry__SWIG_3", "(JLcom/frostwire/jlibtorrent/swig/entry_vector;)J", "")]
		public static unsafe long New_entry__SWIG_3 (long p0, global::FrostWire.Libtorrent.Swig.Entry_vector p1)
		{
			const string __id = "new_entry__SWIG_3.(JLcom/frostwire/jlibtorrent/swig/entry_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_entry__SWIG_4' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("new_entry__SWIG_4", "(J)J", "")]
		public static unsafe long New_entry__SWIG_4 (long p0)
		{
			const string __id = "new_entry__SWIG_4.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_entry__SWIG_5' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("new_entry__SWIG_5", "(I)J", "")]
		public static unsafe long New_entry__SWIG_5 (int p0)
		{
			const string __id = "new_entry__SWIG_5.(I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_entry__SWIG_6' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("new_entry__SWIG_6", "(JLcom/frostwire/jlibtorrent/swig/entry;)J", "")]
		public static unsafe long New_entry__SWIG_6 (long p0, global::FrostWire.Libtorrent.Swig.Entry p1)
		{
			const string __id = "new_entry__SWIG_6.(JLcom/frostwire/jlibtorrent/swig/entry;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_entry__SWIG_7' and count(parameter)=0]"
		[Register ("new_entry__SWIG_7", "()J", "")]
		public static unsafe long New_entry__SWIG_7 ()
		{
			const string __id = "new_entry__SWIG_7.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_entry_vector' and count(parameter)=0]"
		[Register ("new_entry_vector", "()J", "")]
		public static unsafe long New_entry_vector ()
		{
			const string __id = "new_entry_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_error_code' and count(parameter)=0]"
		[Register ("new_error_code", "()J", "")]
		public static unsafe long New_error_code ()
		{
			const string __id = "new_error_code.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_file_flags_t' and count(parameter)=0]"
		[Register ("new_file_flags_t", "()J", "")]
		public static unsafe long New_file_flags_t ()
		{
			const string __id = "new_file_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_file_index_string_map__SWIG_0' and count(parameter)=0]"
		[Register ("new_file_index_string_map__SWIG_0", "()J", "")]
		public static unsafe long New_file_index_string_map__SWIG_0 ()
		{
			const string __id = "new_file_index_string_map__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_file_index_string_map__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_index_string_map']]"
		[Register ("new_file_index_string_map__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;)J", "")]
		public static unsafe long New_file_index_string_map__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.File_index_string_map p1)
		{
			const string __id = "new_file_index_string_map__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/file_index_string_map;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_file_index_vector' and count(parameter)=0]"
		[Register ("new_file_index_vector", "()J", "")]
		public static unsafe long New_file_index_vector ()
		{
			const string __id = "new_file_index_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_file_slice' and count(parameter)=0]"
		[Register ("new_file_slice", "()J", "")]
		public static unsafe long New_file_slice ()
		{
			const string __id = "new_file_slice.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_file_slice_vector' and count(parameter)=0]"
		[Register ("new_file_slice_vector", "()J", "")]
		public static unsafe long New_file_slice_vector ()
		{
			const string __id = "new_file_slice_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_file_storage__SWIG_0' and count(parameter)=0]"
		[Register ("new_file_storage__SWIG_0", "()J", "")]
		public static unsafe long New_file_storage__SWIG_0 ()
		{
			const string __id = "new_file_storage__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_file_storage__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("new_file_storage__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/file_storage;)J", "")]
		public static unsafe long New_file_storage__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.File_storage p1)
		{
			const string __id = "new_file_storage__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/file_storage;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_int64_vector' and count(parameter)=0]"
		[Register ("new_int64_vector", "()J", "")]
		public static unsafe long New_int64_vector ()
		{
			const string __id = "new_int64_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_int_vector' and count(parameter)=0]"
		[Register ("new_int_vector", "()J", "")]
		public static unsafe long New_int_vector ()
		{
			const string __id = "new_int_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_ip_filter' and count(parameter)=0]"
		[Register ("new_ip_filter", "()J", "")]
		public static unsafe long New_ip_filter ()
		{
			const string __id = "new_ip_filter.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_ip_interface' and count(parameter)=0]"
		[Register ("new_ip_interface", "()J", "")]
		public static unsafe long New_ip_interface ()
		{
			const string __id = "new_ip_interface.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_ip_interface_vector' and count(parameter)=0]"
		[Register ("new_ip_interface_vector", "()J", "")]
		public static unsafe long New_ip_interface_vector ()
		{
			const string __id = "new_ip_interface_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_ip_route' and count(parameter)=0]"
		[Register ("new_ip_route", "()J", "")]
		public static unsafe long New_ip_route ()
		{
			const string __id = "new_ip_route.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_ip_route_vector' and count(parameter)=0]"
		[Register ("new_ip_route_vector", "()J", "")]
		public static unsafe long New_ip_route_vector ()
		{
			const string __id = "new_ip_route_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_partial_piece_info' and count(parameter)=0]"
		[Register ("new_partial_piece_info", "()J", "")]
		public static unsafe long New_partial_piece_info ()
		{
			const string __id = "new_partial_piece_info.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_partial_piece_info_vector' and count(parameter)=0]"
		[Register ("new_partial_piece_info_vector", "()J", "")]
		public static unsafe long New_partial_piece_info_vector ()
		{
			const string __id = "new_partial_piece_info_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_pause_flags_t' and count(parameter)=0]"
		[Register ("new_pause_flags_t", "()J", "")]
		public static unsafe long New_pause_flags_t ()
		{
			const string __id = "new_pause_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_peer_class_info' and count(parameter)=0]"
		[Register ("new_peer_class_info", "()J", "")]
		public static unsafe long New_peer_class_info ()
		{
			const string __id = "new_peer_class_info.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_peer_class_type_filter' and count(parameter)=0]"
		[Register ("new_peer_class_type_filter", "()J", "")]
		public static unsafe long New_peer_class_type_filter ()
		{
			const string __id = "new_peer_class_type_filter.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_peer_flags_t' and count(parameter)=0]"
		[Register ("new_peer_flags_t", "()J", "")]
		public static unsafe long New_peer_flags_t ()
		{
			const string __id = "new_peer_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_peer_info' and count(parameter)=0]"
		[Register ("new_peer_info", "()J", "")]
		public static unsafe long New_peer_info ()
		{
			const string __id = "new_peer_info.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_peer_info_vector' and count(parameter)=0]"
		[Register ("new_peer_info_vector", "()J", "")]
		public static unsafe long New_peer_info_vector ()
		{
			const string __id = "new_peer_info_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_peer_request' and count(parameter)=0]"
		[Register ("new_peer_request", "()J", "")]
		public static unsafe long New_peer_request ()
		{
			const string __id = "new_peer_request.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_peer_source_flags_t' and count(parameter)=0]"
		[Register ("new_peer_source_flags_t", "()J", "")]
		public static unsafe long New_peer_source_flags_t ()
		{
			const string __id = "new_peer_source_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_pex_flags_t' and count(parameter)=0]"
		[Register ("new_pex_flags_t", "()J", "")]
		public static unsafe long New_pex_flags_t ()
		{
			const string __id = "new_pex_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_picker_flags_t' and count(parameter)=0]"
		[Register ("new_picker_flags_t", "()J", "")]
		public static unsafe long New_picker_flags_t ()
		{
			const string __id = "new_picker_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_piece_index_bitfield__SWIG_0' and count(parameter)=0]"
		[Register ("new_piece_index_bitfield__SWIG_0", "()J", "")]
		public static unsafe long New_piece_index_bitfield__SWIG_0 ()
		{
			const string __id = "new_piece_index_bitfield__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_piece_index_bitfield__SWIG_1' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("new_piece_index_bitfield__SWIG_1", "(I)J", "")]
		public static unsafe long New_piece_index_bitfield__SWIG_1 (int p0)
		{
			const string __id = "new_piece_index_bitfield__SWIG_1.(I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_piece_index_bitfield__SWIG_2' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='boolean']]"
		[Register ("new_piece_index_bitfield__SWIG_2", "(IZ)J", "")]
		public static unsafe long New_piece_index_bitfield__SWIG_2 (int p0, bool p1)
		{
			const string __id = "new_piece_index_bitfield__SWIG_2.(IZ)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_piece_index_bitfield__SWIG_3' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("new_piece_index_bitfield__SWIG_3", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)J", "")]
		public static unsafe long New_piece_index_bitfield__SWIG_3 (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1)
		{
			const string __id = "new_piece_index_bitfield__SWIG_3.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_piece_index_int_pair__SWIG_0' and count(parameter)=0]"
		[Register ("new_piece_index_int_pair__SWIG_0", "()J", "")]
		public static unsafe long New_piece_index_int_pair__SWIG_0 ()
		{
			const string __id = "new_piece_index_int_pair__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_piece_index_int_pair__SWIG_1' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("new_piece_index_int_pair__SWIG_1", "(II)J", "")]
		public static unsafe long New_piece_index_int_pair__SWIG_1 (int p0, int p1)
		{
			const string __id = "new_piece_index_int_pair__SWIG_1.(II)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_piece_index_int_pair__SWIG_2' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair']]"
		[Register ("new_piece_index_int_pair__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair;)J", "")]
		public static unsafe long New_piece_index_int_pair__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair p1)
		{
			const string __id = "new_piece_index_int_pair__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_piece_index_int_pair_vector' and count(parameter)=0]"
		[Register ("new_piece_index_int_pair_vector", "()J", "")]
		public static unsafe long New_piece_index_int_pair_vector ()
		{
			const string __id = "new_piece_index_int_pair_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_piece_index_vector' and count(parameter)=0]"
		[Register ("new_piece_index_vector", "()J", "")]
		public static unsafe long New_piece_index_vector ()
		{
			const string __id = "new_piece_index_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_port_filter' and count(parameter)=0]"
		[Register ("new_port_filter", "()J", "")]
		public static unsafe long New_port_filter ()
		{
			const string __id = "new_port_filter.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_port_mapping_t_vector' and count(parameter)=0]"
		[Register ("new_port_mapping_t_vector", "()J", "")]
		public static unsafe long New_port_mapping_t_vector ()
		{
			const string __id = "new_port_mapping_t_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_posix_stat_t' and count(parameter)=0]"
		[Register ("new_posix_stat_t", "()J", "")]
		public static unsafe long New_posix_stat_t ()
		{
			const string __id = "new_posix_stat_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_posix_wrapper' and count(parameter)=0]"
		[Register ("new_posix_wrapper", "()J", "")]
		public static unsafe long New_posix_wrapper ()
		{
			const string __id = "new_posix_wrapper.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_reannounce_flags_t' and count(parameter)=0]"
		[Register ("new_reannounce_flags_t", "()J", "")]
		public static unsafe long New_reannounce_flags_t ()
		{
			const string __id = "new_reannounce_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_remove_flags_t' and count(parameter)=0]"
		[Register ("new_remove_flags_t", "()J", "")]
		public static unsafe long New_remove_flags_t ()
		{
			const string __id = "new_remove_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_reopen_network_flags_t' and count(parameter)=0]"
		[Register ("new_reopen_network_flags_t", "()J", "")]
		public static unsafe long New_reopen_network_flags_t ()
		{
			const string __id = "new_reopen_network_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_resume_data_flags_t' and count(parameter)=0]"
		[Register ("new_resume_data_flags_t", "()J", "")]
		public static unsafe long New_resume_data_flags_t ()
		{
			const string __id = "new_resume_data_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_save_state_flags_t' and count(parameter)=0]"
		[Register ("new_save_state_flags_t", "()J", "")]
		public static unsafe long New_save_state_flags_t ()
		{
			const string __id = "new_save_state_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_session__SWIG_0' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_params']]"
		[Register ("new_session__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/session_params;)J", "")]
		public static unsafe long New_session__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Session_params p1)
		{
			const string __id = "new_session__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/session_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_session__SWIG_1' and count(parameter)=0]"
		[Register ("new_session__SWIG_1", "()J", "")]
		public static unsafe long New_session__SWIG_1 ()
		{
			const string __id = "new_session__SWIG_1.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_session__SWIG_2' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.settings_pack'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.session_flags_t']]"
		[Register ("new_session__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/settings_pack;JLcom/frostwire/jlibtorrent/swig/session_flags_t;)J", "")]
		public static unsafe long New_session__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Settings_pack p1, long p2, global::FrostWire.Libtorrent.Swig.Session_flags_t p3)
		{
			const string __id = "new_session__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/settings_pack;JLcom/frostwire/jlibtorrent/swig/session_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_session__SWIG_3' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.settings_pack']]"
		[Register ("new_session__SWIG_3", "(JLcom/frostwire/jlibtorrent/swig/settings_pack;)J", "")]
		public static unsafe long New_session__SWIG_3 (long p0, global::FrostWire.Libtorrent.Swig.Settings_pack p1)
		{
			const string __id = "new_session__SWIG_3.(JLcom/frostwire/jlibtorrent/swig/settings_pack;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_session__SWIG_4' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session']]"
		[Register ("new_session__SWIG_4", "(JLcom/frostwire/jlibtorrent/swig/session;)J", "")]
		public static unsafe long New_session__SWIG_4 (long p0, global::FrostWire.Libtorrent.Swig.Session p1)
		{
			const string __id = "new_session__SWIG_4.(JLcom/frostwire/jlibtorrent/swig/session;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_session_flags_t' and count(parameter)=0]"
		[Register ("new_session_flags_t", "()J", "")]
		public static unsafe long New_session_flags_t ()
		{
			const string __id = "new_session_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_session_handle__SWIG_0' and count(parameter)=0]"
		[Register ("new_session_handle__SWIG_0", "()J", "")]
		public static unsafe long New_session_handle__SWIG_0 ()
		{
			const string __id = "new_session_handle__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_session_handle__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("new_session_handle__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)J", "")]
		public static unsafe long New_session_handle__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "new_session_handle__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/session_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_session_params__SWIG_0' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.settings_pack']]"
		[Register ("new_session_params__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/settings_pack;)J", "")]
		public static unsafe long New_session_params__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Settings_pack p1)
		{
			const string __id = "new_session_params__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/settings_pack;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_session_params__SWIG_1' and count(parameter)=0]"
		[Register ("new_session_params__SWIG_1", "()J", "")]
		public static unsafe long New_session_params__SWIG_1 ()
		{
			const string __id = "new_session_params__SWIG_1.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_session_params__SWIG_2' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_params']]"
		[Register ("new_session_params__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/session_params;)J", "")]
		public static unsafe long New_session_params__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Session_params p1)
		{
			const string __id = "new_session_params__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/session_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_session_proxy__SWIG_0' and count(parameter)=0]"
		[Register ("new_session_proxy__SWIG_0", "()J", "")]
		public static unsafe long New_session_proxy__SWIG_0 ()
		{
			const string __id = "new_session_proxy__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_session_proxy__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_proxy']]"
		[Register ("new_session_proxy__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/session_proxy;)J", "")]
		public static unsafe long New_session_proxy__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Session_proxy p1)
		{
			const string __id = "new_session_proxy__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/session_proxy;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_set_piece_hashes_listener' and count(parameter)=0]"
		[Register ("new_set_piece_hashes_listener", "()J", "")]
		public static unsafe long New_set_piece_hashes_listener ()
		{
			const string __id = "new_set_piece_hashes_listener.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_settings_pack__SWIG_0' and count(parameter)=0]"
		[Register ("new_settings_pack__SWIG_0", "()J", "")]
		public static unsafe long New_settings_pack__SWIG_0 ()
		{
			const string __id = "new_settings_pack__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_settings_pack__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.settings_pack']]"
		[Register ("new_settings_pack__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/settings_pack;)J", "")]
		public static unsafe long New_settings_pack__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Settings_pack p1)
		{
			const string __id = "new_settings_pack__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/settings_pack;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_sha1_hash__SWIG_0' and count(parameter)=0]"
		[Register ("new_sha1_hash__SWIG_0", "()J", "")]
		public static unsafe long New_sha1_hash__SWIG_0 ()
		{
			const string __id = "new_sha1_hash__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_sha1_hash__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("new_sha1_hash__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)J", "")]
		public static unsafe long New_sha1_hash__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash p1)
		{
			const string __id = "new_sha1_hash__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_sha1_hash__SWIG_2' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("new_sha1_hash__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J", "")]
		public static unsafe long New_sha1_hash__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Byte_vector p1)
		{
			const string __id = "new_sha1_hash__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/byte_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_sha1_hash_udp_endpoint_pair__SWIG_0' and count(parameter)=0]"
		[Register ("new_sha1_hash_udp_endpoint_pair__SWIG_0", "()J", "")]
		public static unsafe long New_sha1_hash_udp_endpoint_pair__SWIG_0 ()
		{
			const string __id = "new_sha1_hash_udp_endpoint_pair__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_sha1_hash_udp_endpoint_pair__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.udp_endpoint']]"
		[Register ("new_sha1_hash_udp_endpoint_pair__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;)J", "")]
		public static unsafe long New_sha1_hash_udp_endpoint_pair__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash p1, long p2, global::FrostWire.Libtorrent.Swig.Udp_endpoint p3)
		{
			const string __id = "new_sha1_hash_udp_endpoint_pair__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/sha1_hash;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_sha1_hash_udp_endpoint_pair__SWIG_2' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair']]"
		[Register ("new_sha1_hash_udp_endpoint_pair__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair;)J", "")]
		public static unsafe long New_sha1_hash_udp_endpoint_pair__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair p1)
		{
			const string __id = "new_sha1_hash_udp_endpoint_pair__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_sha1_hash_udp_endpoint_pair_vector' and count(parameter)=0]"
		[Register ("new_sha1_hash_udp_endpoint_pair_vector", "()J", "")]
		public static unsafe long New_sha1_hash_udp_endpoint_pair_vector ()
		{
			const string __id = "new_sha1_hash_udp_endpoint_pair_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_sha1_hash_vector' and count(parameter)=0]"
		[Register ("new_sha1_hash_vector", "()J", "")]
		public static unsafe long New_sha1_hash_vector ()
		{
			const string __id = "new_sha1_hash_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_stats_metric' and count(parameter)=0]"
		[Register ("new_stats_metric", "()J", "")]
		public static unsafe long New_stats_metric ()
		{
			const string __id = "new_stats_metric.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_stats_metric_vector' and count(parameter)=0]"
		[Register ("new_stats_metric_vector", "()J", "")]
		public static unsafe long New_stats_metric_vector ()
		{
			const string __id = "new_stats_metric_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_status_flags_t' and count(parameter)=0]"
		[Register ("new_status_flags_t", "()J", "")]
		public static unsafe long New_status_flags_t ()
		{
			const string __id = "new_status_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_entry_map__SWIG_0' and count(parameter)=0]"
		[Register ("new_string_entry_map__SWIG_0", "()J", "")]
		public static unsafe long New_string_entry_map__SWIG_0 ()
		{
			const string __id = "new_string_entry_map__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_entry_map__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_entry_map']]"
		[Register ("new_string_entry_map__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/string_entry_map;)J", "")]
		public static unsafe long New_string_entry_map__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.String_entry_map p1)
		{
			const string __id = "new_string_entry_map__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/string_entry_map;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_int_pair__SWIG_0' and count(parameter)=0]"
		[Register ("new_string_int_pair__SWIG_0", "()J", "")]
		public static unsafe long New_string_int_pair__SWIG_0 ()
		{
			const string __id = "new_string_int_pair__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_int_pair__SWIG_1' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("new_string_int_pair__SWIG_1", "(Ljava/lang/String;I)J", "")]
		public static unsafe long New_string_int_pair__SWIG_1 (string p0, int p1)
		{
			const string __id = "new_string_int_pair__SWIG_1.(Ljava/lang/String;I)J";
			IntPtr native_p0 = JNIEnv.NewString (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_int_pair__SWIG_2' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_int_pair']]"
		[Register ("new_string_int_pair__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/string_int_pair;)J", "")]
		public static unsafe long New_string_int_pair__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.String_int_pair p1)
		{
			const string __id = "new_string_int_pair__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/string_int_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_int_pair_vector' and count(parameter)=0]"
		[Register ("new_string_int_pair_vector", "()J", "")]
		public static unsafe long New_string_int_pair_vector ()
		{
			const string __id = "new_string_int_pair_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_long_map__SWIG_0' and count(parameter)=0]"
		[Register ("new_string_long_map__SWIG_0", "()J", "")]
		public static unsafe long New_string_long_map__SWIG_0 ()
		{
			const string __id = "new_string_long_map__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_long_map__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_long_map']]"
		[Register ("new_string_long_map__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/string_long_map;)J", "")]
		public static unsafe long New_string_long_map__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.String_long_map p1)
		{
			const string __id = "new_string_long_map__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/string_long_map;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_string_pair__SWIG_0' and count(parameter)=0]"
		[Register ("new_string_string_pair__SWIG_0", "()J", "")]
		public static unsafe long New_string_string_pair__SWIG_0 ()
		{
			const string __id = "new_string_string_pair__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_string_pair__SWIG_1' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("new_string_string_pair__SWIG_1", "(Ljava/lang/String;Ljava/lang/String;)J", "")]
		public static unsafe long New_string_string_pair__SWIG_1 (string p0, string p1)
		{
			const string __id = "new_string_string_pair__SWIG_1.(Ljava/lang/String;Ljava/lang/String;)J";
			IntPtr native_p0 = JNIEnv.NewString (p0);
			IntPtr native_p1 = JNIEnv.NewString (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_string_pair__SWIG_2' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_string_pair']]"
		[Register ("new_string_string_pair__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/string_string_pair;)J", "")]
		public static unsafe long New_string_string_pair__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.String_string_pair p1)
		{
			const string __id = "new_string_string_pair__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/string_string_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_string_pair_vector' and count(parameter)=0]"
		[Register ("new_string_string_pair_vector", "()J", "")]
		public static unsafe long New_string_string_pair_vector ()
		{
			const string __id = "new_string_string_pair_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_vector' and count(parameter)=0]"
		[Register ("new_string_vector", "()J", "")]
		public static unsafe long New_string_vector ()
		{
			const string __id = "new_string_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_view' and count(parameter)=0]"
		[Register ("new_string_view", "()J", "")]
		public static unsafe long New_string_view ()
		{
			const string __id = "new_string_view.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_view_bdecode_node_pair__SWIG_0' and count(parameter)=0]"
		[Register ("new_string_view_bdecode_node_pair__SWIG_0", "()J", "")]
		public static unsafe long New_string_view_bdecode_node_pair__SWIG_0 ()
		{
			const string __id = "new_string_view_bdecode_node_pair__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_view_bdecode_node_pair__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_view'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.bdecode_node']]"
		[Register ("new_string_view_bdecode_node_pair__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/string_view;JLcom/frostwire/jlibtorrent/swig/bdecode_node;)J", "")]
		public static unsafe long New_string_view_bdecode_node_pair__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.String_view p1, long p2, global::FrostWire.Libtorrent.Swig.Bdecode_node p3)
		{
			const string __id = "new_string_view_bdecode_node_pair__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/string_view;JLcom/frostwire/jlibtorrent/swig/bdecode_node;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_string_view_bdecode_node_pair__SWIG_2' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_view_bdecode_node_pair']]"
		[Register ("new_string_view_bdecode_node_pair__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/string_view_bdecode_node_pair;)J", "")]
		public static unsafe long New_string_view_bdecode_node_pair__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.String_view_bdecode_node_pair p1)
		{
			const string __id = "new_string_view_bdecode_node_pair__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/string_view_bdecode_node_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_swig_plugin' and count(parameter)=0]"
		[Register ("new_swig_plugin", "()J", "")]
		public static unsafe long New_swig_plugin ()
		{
			const string __id = "new_swig_plugin.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_tcp_endpoint__SWIG_0' and count(parameter)=0]"
		[Register ("new_tcp_endpoint__SWIG_0", "()J", "")]
		public static unsafe long New_tcp_endpoint__SWIG_0 ()
		{
			const string __id = "new_tcp_endpoint__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_tcp_endpoint__SWIG_1' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address'] and parameter[3][@type='int']]"
		[Register ("new_tcp_endpoint__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/address;I)J", "")]
		public static unsafe long New_tcp_endpoint__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Address p1, int p2)
		{
			const string __id = "new_tcp_endpoint__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/address;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_tcp_endpoint__SWIG_2' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint']]"
		[Register ("new_tcp_endpoint__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)J", "")]
		public static unsafe long New_tcp_endpoint__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Tcp_endpoint p1)
		{
			const string __id = "new_tcp_endpoint__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_tcp_endpoint_vector' and count(parameter)=0]"
		[Register ("new_tcp_endpoint_vector", "()J", "")]
		public static unsafe long New_tcp_endpoint_vector ()
		{
			const string __id = "new_tcp_endpoint_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_torrent_flags_t' and count(parameter)=0]"
		[Register ("new_torrent_flags_t", "()J", "")]
		public static unsafe long New_torrent_flags_t ()
		{
			const string __id = "new_torrent_flags_t.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_torrent_handle_vector' and count(parameter)=0]"
		[Register ("new_torrent_handle_vector", "()J", "")]
		public static unsafe long New_torrent_handle_vector ()
		{
			const string __id = "new_torrent_handle_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_torrent_info__SWIG_0' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("new_torrent_info__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J", "")]
		public static unsafe long New_torrent_info__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "new_torrent_info__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_torrent_info__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("new_torrent_info__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)J", "")]
		public static unsafe long New_torrent_info__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash p1)
		{
			const string __id = "new_torrent_info__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_torrent_info__SWIG_2' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("new_torrent_info__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;JLcom/frostwire/jlibtorrent/swig/error_code;)J", "")]
		public static unsafe long New_torrent_info__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "new_torrent_info__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;JLcom/frostwire/jlibtorrent/swig/error_code;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_torrent_info__SWIG_3' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='long'] and parameter[3][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("new_torrent_info__SWIG_3", "(Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/error_code;)J", "")]
		public static unsafe long New_torrent_info__SWIG_3 (string p0, long p1, global::FrostWire.Libtorrent.Swig.Error_code p2)
		{
			const string __id = "new_torrent_info__SWIG_3.(Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/error_code;)J";
			IntPtr native_p0 = JNIEnv.NewString (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue ((p2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p2).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_torrent_info__SWIG_4' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='int'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("new_torrent_info__SWIG_4", "(JIJLcom/frostwire/jlibtorrent/swig/error_code;)J", "")]
		public static unsafe long New_torrent_info__SWIG_4 (long p0, int p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "new_torrent_info__SWIG_4.(JIJLcom/frostwire/jlibtorrent/swig/error_code;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_torrent_status__SWIG_0' and count(parameter)=0]"
		[Register ("new_torrent_status__SWIG_0", "()J", "")]
		public static unsafe long New_torrent_status__SWIG_0 ()
		{
			const string __id = "new_torrent_status__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_torrent_status__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("new_torrent_status__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long New_torrent_status__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "new_torrent_status__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_torrent_status_vector' and count(parameter)=0]"
		[Register ("new_torrent_status_vector", "()J", "")]
		public static unsafe long New_torrent_status_vector ()
		{
			const string __id = "new_torrent_status_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_udp_endpoint__SWIG_0' and count(parameter)=0]"
		[Register ("new_udp_endpoint__SWIG_0", "()J", "")]
		public static unsafe long New_udp_endpoint__SWIG_0 ()
		{
			const string __id = "new_udp_endpoint__SWIG_0.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_udp_endpoint__SWIG_1' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address'] and parameter[3][@type='int']]"
		[Register ("new_udp_endpoint__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/address;I)J", "")]
		public static unsafe long New_udp_endpoint__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Address p1, int p2)
		{
			const string __id = "new_udp_endpoint__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/address;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_udp_endpoint__SWIG_2' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_endpoint']]"
		[Register ("new_udp_endpoint__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/udp_endpoint;)J", "")]
		public static unsafe long New_udp_endpoint__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Udp_endpoint p1)
		{
			const string __id = "new_udp_endpoint__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/udp_endpoint;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_udp_endpoint_vector' and count(parameter)=0]"
		[Register ("new_udp_endpoint_vector", "()J", "")]
		public static unsafe long New_udp_endpoint_vector ()
		{
			const string __id = "new_udp_endpoint_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_web_seed_entry__SWIG_0' and count(parameter)=5 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.string_string_pair_vector']]"
		[Register ("new_web_seed_entry__SWIG_0", "(Ljava/lang/String;ILjava/lang/String;JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)J", "")]
		public static unsafe long New_web_seed_entry__SWIG_0 (string p0, int p1, string p2, long p3, global::FrostWire.Libtorrent.Swig.String_string_pair_vector p4)
		{
			const string __id = "new_web_seed_entry__SWIG_0.(Ljava/lang/String;ILjava/lang/String;JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)J";
			IntPtr native_p0 = JNIEnv.NewString (p0);
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_web_seed_entry__SWIG_1' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String']]"
		[Register ("new_web_seed_entry__SWIG_1", "(Ljava/lang/String;ILjava/lang/String;)J", "")]
		public static unsafe long New_web_seed_entry__SWIG_1 (string p0, int p1, string p2)
		{
			const string __id = "new_web_seed_entry__SWIG_1.(Ljava/lang/String;ILjava/lang/String;)J";
			IntPtr native_p0 = JNIEnv.NewString (p0);
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_web_seed_entry__SWIG_2' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("new_web_seed_entry__SWIG_2", "(Ljava/lang/String;I)J", "")]
		public static unsafe long New_web_seed_entry__SWIG_2 (string p0, int p1)
		{
			const string __id = "new_web_seed_entry__SWIG_2.(Ljava/lang/String;I)J";
			IntPtr native_p0 = JNIEnv.NewString (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='new_web_seed_entry_vector' and count(parameter)=0]"
		[Register ("new_web_seed_entry_vector", "()J", "")]
		public static unsafe long New_web_seed_entry_vector ()
		{
			const string __id = "new_web_seed_entry_vector.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_buffer_space_get' and count(parameter)=0]"
		[Register ("no_buffer_space_get", "()I", "")]
		public static unsafe int No_buffer_space_get ()
		{
			const string __id = "no_buffer_space_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_child_process_get' and count(parameter)=0]"
		[Register ("no_child_process_get", "()I", "")]
		public static unsafe int No_child_process_get ()
		{
			const string __id = "no_child_process_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_content_get' and count(parameter)=0]"
		[Register ("no_content_get", "()I", "")]
		public static unsafe int No_content_get ()
		{
			const string __id = "no_content_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_entropy_get' and count(parameter)=0]"
		[Register ("no_entropy_get", "()I", "")]
		public static unsafe int No_entropy_get ()
		{
			const string __id = "no_entropy_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_i2p_endpoint_get' and count(parameter)=0]"
		[Register ("no_i2p_endpoint_get", "()I", "")]
		public static unsafe int No_i2p_endpoint_get ()
		{
			const string __id = "no_i2p_endpoint_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_i2p_router_get' and count(parameter)=0]"
		[Register ("no_i2p_router_get", "()I", "")]
		public static unsafe int No_i2p_router_get ()
		{
			const string __id = "no_i2p_router_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_link_get' and count(parameter)=0]"
		[Register ("no_link_get", "()I", "")]
		public static unsafe int No_link_get ()
		{
			const string __id = "no_link_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_lock_available_get' and count(parameter)=0]"
		[Register ("no_lock_available_get", "()I", "")]
		public static unsafe int No_lock_available_get ()
		{
			const string __id = "no_lock_available_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_message_available_get' and count(parameter)=0]"
		[Register ("no_message_available_get", "()I", "")]
		public static unsafe int No_message_available_get ()
		{
			const string __id = "no_message_available_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_message_get' and count(parameter)=0]"
		[Register ("no_message_get", "()I", "")]
		public static unsafe int No_message_get ()
		{
			const string __id = "no_message_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_protocol_option_get' and count(parameter)=0]"
		[Register ("no_protocol_option_get", "()I", "")]
		public static unsafe int No_protocol_option_get ()
		{
			const string __id = "no_protocol_option_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_space_on_device_get' and count(parameter)=0]"
		[Register ("no_space_on_device_get", "()I", "")]
		public static unsafe int No_space_on_device_get ()
		{
			const string __id = "no_space_on_device_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_stream_resources_get' and count(parameter)=0]"
		[Register ("no_stream_resources_get", "()I", "")]
		public static unsafe int No_stream_resources_get ()
		{
			const string __id = "no_stream_resources_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_such_device_get' and count(parameter)=0]"
		[Register ("no_such_device_get", "()I", "")]
		public static unsafe int No_such_device_get ()
		{
			const string __id = "no_such_device_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_such_device_or_address_get' and count(parameter)=0]"
		[Register ("no_such_device_or_address_get", "()I", "")]
		public static unsafe int No_such_device_or_address_get ()
		{
			const string __id = "no_such_device_or_address_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_such_file_or_directory_get' and count(parameter)=0]"
		[Register ("no_such_file_or_directory_get", "()I", "")]
		public static unsafe int No_such_file_or_directory_get ()
		{
			const string __id = "no_such_file_or_directory_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='no_such_process_get' and count(parameter)=0]"
		[Register ("no_such_process_get", "()I", "")]
		public static unsafe int No_such_process_get ()
		{
			const string __id = "no_such_process_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='not_a_directory_get' and count(parameter)=0]"
		[Register ("not_a_directory_get", "()I", "")]
		public static unsafe int Not_a_directory_get ()
		{
			const string __id = "not_a_directory_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='not_a_socket_get' and count(parameter)=0]"
		[Register ("not_a_socket_get", "()I", "")]
		public static unsafe int Not_a_socket_get ()
		{
			const string __id = "not_a_socket_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='not_a_stream_get' and count(parameter)=0]"
		[Register ("not_a_stream_get", "()I", "")]
		public static unsafe int Not_a_stream_get ()
		{
			const string __id = "not_a_stream_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='not_connected_get' and count(parameter)=0]"
		[Register ("not_connected_get", "()I", "")]
		public static unsafe int Not_connected_get ()
		{
			const string __id = "not_connected_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='not_enough_memory_get' and count(parameter)=0]"
		[Register ("not_enough_memory_get", "()I", "")]
		public static unsafe int Not_enough_memory_get ()
		{
			const string __id = "not_enough_memory_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='not_found_get' and count(parameter)=0]"
		[Register ("not_found_get", "()I", "")]
		public static unsafe int Not_found_get ()
		{
			const string __id = "not_found_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='not_implemented_get' and count(parameter)=0]"
		[Register ("not_implemented_get", "()I", "")]
		public static unsafe int Not_implemented_get ()
		{
			const string __id = "not_implemented_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='not_modified_get' and count(parameter)=0]"
		[Register ("not_modified_get", "()I", "")]
		public static unsafe int Not_modified_get ()
		{
			const string __id = "not_modified_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='not_supported_get' and count(parameter)=0]"
		[Register ("not_supported_get", "()I", "")]
		public static unsafe int Not_supported_get ()
		{
			const string __id = "not_supported_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='num_alert_types_get' and count(parameter)=0]"
		[Register ("num_alert_types_get", "()I", "")]
		public static unsafe int Num_alert_types_get ()
		{
			const string __id = "num_alert_types_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='ok_get' and count(parameter)=0]"
		[Register ("ok_get", "()I", "")]
		public static unsafe int Ok_get ()
		{
			const string __id = "ok_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='op_eq__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_type_filter'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_class_type_filter']]"
		[Register ("op_eq__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;)Z", "")]
		public static unsafe bool Op_eq__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_type_filter p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_class_type_filter p3)
		{
			const string __id = "op_eq__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='op_eq__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.error_code'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("op_eq__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/error_code;JLcom/frostwire/jlibtorrent/swig/error_code;)Z", "")]
		public static unsafe bool Op_eq__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Error_code p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "op_eq__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/error_code;JLcom/frostwire/jlibtorrent/swig/error_code;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='op_lt__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.error_code'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("op_lt__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/error_code;JLcom/frostwire/jlibtorrent/swig/error_code;)Z", "")]
		public static unsafe bool Op_lt__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Error_code p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "op_lt__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/error_code;JLcom/frostwire/jlibtorrent/swig/error_code;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='op_lte' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.address'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.address']]"
		[Register ("op_lte", "(JLcom/frostwire/jlibtorrent/swig/address;JLcom/frostwire/jlibtorrent/swig/address;)Z", "")]
		public static unsafe bool Op_lte (long p0, global::FrostWire.Libtorrent.Swig.Address p1, long p2, global::FrostWire.Libtorrent.Swig.Address p3)
		{
			const string __id = "op_lte.(JLcom/frostwire/jlibtorrent/swig/address;JLcom/frostwire/jlibtorrent/swig/address;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='op_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.error_code'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("op_ne", "(JLcom/frostwire/jlibtorrent/swig/error_code;JLcom/frostwire/jlibtorrent/swig/error_code;)Z", "")]
		public static unsafe bool Op_ne (long p0, global::FrostWire.Libtorrent.Swig.Error_code p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "op_ne.(JLcom/frostwire/jlibtorrent/swig/error_code;JLcom/frostwire/jlibtorrent/swig/error_code;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='openssl_version_number' and count(parameter)=0]"
		[Register ("openssl_version_number", "()I", "")]
		public static unsafe int Openssl_version_number ()
		{
			const string __id = "openssl_version_number.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='openssl_version_text' and count(parameter)=0]"
		[Register ("openssl_version_text", "()Ljava/lang/String;", "")]
		public static unsafe string Openssl_version_text ()
		{
			const string __id = "openssl_version_text.()Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='operation_canceled_get' and count(parameter)=0]"
		[Register ("operation_canceled_get", "()I", "")]
		public static unsafe int Operation_canceled_get ()
		{
			const string __id = "operation_canceled_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='operation_in_progress_get' and count(parameter)=0]"
		[Register ("operation_in_progress_get", "()I", "")]
		public static unsafe int Operation_in_progress_get ()
		{
			const string __id = "operation_in_progress_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='operation_name' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("operation_name", "(I)Ljava/lang/String;", "")]
		public static unsafe string Operation_name (int p0)
		{
			const string __id = "operation_name.(I)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='operation_not_permitted_get' and count(parameter)=0]"
		[Register ("operation_not_permitted_get", "()I", "")]
		public static unsafe int Operation_not_permitted_get ()
		{
			const string __id = "operation_not_permitted_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='operation_not_supported_get' and count(parameter)=0]"
		[Register ("operation_not_supported_get", "()I", "")]
		public static unsafe int Operation_not_supported_get ()
		{
			const string __id = "operation_not_supported_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='operation_would_block_get' and count(parameter)=0]"
		[Register ("operation_would_block_get", "()I", "")]
		public static unsafe int Operation_would_block_get ()
		{
			const string __id = "operation_would_block_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='override_trackers_get' and count(parameter)=0]"
		[Register ("override_trackers_get", "()J", "")]
		public static unsafe long Override_trackers_get ()
		{
			const string __id = "override_trackers_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='override_web_seeds_get' and count(parameter)=0]"
		[Register ("override_web_seeds_get", "()J", "")]
		public static unsafe long Override_web_seeds_get ()
		{
			const string __id = "override_web_seeds_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='owner_dead_get' and count(parameter)=0]"
		[Register ("owner_dead_get", "()I", "")]
		public static unsafe int Owner_dead_get ()
		{
			const string __id = "owner_dead_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_blocks_in_piece_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info']]"
		[Register ("partial_piece_info_blocks_in_piece_get", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;)I", "")]
		public static unsafe int Partial_piece_info_blocks_in_piece_get (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info p1)
		{
			const string __id = "partial_piece_info_blocks_in_piece_get.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_blocks_in_piece_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info'] and parameter[3][@type='int']]"
		[Register ("partial_piece_info_blocks_in_piece_set", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;I)V", "")]
		public static unsafe void Partial_piece_info_blocks_in_piece_set (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info p1, int p2)
		{
			const string __id = "partial_piece_info_blocks_in_piece_set.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_finished_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info']]"
		[Register ("partial_piece_info_finished_get", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;)I", "")]
		public static unsafe int Partial_piece_info_finished_get (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info p1)
		{
			const string __id = "partial_piece_info_finished_get.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_finished_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info'] and parameter[3][@type='int']]"
		[Register ("partial_piece_info_finished_set", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;I)V", "")]
		public static unsafe void Partial_piece_info_finished_set (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info p1, int p2)
		{
			const string __id = "partial_piece_info_finished_set.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_piece_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info']]"
		[Register ("partial_piece_info_piece_index_get", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;)I", "")]
		public static unsafe int Partial_piece_info_piece_index_get (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info p1)
		{
			const string __id = "partial_piece_info_piece_index_get.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_piece_index_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info'] and parameter[3][@type='int']]"
		[Register ("partial_piece_info_piece_index_set", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;I)V", "")]
		public static unsafe void Partial_piece_info_piece_index_set (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info p1, int p2)
		{
			const string __id = "partial_piece_info_piece_index_set.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_requested_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info']]"
		[Register ("partial_piece_info_requested_get", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;)I", "")]
		public static unsafe int Partial_piece_info_requested_get (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info p1)
		{
			const string __id = "partial_piece_info_requested_get.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_requested_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info'] and parameter[3][@type='int']]"
		[Register ("partial_piece_info_requested_set", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;I)V", "")]
		public static unsafe void Partial_piece_info_requested_set (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info p1, int p2)
		{
			const string __id = "partial_piece_info_requested_set.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info_vector']]"
		[Register ("partial_piece_info_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;)J", "")]
		public static unsafe long Partial_piece_info_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info_vector p1)
		{
			const string __id = "partial_piece_info_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info_vector']]"
		[Register ("partial_piece_info_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;)V", "")]
		public static unsafe void Partial_piece_info_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info_vector p1)
		{
			const string __id = "partial_piece_info_vector_clear.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info_vector']]"
		[Register ("partial_piece_info_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;)Z", "")]
		public static unsafe bool Partial_piece_info_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info_vector p1)
		{
			const string __id = "partial_piece_info_vector_empty.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info_vector'] and parameter[3][@type='int']]"
		[Register ("partial_piece_info_vector_get", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;I)J", "")]
		public static unsafe long Partial_piece_info_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info_vector p1, int p2)
		{
			const string __id = "partial_piece_info_vector_get.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.partial_piece_info']]"
		[Register ("partial_piece_info_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;JLcom/frostwire/jlibtorrent/swig/partial_piece_info;)V", "")]
		public static unsafe void Partial_piece_info_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Partial_piece_info p3)
		{
			const string __id = "partial_piece_info_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;JLcom/frostwire/jlibtorrent/swig/partial_piece_info;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info_vector'] and parameter[3][@type='long']]"
		[Register ("partial_piece_info_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;J)V", "")]
		public static unsafe void Partial_piece_info_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info_vector p1, long p2)
		{
			const string __id = "partial_piece_info_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.partial_piece_info']]"
		[Register ("partial_piece_info_vector_set", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;IJLcom/frostwire/jlibtorrent/swig/partial_piece_info;)V", "")]
		public static unsafe void Partial_piece_info_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Partial_piece_info p4)
		{
			const string __id = "partial_piece_info_vector_set.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;IJLcom/frostwire/jlibtorrent/swig/partial_piece_info;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info_vector']]"
		[Register ("partial_piece_info_vector_size", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;)J", "")]
		public static unsafe long Partial_piece_info_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info_vector p1)
		{
			const string __id = "partial_piece_info_vector_size.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_writing_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info']]"
		[Register ("partial_piece_info_writing_get", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;)I", "")]
		public static unsafe int Partial_piece_info_writing_get (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info p1)
		{
			const string __id = "partial_piece_info_writing_get.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='partial_piece_info_writing_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.partial_piece_info'] and parameter[3][@type='int']]"
		[Register ("partial_piece_info_writing_set", "(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;I)V", "")]
		public static unsafe void Partial_piece_info_writing_set (long p0, global::FrostWire.Libtorrent.Swig.Partial_piece_info p1, int p2)
		{
			const string __id = "partial_piece_info_writing_set.(JLcom/frostwire/jlibtorrent/swig/partial_piece_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pause_flags_t_all' and count(parameter)=0]"
		[Register ("pause_flags_t_all", "()J", "")]
		public static unsafe long Pause_flags_t_all ()
		{
			const string __id = "pause_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pause_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pause_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.pause_flags_t']]"
		[Register ("pause_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)J", "")]
		public static unsafe long Pause_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Pause_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Pause_flags_t p3)
		{
			const string __id = "pause_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pause_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pause_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.pause_flags_t']]"
		[Register ("pause_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)Z", "")]
		public static unsafe bool Pause_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Pause_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Pause_flags_t p3)
		{
			const string __id = "pause_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pause_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pause_flags_t']]"
		[Register ("pause_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)J", "")]
		public static unsafe long Pause_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Pause_flags_t p1)
		{
			const string __id = "pause_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pause_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pause_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.pause_flags_t']]"
		[Register ("pause_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)Z", "")]
		public static unsafe bool Pause_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Pause_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Pause_flags_t p3)
		{
			const string __id = "pause_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pause_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pause_flags_t']]"
		[Register ("pause_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)Z", "")]
		public static unsafe bool Pause_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Pause_flags_t p1)
		{
			const string __id = "pause_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pause_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pause_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.pause_flags_t']]"
		[Register ("pause_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)J", "")]
		public static unsafe long Pause_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Pause_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Pause_flags_t p3)
		{
			const string __id = "pause_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pause_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pause_flags_t']]"
		[Register ("pause_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)I", "")]
		public static unsafe int Pause_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Pause_flags_t p1)
		{
			const string __id = "pause_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pause_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pause_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.pause_flags_t']]"
		[Register ("pause_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)J", "")]
		public static unsafe long Pause_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Pause_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Pause_flags_t p3)
		{
			const string __id = "pause_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/pause_flags_t;JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='paused_get' and count(parameter)=0]"
		[Register ("paused_get", "()J", "")]
		public static unsafe long Paused_get ()
		{
			const string __id = "paused_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("peer_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Peer_alert_SWIGUpcast (long p0)
		{
			const string __id = "peer_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_alert_get_endpoint' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_alert']]"
		[Register ("peer_alert_get_endpoint", "(JLcom/frostwire/jlibtorrent/swig/peer_alert;)J", "")]
		public static unsafe long Peer_alert_get_endpoint (long p0, global::FrostWire.Libtorrent.Swig.Peer_alert p1)
		{
			const string __id = "peer_alert_get_endpoint.(JLcom/frostwire/jlibtorrent/swig/peer_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_alert']]"
		[Register ("peer_alert_message", "(JLcom/frostwire/jlibtorrent/swig/peer_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Peer_alert p1)
		{
			const string __id = "peer_alert_message.(JLcom/frostwire/jlibtorrent/swig/peer_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_alert_pid_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_alert']]"
		[Register ("peer_alert_pid_get", "(JLcom/frostwire/jlibtorrent/swig/peer_alert;)J", "")]
		public static unsafe long Peer_alert_pid_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_alert p1)
		{
			const string __id = "peer_alert_pid_get.(JLcom/frostwire/jlibtorrent/swig/peer_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_alert_pid_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("peer_alert_pid_set", "(JLcom/frostwire/jlibtorrent/swig/peer_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Peer_alert_pid_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "peer_alert_pid_set.(JLcom/frostwire/jlibtorrent/swig/peer_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_ban_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("peer_ban_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Peer_ban_alert_SWIGUpcast (long p0)
		{
			const string __id = "peer_ban_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_ban_alert_alert_type_get' and count(parameter)=0]"
		[Register ("peer_ban_alert_alert_type_get", "()I", "")]
		public static unsafe int Peer_ban_alert_alert_type_get ()
		{
			const string __id = "peer_ban_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_ban_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_ban_alert']]"
		[Register ("peer_ban_alert_category", "(JLcom/frostwire/jlibtorrent/swig/peer_ban_alert;)J", "")]
		public static unsafe long Peer_ban_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Peer_ban_alert p1)
		{
			const string __id = "peer_ban_alert_category.(JLcom/frostwire/jlibtorrent/swig/peer_ban_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_ban_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_ban_alert']]"
		[Register ("peer_ban_alert_message", "(JLcom/frostwire/jlibtorrent/swig/peer_ban_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_ban_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Peer_ban_alert p1)
		{
			const string __id = "peer_ban_alert_message.(JLcom/frostwire/jlibtorrent/swig/peer_ban_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_ban_alert_priority_get' and count(parameter)=0]"
		[Register ("peer_ban_alert_priority_get", "()I", "")]
		public static unsafe int Peer_ban_alert_priority_get ()
		{
			const string __id = "peer_ban_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_ban_alert_static_category_get' and count(parameter)=0]"
		[Register ("peer_ban_alert_static_category_get", "()J", "")]
		public static unsafe long Peer_ban_alert_static_category_get ()
		{
			const string __id = "peer_ban_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_ban_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_ban_alert']]"
		[Register ("peer_ban_alert_type", "(JLcom/frostwire/jlibtorrent/swig/peer_ban_alert;)I", "")]
		public static unsafe int Peer_ban_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Peer_ban_alert p1)
		{
			const string __id = "peer_ban_alert_type.(JLcom/frostwire/jlibtorrent/swig/peer_ban_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_ban_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_ban_alert']]"
		[Register ("peer_ban_alert_what", "(JLcom/frostwire/jlibtorrent/swig/peer_ban_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_ban_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Peer_ban_alert p1)
		{
			const string __id = "peer_ban_alert_what.(JLcom/frostwire/jlibtorrent/swig/peer_ban_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_blocked_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("peer_blocked_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Peer_blocked_alert_SWIGUpcast (long p0)
		{
			const string __id = "peer_blocked_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_blocked_alert_alert_type_get' and count(parameter)=0]"
		[Register ("peer_blocked_alert_alert_type_get", "()I", "")]
		public static unsafe int Peer_blocked_alert_alert_type_get ()
		{
			const string __id = "peer_blocked_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_blocked_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_blocked_alert']]"
		[Register ("peer_blocked_alert_category", "(JLcom/frostwire/jlibtorrent/swig/peer_blocked_alert;)J", "")]
		public static unsafe long Peer_blocked_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Peer_blocked_alert p1)
		{
			const string __id = "peer_blocked_alert_category.(JLcom/frostwire/jlibtorrent/swig/peer_blocked_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_blocked_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_blocked_alert']]"
		[Register ("peer_blocked_alert_message", "(JLcom/frostwire/jlibtorrent/swig/peer_blocked_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_blocked_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Peer_blocked_alert p1)
		{
			const string __id = "peer_blocked_alert_message.(JLcom/frostwire/jlibtorrent/swig/peer_blocked_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_blocked_alert_priority_get' and count(parameter)=0]"
		[Register ("peer_blocked_alert_priority_get", "()I", "")]
		public static unsafe int Peer_blocked_alert_priority_get ()
		{
			const string __id = "peer_blocked_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_blocked_alert_reason_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_blocked_alert']]"
		[Register ("peer_blocked_alert_reason_get", "(JLcom/frostwire/jlibtorrent/swig/peer_blocked_alert;)I", "")]
		public static unsafe int Peer_blocked_alert_reason_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_blocked_alert p1)
		{
			const string __id = "peer_blocked_alert_reason_get.(JLcom/frostwire/jlibtorrent/swig/peer_blocked_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_blocked_alert_static_category_get' and count(parameter)=0]"
		[Register ("peer_blocked_alert_static_category_get", "()J", "")]
		public static unsafe long Peer_blocked_alert_static_category_get ()
		{
			const string __id = "peer_blocked_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_blocked_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_blocked_alert']]"
		[Register ("peer_blocked_alert_type", "(JLcom/frostwire/jlibtorrent/swig/peer_blocked_alert;)I", "")]
		public static unsafe int Peer_blocked_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Peer_blocked_alert p1)
		{
			const string __id = "peer_blocked_alert_type.(JLcom/frostwire/jlibtorrent/swig/peer_blocked_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_blocked_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_blocked_alert']]"
		[Register ("peer_blocked_alert_what", "(JLcom/frostwire/jlibtorrent/swig/peer_blocked_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_blocked_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Peer_blocked_alert p1)
		{
			const string __id = "peer_blocked_alert_what.(JLcom/frostwire/jlibtorrent/swig/peer_blocked_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_info_connection_limit_factor_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_info']]"
		[Register ("peer_class_info_connection_limit_factor_get", "(JLcom/frostwire/jlibtorrent/swig/peer_class_info;)I", "")]
		public static unsafe int Peer_class_info_connection_limit_factor_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_info p1)
		{
			const string __id = "peer_class_info_connection_limit_factor_get.(JLcom/frostwire/jlibtorrent/swig/peer_class_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_info_connection_limit_factor_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_info'] and parameter[3][@type='int']]"
		[Register ("peer_class_info_connection_limit_factor_set", "(JLcom/frostwire/jlibtorrent/swig/peer_class_info;I)V", "")]
		public static unsafe void Peer_class_info_connection_limit_factor_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_info p1, int p2)
		{
			const string __id = "peer_class_info_connection_limit_factor_set.(JLcom/frostwire/jlibtorrent/swig/peer_class_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_info_download_limit_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_info']]"
		[Register ("peer_class_info_download_limit_get", "(JLcom/frostwire/jlibtorrent/swig/peer_class_info;)I", "")]
		public static unsafe int Peer_class_info_download_limit_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_info p1)
		{
			const string __id = "peer_class_info_download_limit_get.(JLcom/frostwire/jlibtorrent/swig/peer_class_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_info_download_limit_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_info'] and parameter[3][@type='int']]"
		[Register ("peer_class_info_download_limit_set", "(JLcom/frostwire/jlibtorrent/swig/peer_class_info;I)V", "")]
		public static unsafe void Peer_class_info_download_limit_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_info p1, int p2)
		{
			const string __id = "peer_class_info_download_limit_set.(JLcom/frostwire/jlibtorrent/swig/peer_class_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_info_download_priority_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_info']]"
		[Register ("peer_class_info_download_priority_get", "(JLcom/frostwire/jlibtorrent/swig/peer_class_info;)I", "")]
		public static unsafe int Peer_class_info_download_priority_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_info p1)
		{
			const string __id = "peer_class_info_download_priority_get.(JLcom/frostwire/jlibtorrent/swig/peer_class_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_info_download_priority_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_info'] and parameter[3][@type='int']]"
		[Register ("peer_class_info_download_priority_set", "(JLcom/frostwire/jlibtorrent/swig/peer_class_info;I)V", "")]
		public static unsafe void Peer_class_info_download_priority_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_info p1, int p2)
		{
			const string __id = "peer_class_info_download_priority_set.(JLcom/frostwire/jlibtorrent/swig/peer_class_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_info_ignore_unchoke_slots_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_info']]"
		[Register ("peer_class_info_ignore_unchoke_slots_get", "(JLcom/frostwire/jlibtorrent/swig/peer_class_info;)Z", "")]
		public static unsafe bool Peer_class_info_ignore_unchoke_slots_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_info p1)
		{
			const string __id = "peer_class_info_ignore_unchoke_slots_get.(JLcom/frostwire/jlibtorrent/swig/peer_class_info;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_info_ignore_unchoke_slots_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_info'] and parameter[3][@type='boolean']]"
		[Register ("peer_class_info_ignore_unchoke_slots_set", "(JLcom/frostwire/jlibtorrent/swig/peer_class_info;Z)V", "")]
		public static unsafe void Peer_class_info_ignore_unchoke_slots_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_info p1, bool p2)
		{
			const string __id = "peer_class_info_ignore_unchoke_slots_set.(JLcom/frostwire/jlibtorrent/swig/peer_class_info;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_info_label_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_info']]"
		[Register ("peer_class_info_label_get", "(JLcom/frostwire/jlibtorrent/swig/peer_class_info;)Ljava/lang/String;", "")]
		public static unsafe string Peer_class_info_label_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_info p1)
		{
			const string __id = "peer_class_info_label_get.(JLcom/frostwire/jlibtorrent/swig/peer_class_info;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_info_label_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_info'] and parameter[3][@type='java.lang.String']]"
		[Register ("peer_class_info_label_set", "(JLcom/frostwire/jlibtorrent/swig/peer_class_info;Ljava/lang/String;)V", "")]
		public static unsafe void Peer_class_info_label_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_info p1, string p2)
		{
			const string __id = "peer_class_info_label_set.(JLcom/frostwire/jlibtorrent/swig/peer_class_info;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_info_upload_limit_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_info']]"
		[Register ("peer_class_info_upload_limit_get", "(JLcom/frostwire/jlibtorrent/swig/peer_class_info;)I", "")]
		public static unsafe int Peer_class_info_upload_limit_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_info p1)
		{
			const string __id = "peer_class_info_upload_limit_get.(JLcom/frostwire/jlibtorrent/swig/peer_class_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_info_upload_limit_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_info'] and parameter[3][@type='int']]"
		[Register ("peer_class_info_upload_limit_set", "(JLcom/frostwire/jlibtorrent/swig/peer_class_info;I)V", "")]
		public static unsafe void Peer_class_info_upload_limit_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_info p1, int p2)
		{
			const string __id = "peer_class_info_upload_limit_set.(JLcom/frostwire/jlibtorrent/swig/peer_class_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_info_upload_priority_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_info']]"
		[Register ("peer_class_info_upload_priority_get", "(JLcom/frostwire/jlibtorrent/swig/peer_class_info;)I", "")]
		public static unsafe int Peer_class_info_upload_priority_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_info p1)
		{
			const string __id = "peer_class_info_upload_priority_get.(JLcom/frostwire/jlibtorrent/swig/peer_class_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_info_upload_priority_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_info'] and parameter[3][@type='int']]"
		[Register ("peer_class_info_upload_priority_set", "(JLcom/frostwire/jlibtorrent/swig/peer_class_info;I)V", "")]
		public static unsafe void Peer_class_info_upload_priority_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_info p1, int p2)
		{
			const string __id = "peer_class_info_upload_priority_set.(JLcom/frostwire/jlibtorrent/swig/peer_class_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_type_filter_add' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_type_filter'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("peer_class_type_filter_add", "(JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;II)V", "")]
		public static unsafe void Peer_class_type_filter_add (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_type_filter p1, int p2, int p3)
		{
			const string __id = "peer_class_type_filter_add.(JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_type_filter_allow' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_type_filter'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("peer_class_type_filter_allow", "(JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;II)V", "")]
		public static unsafe void Peer_class_type_filter_allow (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_type_filter p1, int p2, int p3)
		{
			const string __id = "peer_class_type_filter_allow.(JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_type_filter_apply' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_type_filter'] and parameter[3][@type='int'] and parameter[4][@type='long']]"
		[Register ("peer_class_type_filter_apply", "(JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;IJ)J", "")]
		public static unsafe long Peer_class_type_filter_apply (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_type_filter p1, int p2, long p3)
		{
			const string __id = "peer_class_type_filter_apply.(JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;IJ)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_type_filter_disallow' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_type_filter'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("peer_class_type_filter_disallow", "(JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;II)V", "")]
		public static unsafe void Peer_class_type_filter_disallow (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_type_filter p1, int p2, int p3)
		{
			const string __id = "peer_class_type_filter_disallow.(JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_type_filter_remove' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_class_type_filter'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("peer_class_type_filter_remove", "(JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;II)V", "")]
		public static unsafe void Peer_class_type_filter_remove (long p0, global::FrostWire.Libtorrent.Swig.Peer_class_type_filter p1, int p2, int p3)
		{
			const string __id = "peer_class_type_filter_remove.(JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_class_type_filter_tcp_socket_get' and count(parameter)=0]"
		[Register ("peer_class_type_filter_tcp_socket_get", "()I", "")]
		public static unsafe int Peer_class_type_filter_tcp_socket_get ()
		{
			const string __id = "peer_class_type_filter_tcp_socket_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connect_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("peer_connect_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Peer_connect_alert_SWIGUpcast (long p0)
		{
			const string __id = "peer_connect_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connect_alert_alert_type_get' and count(parameter)=0]"
		[Register ("peer_connect_alert_alert_type_get", "()I", "")]
		public static unsafe int Peer_connect_alert_alert_type_get ()
		{
			const string __id = "peer_connect_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connect_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connect_alert']]"
		[Register ("peer_connect_alert_category", "(JLcom/frostwire/jlibtorrent/swig/peer_connect_alert;)J", "")]
		public static unsafe long Peer_connect_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Peer_connect_alert p1)
		{
			const string __id = "peer_connect_alert_category.(JLcom/frostwire/jlibtorrent/swig/peer_connect_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connect_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connect_alert']]"
		[Register ("peer_connect_alert_message", "(JLcom/frostwire/jlibtorrent/swig/peer_connect_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_connect_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Peer_connect_alert p1)
		{
			const string __id = "peer_connect_alert_message.(JLcom/frostwire/jlibtorrent/swig/peer_connect_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connect_alert_priority_get' and count(parameter)=0]"
		[Register ("peer_connect_alert_priority_get", "()I", "")]
		public static unsafe int Peer_connect_alert_priority_get ()
		{
			const string __id = "peer_connect_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connect_alert_socket_type_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connect_alert']]"
		[Register ("peer_connect_alert_socket_type_get", "(JLcom/frostwire/jlibtorrent/swig/peer_connect_alert;)I", "")]
		public static unsafe int Peer_connect_alert_socket_type_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_connect_alert p1)
		{
			const string __id = "peer_connect_alert_socket_type_get.(JLcom/frostwire/jlibtorrent/swig/peer_connect_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connect_alert_static_category_get' and count(parameter)=0]"
		[Register ("peer_connect_alert_static_category_get", "()J", "")]
		public static unsafe long Peer_connect_alert_static_category_get ()
		{
			const string __id = "peer_connect_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connect_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connect_alert']]"
		[Register ("peer_connect_alert_type", "(JLcom/frostwire/jlibtorrent/swig/peer_connect_alert;)I", "")]
		public static unsafe int Peer_connect_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Peer_connect_alert p1)
		{
			const string __id = "peer_connect_alert_type.(JLcom/frostwire/jlibtorrent/swig/peer_connect_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connect_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connect_alert']]"
		[Register ("peer_connect_alert_what", "(JLcom/frostwire/jlibtorrent/swig/peer_connect_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_connect_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Peer_connect_alert p1)
		{
			const string __id = "peer_connect_alert_what.(JLcom/frostwire/jlibtorrent/swig/peer_connect_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_associated_torrent' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_associated_torrent", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)J", "")]
		public static unsafe long Peer_connection_handle_associated_torrent (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_associated_torrent.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_can_disconnect' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("peer_connection_handle_can_disconnect", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;JLcom/frostwire/jlibtorrent/swig/error_code;)Z", "")]
		public static unsafe bool Peer_connection_handle_can_disconnect (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "peer_connection_handle_can_disconnect.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;JLcom/frostwire/jlibtorrent/swig/error_code;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_choke_this_peer' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_choke_this_peer", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)V", "")]
		public static unsafe void Peer_connection_handle_choke_this_peer (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_choke_this_peer.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_disconnect__SWIG_0' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code'] and parameter[5][@type='int'] and parameter[6][@type='int']]"
		[Register ("peer_connection_handle_disconnect__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;JLcom/frostwire/jlibtorrent/swig/error_code;II)V", "")]
		public static unsafe void Peer_connection_handle_disconnect__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3, int p4, int p5)
		{
			const string __id = "peer_connection_handle_disconnect__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;JLcom/frostwire/jlibtorrent/swig/error_code;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue (p5);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_disconnect__SWIG_1' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code'] and parameter[5][@type='int']]"
		[Register ("peer_connection_handle_disconnect__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;JLcom/frostwire/jlibtorrent/swig/error_code;I)V", "")]
		public static unsafe void Peer_connection_handle_disconnect__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3, int p4)
		{
			const string __id = "peer_connection_handle_disconnect__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;JLcom/frostwire/jlibtorrent/swig/error_code;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_failed' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_failed", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_failed (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_failed.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_get_peer_info' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_connection_handle_get_peer_info", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;JLcom/frostwire/jlibtorrent/swig/peer_info;)V", "")]
		public static unsafe void Peer_connection_handle_get_peer_info (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_info p3)
		{
			const string __id = "peer_connection_handle_get_peer_info.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;JLcom/frostwire/jlibtorrent/swig/peer_info;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_get_time_of_last_unchoke' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_get_time_of_last_unchoke", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)J", "")]
		public static unsafe long Peer_connection_handle_get_time_of_last_unchoke (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_get_time_of_last_unchoke.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_has_metadata' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_has_metadata", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_has_metadata (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_has_metadata.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_has_peer_choked' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_has_peer_choked", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_has_peer_choked (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_has_peer_choked.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_has_piece' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle'] and parameter[3][@type='int']]"
		[Register ("peer_connection_handle_has_piece", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;I)Z", "")]
		public static unsafe bool Peer_connection_handle_has_piece (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1, int p2)
		{
			const string __id = "peer_connection_handle_has_piece.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_ignore_unchoke_slots' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_ignore_unchoke_slots", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_ignore_unchoke_slots (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_ignore_unchoke_slots.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_in_handshake' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_in_handshake", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_in_handshake (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_in_handshake.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_is_choked' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_is_choked", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_is_choked (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_is_choked.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_is_connecting' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_is_connecting", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_is_connecting (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_is_connecting.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_is_disconnecting' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_is_disconnecting", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_is_disconnecting (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_is_disconnecting.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_is_interesting' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_is_interesting", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_is_interesting (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_is_interesting.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_is_outgoing' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_is_outgoing", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_is_outgoing (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_is_outgoing.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_is_peer_interested' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_is_peer_interested", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_is_peer_interested (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_is_peer_interested.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_is_seed' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_is_seed", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_is_seed (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_is_seed.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_last_seen_complete' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_last_seen_complete", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)J", "")]
		public static unsafe long Peer_connection_handle_last_seen_complete (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_last_seen_complete.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_local_endpoint' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_local_endpoint", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)J", "")]
		public static unsafe long Peer_connection_handle_local_endpoint (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_local_endpoint.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_maybe_unchoke_this_peer' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_maybe_unchoke_this_peer", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)V", "")]
		public static unsafe void Peer_connection_handle_maybe_unchoke_this_peer (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_maybe_unchoke_this_peer.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_on_local_network' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_on_local_network", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_on_local_network (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_on_local_network.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_op_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_op_eq", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_op_eq (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p3)
		{
			const string __id = "peer_connection_handle_op_eq.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_op_lt' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_op_lt", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_op_lt (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p3)
		{
			const string __id = "peer_connection_handle_op_lt.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_op_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_op_ne", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_op_ne (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p3)
		{
			const string __id = "peer_connection_handle_op_ne.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_pid' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_pid", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)J", "")]
		public static unsafe long Peer_connection_handle_pid (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_pid.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_remote' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_remote", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)J", "")]
		public static unsafe long Peer_connection_handle_remote (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_remote.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_send_buffer__SWIG_0' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int'] and parameter[5][@type='long']]"
		[Register ("peer_connection_handle_send_buffer__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;Ljava/lang/String;IJ)V", "")]
		public static unsafe void Peer_connection_handle_send_buffer__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1, string p2, int p3, long p4)
		{
			const string __id = "peer_connection_handle_send_buffer__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;Ljava/lang/String;IJ)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_send_buffer__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int']]"
		[Register ("peer_connection_handle_send_buffer__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;Ljava/lang/String;I)V", "")]
		public static unsafe void Peer_connection_handle_send_buffer__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1, string p2, int p3)
		{
			const string __id = "peer_connection_handle_send_buffer__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;Ljava/lang/String;I)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_type", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)I", "")]
		public static unsafe int Peer_connection_handle_type (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_type.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_connection_handle_upload_only' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_connection_handle']]"
		[Register ("peer_connection_handle_upload_only", "(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z", "")]
		public static unsafe bool Peer_connection_handle_upload_only (long p0, global::FrostWire.Libtorrent.Swig.Peer_connection_handle p1)
		{
			const string __id = "peer_connection_handle_upload_only.(JLcom/frostwire/jlibtorrent/swig/peer_connection_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_disconnected_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("peer_disconnected_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Peer_disconnected_alert_SWIGUpcast (long p0)
		{
			const string __id = "peer_disconnected_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_disconnected_alert_alert_type_get' and count(parameter)=0]"
		[Register ("peer_disconnected_alert_alert_type_get", "()I", "")]
		public static unsafe int Peer_disconnected_alert_alert_type_get ()
		{
			const string __id = "peer_disconnected_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_disconnected_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_disconnected_alert']]"
		[Register ("peer_disconnected_alert_category", "(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)J", "")]
		public static unsafe long Peer_disconnected_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Peer_disconnected_alert p1)
		{
			const string __id = "peer_disconnected_alert_category.(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_disconnected_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_disconnected_alert']]"
		[Register ("peer_disconnected_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)J", "")]
		public static unsafe long Peer_disconnected_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_disconnected_alert p1)
		{
			const string __id = "peer_disconnected_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_disconnected_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_disconnected_alert']]"
		[Register ("peer_disconnected_alert_message", "(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_disconnected_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Peer_disconnected_alert p1)
		{
			const string __id = "peer_disconnected_alert_message.(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_disconnected_alert_op_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_disconnected_alert']]"
		[Register ("peer_disconnected_alert_op_get", "(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)I", "")]
		public static unsafe int Peer_disconnected_alert_op_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_disconnected_alert p1)
		{
			const string __id = "peer_disconnected_alert_op_get.(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_disconnected_alert_priority_get' and count(parameter)=0]"
		[Register ("peer_disconnected_alert_priority_get", "()I", "")]
		public static unsafe int Peer_disconnected_alert_priority_get ()
		{
			const string __id = "peer_disconnected_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_disconnected_alert_reason_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_disconnected_alert']]"
		[Register ("peer_disconnected_alert_reason_get", "(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)I", "")]
		public static unsafe int Peer_disconnected_alert_reason_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_disconnected_alert p1)
		{
			const string __id = "peer_disconnected_alert_reason_get.(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_disconnected_alert_socket_type_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_disconnected_alert']]"
		[Register ("peer_disconnected_alert_socket_type_get", "(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)I", "")]
		public static unsafe int Peer_disconnected_alert_socket_type_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_disconnected_alert p1)
		{
			const string __id = "peer_disconnected_alert_socket_type_get.(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_disconnected_alert_static_category_get' and count(parameter)=0]"
		[Register ("peer_disconnected_alert_static_category_get", "()J", "")]
		public static unsafe long Peer_disconnected_alert_static_category_get ()
		{
			const string __id = "peer_disconnected_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_disconnected_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_disconnected_alert']]"
		[Register ("peer_disconnected_alert_type", "(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)I", "")]
		public static unsafe int Peer_disconnected_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Peer_disconnected_alert p1)
		{
			const string __id = "peer_disconnected_alert_type.(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_disconnected_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_disconnected_alert']]"
		[Register ("peer_disconnected_alert_what", "(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_disconnected_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Peer_disconnected_alert p1)
		{
			const string __id = "peer_disconnected_alert_what.(JLcom/frostwire/jlibtorrent/swig/peer_disconnected_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_error_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("peer_error_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Peer_error_alert_SWIGUpcast (long p0)
		{
			const string __id = "peer_error_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_error_alert_alert_type_get' and count(parameter)=0]"
		[Register ("peer_error_alert_alert_type_get", "()I", "")]
		public static unsafe int Peer_error_alert_alert_type_get ()
		{
			const string __id = "peer_error_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_error_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_error_alert']]"
		[Register ("peer_error_alert_category", "(JLcom/frostwire/jlibtorrent/swig/peer_error_alert;)J", "")]
		public static unsafe long Peer_error_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Peer_error_alert p1)
		{
			const string __id = "peer_error_alert_category.(JLcom/frostwire/jlibtorrent/swig/peer_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_error_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_error_alert']]"
		[Register ("peer_error_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/peer_error_alert;)J", "")]
		public static unsafe long Peer_error_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_error_alert p1)
		{
			const string __id = "peer_error_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/peer_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_error_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_error_alert']]"
		[Register ("peer_error_alert_message", "(JLcom/frostwire/jlibtorrent/swig/peer_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_error_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Peer_error_alert p1)
		{
			const string __id = "peer_error_alert_message.(JLcom/frostwire/jlibtorrent/swig/peer_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_error_alert_op_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_error_alert']]"
		[Register ("peer_error_alert_op_get", "(JLcom/frostwire/jlibtorrent/swig/peer_error_alert;)I", "")]
		public static unsafe int Peer_error_alert_op_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_error_alert p1)
		{
			const string __id = "peer_error_alert_op_get.(JLcom/frostwire/jlibtorrent/swig/peer_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_error_alert_op_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_error_alert'] and parameter[3][@type='int']]"
		[Register ("peer_error_alert_op_set", "(JLcom/frostwire/jlibtorrent/swig/peer_error_alert;I)V", "")]
		public static unsafe void Peer_error_alert_op_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_error_alert p1, int p2)
		{
			const string __id = "peer_error_alert_op_set.(JLcom/frostwire/jlibtorrent/swig/peer_error_alert;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_error_alert_priority_get' and count(parameter)=0]"
		[Register ("peer_error_alert_priority_get", "()I", "")]
		public static unsafe int Peer_error_alert_priority_get ()
		{
			const string __id = "peer_error_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_error_alert_static_category_get' and count(parameter)=0]"
		[Register ("peer_error_alert_static_category_get", "()J", "")]
		public static unsafe long Peer_error_alert_static_category_get ()
		{
			const string __id = "peer_error_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_error_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_error_alert']]"
		[Register ("peer_error_alert_type", "(JLcom/frostwire/jlibtorrent/swig/peer_error_alert;)I", "")]
		public static unsafe int Peer_error_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Peer_error_alert p1)
		{
			const string __id = "peer_error_alert_type.(JLcom/frostwire/jlibtorrent/swig/peer_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_error_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_error_alert']]"
		[Register ("peer_error_alert_what", "(JLcom/frostwire/jlibtorrent/swig/peer_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_error_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Peer_error_alert p1)
		{
			const string __id = "peer_error_alert_what.(JLcom/frostwire/jlibtorrent/swig/peer_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_flags_t_all' and count(parameter)=0]"
		[Register ("peer_flags_t_all", "()J", "")]
		public static unsafe long Peer_flags_t_all ()
		{
			const string __id = "peer_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_flags_t']]"
		[Register ("peer_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)J", "")]
		public static unsafe long Peer_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Peer_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_flags_t p3)
		{
			const string __id = "peer_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_flags_t']]"
		[Register ("peer_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)Z", "")]
		public static unsafe bool Peer_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Peer_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_flags_t p3)
		{
			const string __id = "peer_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_flags_t']]"
		[Register ("peer_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)J", "")]
		public static unsafe long Peer_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Peer_flags_t p1)
		{
			const string __id = "peer_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_flags_t']]"
		[Register ("peer_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)Z", "")]
		public static unsafe bool Peer_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Peer_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_flags_t p3)
		{
			const string __id = "peer_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_flags_t']]"
		[Register ("peer_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)Z", "")]
		public static unsafe bool Peer_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Peer_flags_t p1)
		{
			const string __id = "peer_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_flags_t']]"
		[Register ("peer_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)J", "")]
		public static unsafe long Peer_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Peer_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_flags_t p3)
		{
			const string __id = "peer_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_flags_t']]"
		[Register ("peer_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)I", "")]
		public static unsafe int Peer_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Peer_flags_t p1)
		{
			const string __id = "peer_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_flags_t']]"
		[Register ("peer_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)J", "")]
		public static unsafe long Peer_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Peer_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_flags_t p3)
		{
			const string __id = "peer_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/peer_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_busy_requests_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_busy_requests_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_busy_requests_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_busy_requests_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_busy_requests_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_busy_requests_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_busy_requests_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_busy_requests_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_bw_disk_get' and count(parameter)=0]"
		[Register ("peer_info_bw_disk_get", "()J", "")]
		public static unsafe long Peer_info_bw_disk_get ()
		{
			const string __id = "peer_info_bw_disk_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_bw_idle_get' and count(parameter)=0]"
		[Register ("peer_info_bw_idle_get", "()J", "")]
		public static unsafe long Peer_info_bw_idle_get ()
		{
			const string __id = "peer_info_bw_idle_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_bw_limit_get' and count(parameter)=0]"
		[Register ("peer_info_bw_limit_get", "()J", "")]
		public static unsafe long Peer_info_bw_limit_get ()
		{
			const string __id = "peer_info_bw_limit_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_bw_network_get' and count(parameter)=0]"
		[Register ("peer_info_bw_network_get", "()J", "")]
		public static unsafe long Peer_info_bw_network_get ()
		{
			const string __id = "peer_info_bw_network_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_choked_get' and count(parameter)=0]"
		[Register ("peer_info_choked_get", "()J", "")]
		public static unsafe long Peer_info_choked_get ()
		{
			const string __id = "peer_info_choked_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_connecting_get' and count(parameter)=0]"
		[Register ("peer_info_connecting_get", "()J", "")]
		public static unsafe long Peer_info_connecting_get ()
		{
			const string __id = "peer_info_connecting_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_connection_type_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_connection_type_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_connection_type_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_connection_type_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_connection_type_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_connection_type_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_connection_type_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_connection_type_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_dht_get' and count(parameter)=0]"
		[Register ("peer_info_dht_get", "()J", "")]
		public static unsafe long Peer_info_dht_get ()
		{
			const string __id = "peer_info_dht_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_down_speed_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_down_speed_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_down_speed_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_down_speed_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_down_speed_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_down_speed_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_down_speed_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_down_speed_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_download_queue_length_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_download_queue_length_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_download_queue_length_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_download_queue_length_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_download_queue_length_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_download_queue_length_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_download_queue_length_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_download_queue_length_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_download_rate_peak_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_download_rate_peak_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_download_rate_peak_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_download_rate_peak_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_download_rate_peak_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_download_rate_peak_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_download_rate_peak_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_download_rate_peak_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_downloading_block_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_downloading_block_index_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_downloading_block_index_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_downloading_block_index_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_downloading_block_index_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_downloading_block_index_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_downloading_block_index_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_downloading_block_index_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_downloading_piece_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_downloading_piece_index_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_downloading_piece_index_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_downloading_piece_index_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_downloading_piece_index_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_downloading_piece_index_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_downloading_piece_index_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_downloading_piece_index_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_downloading_progress_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_downloading_progress_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_downloading_progress_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_downloading_progress_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_downloading_progress_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_downloading_progress_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_downloading_progress_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_downloading_progress_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_downloading_total_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_downloading_total_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_downloading_total_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_downloading_total_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_downloading_total_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_downloading_total_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_downloading_total_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_downloading_total_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_endgame_mode_get' and count(parameter)=0]"
		[Register ("peer_info_endgame_mode_get", "()J", "")]
		public static unsafe long Peer_info_endgame_mode_get ()
		{
			const string __id = "peer_info_endgame_mode_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_estimated_reciprocation_rate_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_estimated_reciprocation_rate_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_estimated_reciprocation_rate_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_estimated_reciprocation_rate_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_estimated_reciprocation_rate_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_estimated_reciprocation_rate_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_estimated_reciprocation_rate_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_estimated_reciprocation_rate_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_failcount_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_failcount_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_failcount_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_failcount_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_failcount_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_failcount_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_failcount_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_failcount_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_flags_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_flags_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)J", "")]
		public static unsafe long Peer_info_flags_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_flags_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_flags_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_flags_t']]"
		[Register ("peer_info_flags_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)V", "")]
		public static unsafe void Peer_info_flags_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_flags_t p3)
		{
			const string __id = "peer_info_flags_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/peer_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_get_client' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_get_client", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)J", "")]
		public static unsafe long Peer_info_get_client (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_get_client.(JLcom/frostwire/jlibtorrent/swig/peer_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_get_download_queue_time' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_get_download_queue_time", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)J", "")]
		public static unsafe long Peer_info_get_download_queue_time (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_get_download_queue_time.(JLcom/frostwire/jlibtorrent/swig/peer_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_get_flags' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_get_flags", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_get_flags (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_get_flags.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_get_last_active' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_get_last_active", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)J", "")]
		public static unsafe long Peer_info_get_last_active (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_get_last_active.(JLcom/frostwire/jlibtorrent/swig/peer_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_get_last_request' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_get_last_request", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)J", "")]
		public static unsafe long Peer_info_get_last_request (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_get_last_request.(JLcom/frostwire/jlibtorrent/swig/peer_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_get_read_state' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_get_read_state", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)B", "")]
		public static unsafe sbyte Peer_info_get_read_state (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_get_read_state.(JLcom/frostwire/jlibtorrent/swig/peer_info;)B";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeSByteMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_get_source' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_get_source", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)B", "")]
		public static unsafe sbyte Peer_info_get_source (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_get_source.(JLcom/frostwire/jlibtorrent/swig/peer_info;)B";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeSByteMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_get_write_state' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_get_write_state", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)B", "")]
		public static unsafe sbyte Peer_info_get_write_state (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_get_write_state.(JLcom/frostwire/jlibtorrent/swig/peer_info;)B";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeSByteMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_handshake_get' and count(parameter)=0]"
		[Register ("peer_info_handshake_get", "()J", "")]
		public static unsafe long Peer_info_handshake_get ()
		{
			const string __id = "peer_info_handshake_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_holepunched_get' and count(parameter)=0]"
		[Register ("peer_info_holepunched_get", "()J", "")]
		public static unsafe long Peer_info_holepunched_get ()
		{
			const string __id = "peer_info_holepunched_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_http_seed_get' and count(parameter)=0]"
		[Register ("peer_info_http_seed_get", "()I", "")]
		public static unsafe int Peer_info_http_seed_get ()
		{
			const string __id = "peer_info_http_seed_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_i2p_socket_get' and count(parameter)=0]"
		[Register ("peer_info_i2p_socket_get", "()J", "")]
		public static unsafe long Peer_info_i2p_socket_get ()
		{
			const string __id = "peer_info_i2p_socket_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_incoming_get' and count(parameter)=0]"
		[Register ("peer_info_incoming_get", "()J", "")]
		public static unsafe long Peer_info_incoming_get ()
		{
			const string __id = "peer_info_incoming_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_interesting_get' and count(parameter)=0]"
		[Register ("peer_info_interesting_get", "()J", "")]
		public static unsafe long Peer_info_interesting_get ()
		{
			const string __id = "peer_info_interesting_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_ip_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_ip_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)J", "")]
		public static unsafe long Peer_info_ip_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_ip_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_ip_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint']]"
		[Register ("peer_info_ip_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)V", "")]
		public static unsafe void Peer_info_ip_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, long p2, global::FrostWire.Libtorrent.Swig.Tcp_endpoint p3)
		{
			const string __id = "peer_info_ip_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_local_connection_get' and count(parameter)=0]"
		[Register ("peer_info_local_connection_get", "()J", "")]
		public static unsafe long Peer_info_local_connection_get ()
		{
			const string __id = "peer_info_local_connection_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_local_endpoint_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_local_endpoint_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)J", "")]
		public static unsafe long Peer_info_local_endpoint_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_local_endpoint_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_local_endpoint_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint']]"
		[Register ("peer_info_local_endpoint_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)V", "")]
		public static unsafe void Peer_info_local_endpoint_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, long p2, global::FrostWire.Libtorrent.Swig.Tcp_endpoint p3)
		{
			const string __id = "peer_info_local_endpoint_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_lsd_get' and count(parameter)=0]"
		[Register ("peer_info_lsd_get", "()J", "")]
		public static unsafe long Peer_info_lsd_get ()
		{
			const string __id = "peer_info_lsd_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_num_hashfails_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_num_hashfails_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_num_hashfails_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_num_hashfails_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_num_hashfails_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_num_hashfails_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_num_hashfails_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_num_hashfails_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_num_pieces_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_num_pieces_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_num_pieces_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_num_pieces_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_num_pieces_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_num_pieces_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_num_pieces_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_num_pieces_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_on_parole_get' and count(parameter)=0]"
		[Register ("peer_info_on_parole_get", "()J", "")]
		public static unsafe long Peer_info_on_parole_get ()
		{
			const string __id = "peer_info_on_parole_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_optimistic_unchoke_get' and count(parameter)=0]"
		[Register ("peer_info_optimistic_unchoke_get", "()J", "")]
		public static unsafe long Peer_info_optimistic_unchoke_get ()
		{
			const string __id = "peer_info_optimistic_unchoke_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_payload_down_speed_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_payload_down_speed_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_payload_down_speed_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_payload_down_speed_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_payload_down_speed_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_payload_down_speed_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_payload_down_speed_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_payload_down_speed_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_payload_up_speed_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_payload_up_speed_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_payload_up_speed_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_payload_up_speed_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_payload_up_speed_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_payload_up_speed_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_payload_up_speed_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_payload_up_speed_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_pending_disk_bytes_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_pending_disk_bytes_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_pending_disk_bytes_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_pending_disk_bytes_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_pending_disk_bytes_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_pending_disk_bytes_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_pending_disk_bytes_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_pending_disk_bytes_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_pending_disk_read_bytes_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_pending_disk_read_bytes_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_pending_disk_read_bytes_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_pending_disk_read_bytes_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_pending_disk_read_bytes_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_pending_disk_read_bytes_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_pending_disk_read_bytes_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_pending_disk_read_bytes_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_pex_get' and count(parameter)=0]"
		[Register ("peer_info_pex_get", "()J", "")]
		public static unsafe long Peer_info_pex_get ()
		{
			const string __id = "peer_info_pex_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_pid_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_pid_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)J", "")]
		public static unsafe long Peer_info_pid_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_pid_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_pid_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("peer_info_pid_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Peer_info_pid_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "peer_info_pid_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_pieces_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_pieces_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)J", "")]
		public static unsafe long Peer_info_pieces_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_pieces_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_pieces_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("peer_info_pieces_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V", "")]
		public static unsafe void Peer_info_pieces_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, long p2, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p3)
		{
			const string __id = "peer_info_pieces_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_plaintext_encrypted_get' and count(parameter)=0]"
		[Register ("peer_info_plaintext_encrypted_get", "()J", "")]
		public static unsafe long Peer_info_plaintext_encrypted_get ()
		{
			const string __id = "peer_info_plaintext_encrypted_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_progress_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_progress_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)F", "")]
		public static unsafe float Peer_info_progress_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_progress_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)F";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeSingleMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_progress_ppm_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_progress_ppm_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_progress_ppm_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_progress_ppm_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_progress_ppm_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_progress_ppm_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_progress_ppm_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_progress_ppm_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_progress_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='float']]"
		[Register ("peer_info_progress_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;F)V", "")]
		public static unsafe void Peer_info_progress_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, float p2)
		{
			const string __id = "peer_info_progress_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;F)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_queue_bytes_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_queue_bytes_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_queue_bytes_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_queue_bytes_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_queue_bytes_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_queue_bytes_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_queue_bytes_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_queue_bytes_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_rc4_encrypted_get' and count(parameter)=0]"
		[Register ("peer_info_rc4_encrypted_get", "()J", "")]
		public static unsafe long Peer_info_rc4_encrypted_get ()
		{
			const string __id = "peer_info_rc4_encrypted_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_read_state_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_read_state_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)J", "")]
		public static unsafe long Peer_info_read_state_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_read_state_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_read_state_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t']]"
		[Register ("peer_info_read_state_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)V", "")]
		public static unsafe void Peer_info_read_state_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, long p2, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p3)
		{
			const string __id = "peer_info_read_state_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_receive_buffer_size_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_receive_buffer_size_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_receive_buffer_size_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_receive_buffer_size_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_receive_buffer_size_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_receive_buffer_size_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_receive_buffer_size_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_receive_buffer_size_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_receive_buffer_watermark_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_receive_buffer_watermark_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_receive_buffer_watermark_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_receive_buffer_watermark_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_receive_buffer_watermark_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_receive_buffer_watermark_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_receive_buffer_watermark_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_receive_buffer_watermark_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_receive_quota_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_receive_quota_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_receive_quota_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_receive_quota_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_receive_quota_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_receive_quota_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_receive_quota_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_receive_quota_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_remote_choked_get' and count(parameter)=0]"
		[Register ("peer_info_remote_choked_get", "()J", "")]
		public static unsafe long Peer_info_remote_choked_get ()
		{
			const string __id = "peer_info_remote_choked_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_remote_interested_get' and count(parameter)=0]"
		[Register ("peer_info_remote_interested_get", "()J", "")]
		public static unsafe long Peer_info_remote_interested_get ()
		{
			const string __id = "peer_info_remote_interested_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_request_timeout_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_request_timeout_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_request_timeout_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_request_timeout_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_request_timeout_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_request_timeout_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_request_timeout_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_request_timeout_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_requests_in_buffer_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_requests_in_buffer_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_requests_in_buffer_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_requests_in_buffer_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_requests_in_buffer_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_requests_in_buffer_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_requests_in_buffer_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_requests_in_buffer_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_resume_data_get' and count(parameter)=0]"
		[Register ("peer_info_resume_data_get", "()J", "")]
		public static unsafe long Peer_info_resume_data_get ()
		{
			const string __id = "peer_info_resume_data_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_rtt_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_rtt_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_rtt_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_rtt_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_rtt_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_rtt_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_rtt_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_rtt_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_seed_get' and count(parameter)=0]"
		[Register ("peer_info_seed_get", "()J", "")]
		public static unsafe long Peer_info_seed_get ()
		{
			const string __id = "peer_info_seed_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_send_buffer_size_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_send_buffer_size_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_send_buffer_size_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_send_buffer_size_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_send_buffer_size_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_send_buffer_size_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_send_buffer_size_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_send_buffer_size_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_send_quota_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_send_quota_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_send_quota_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_send_quota_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_send_quota_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_send_quota_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_send_quota_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_send_quota_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_snubbed_get' and count(parameter)=0]"
		[Register ("peer_info_snubbed_get", "()J", "")]
		public static unsafe long Peer_info_snubbed_get ()
		{
			const string __id = "peer_info_snubbed_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_source_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_source_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)J", "")]
		public static unsafe long Peer_info_source_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_source_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_source_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t']]"
		[Register ("peer_info_source_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)V", "")]
		public static unsafe void Peer_info_source_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p3)
		{
			const string __id = "peer_info_source_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_ssl_socket_get' and count(parameter)=0]"
		[Register ("peer_info_ssl_socket_get", "()J", "")]
		public static unsafe long Peer_info_ssl_socket_get ()
		{
			const string __id = "peer_info_ssl_socket_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_standard_bittorrent_get' and count(parameter)=0]"
		[Register ("peer_info_standard_bittorrent_get", "()I", "")]
		public static unsafe int Peer_info_standard_bittorrent_get ()
		{
			const string __id = "peer_info_standard_bittorrent_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_supports_extensions_get' and count(parameter)=0]"
		[Register ("peer_info_supports_extensions_get", "()J", "")]
		public static unsafe long Peer_info_supports_extensions_get ()
		{
			const string __id = "peer_info_supports_extensions_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_target_dl_queue_length_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_target_dl_queue_length_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_target_dl_queue_length_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_target_dl_queue_length_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_target_dl_queue_length_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_target_dl_queue_length_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_target_dl_queue_length_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_target_dl_queue_length_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_timed_out_requests_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_timed_out_requests_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_timed_out_requests_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_timed_out_requests_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_timed_out_requests_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_timed_out_requests_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_timed_out_requests_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_timed_out_requests_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_total_download_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_total_download_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)J", "")]
		public static unsafe long Peer_info_total_download_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_total_download_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_total_download_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='long']]"
		[Register ("peer_info_total_download_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;J)V", "")]
		public static unsafe void Peer_info_total_download_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, long p2)
		{
			const string __id = "peer_info_total_download_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_total_upload_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_total_upload_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)J", "")]
		public static unsafe long Peer_info_total_upload_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_total_upload_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_total_upload_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='long']]"
		[Register ("peer_info_total_upload_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;J)V", "")]
		public static unsafe void Peer_info_total_upload_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, long p2)
		{
			const string __id = "peer_info_total_upload_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_tracker_get' and count(parameter)=0]"
		[Register ("peer_info_tracker_get", "()J", "")]
		public static unsafe long Peer_info_tracker_get ()
		{
			const string __id = "peer_info_tracker_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_up_speed_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_up_speed_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_up_speed_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_up_speed_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_up_speed_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_up_speed_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_up_speed_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_up_speed_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_upload_only_get' and count(parameter)=0]"
		[Register ("peer_info_upload_only_get", "()J", "")]
		public static unsafe long Peer_info_upload_only_get ()
		{
			const string __id = "peer_info_upload_only_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_upload_queue_length_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_upload_queue_length_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_upload_queue_length_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_upload_queue_length_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_upload_queue_length_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_upload_queue_length_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_upload_queue_length_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_upload_queue_length_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_upload_rate_peak_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_upload_rate_peak_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_upload_rate_peak_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_upload_rate_peak_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_upload_rate_peak_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_upload_rate_peak_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_upload_rate_peak_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_upload_rate_peak_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_used_receive_buffer_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_used_receive_buffer_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_used_receive_buffer_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_used_receive_buffer_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_used_receive_buffer_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_used_receive_buffer_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_used_receive_buffer_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_used_receive_buffer_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_used_send_buffer_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_used_send_buffer_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)I", "")]
		public static unsafe int Peer_info_used_send_buffer_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_used_send_buffer_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_used_send_buffer_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='int']]"
		[Register ("peer_info_used_send_buffer_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V", "")]
		public static unsafe void Peer_info_used_send_buffer_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, int p2)
		{
			const string __id = "peer_info_used_send_buffer_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_utp_socket_get' and count(parameter)=0]"
		[Register ("peer_info_utp_socket_get", "()J", "")]
		public static unsafe long Peer_info_utp_socket_get ()
		{
			const string __id = "peer_info_utp_socket_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info_vector']]"
		[Register ("peer_info_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;)J", "")]
		public static unsafe long Peer_info_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Peer_info_vector p1)
		{
			const string __id = "peer_info_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info_vector']]"
		[Register ("peer_info_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;)V", "")]
		public static unsafe void Peer_info_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Peer_info_vector p1)
		{
			const string __id = "peer_info_vector_clear.(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info_vector']]"
		[Register ("peer_info_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;)Z", "")]
		public static unsafe bool Peer_info_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Peer_info_vector p1)
		{
			const string __id = "peer_info_vector_empty.(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info_vector'] and parameter[3][@type='int']]"
		[Register ("peer_info_vector_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;I)J", "")]
		public static unsafe long Peer_info_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info_vector p1, int p2)
		{
			const string __id = "peer_info_vector_get.(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;JLcom/frostwire/jlibtorrent/swig/peer_info;)V", "")]
		public static unsafe void Peer_info_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Peer_info_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_info p3)
		{
			const string __id = "peer_info_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;JLcom/frostwire/jlibtorrent/swig/peer_info;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info_vector'] and parameter[3][@type='long']]"
		[Register ("peer_info_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;J)V", "")]
		public static unsafe void Peer_info_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Peer_info_vector p1, long p2)
		{
			const string __id = "peer_info_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_vector_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;IJLcom/frostwire/jlibtorrent/swig/peer_info;)V", "")]
		public static unsafe void Peer_info_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Peer_info p4)
		{
			const string __id = "peer_info_vector_set.(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;IJLcom/frostwire/jlibtorrent/swig/peer_info;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info_vector']]"
		[Register ("peer_info_vector_size", "(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;)J", "")]
		public static unsafe long Peer_info_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Peer_info_vector p1)
		{
			const string __id = "peer_info_vector_size.(JLcom/frostwire/jlibtorrent/swig/peer_info_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_web_seed_get' and count(parameter)=0]"
		[Register ("peer_info_web_seed_get", "()I", "")]
		public static unsafe int Peer_info_web_seed_get ()
		{
			const string __id = "peer_info_web_seed_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_write_state_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info']]"
		[Register ("peer_info_write_state_get", "(JLcom/frostwire/jlibtorrent/swig/peer_info;)J", "")]
		public static unsafe long Peer_info_write_state_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1)
		{
			const string __id = "peer_info_write_state_get.(JLcom/frostwire/jlibtorrent/swig/peer_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_info_write_state_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_info'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.bandwidth_state_flags_t']]"
		[Register ("peer_info_write_state_set", "(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)V", "")]
		public static unsafe void Peer_info_write_state_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_info p1, long p2, global::FrostWire.Libtorrent.Swig.Bandwidth_state_flags_t p3)
		{
			const string __id = "peer_info_write_state_set.(JLcom/frostwire/jlibtorrent/swig/peer_info;JLcom/frostwire/jlibtorrent/swig/bandwidth_state_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_log_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("peer_log_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Peer_log_alert_SWIGUpcast (long p0)
		{
			const string __id = "peer_log_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_log_alert_alert_type_get' and count(parameter)=0]"
		[Register ("peer_log_alert_alert_type_get", "()I", "")]
		public static unsafe int Peer_log_alert_alert_type_get ()
		{
			const string __id = "peer_log_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_log_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_log_alert']]"
		[Register ("peer_log_alert_category", "(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;)J", "")]
		public static unsafe long Peer_log_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Peer_log_alert p1)
		{
			const string __id = "peer_log_alert_category.(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_log_alert_direction_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_log_alert']]"
		[Register ("peer_log_alert_direction_get", "(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;)I", "")]
		public static unsafe int Peer_log_alert_direction_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_log_alert p1)
		{
			const string __id = "peer_log_alert_direction_get.(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_log_alert_direction_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_log_alert'] and parameter[3][@type='int']]"
		[Register ("peer_log_alert_direction_set", "(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;I)V", "")]
		public static unsafe void Peer_log_alert_direction_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_log_alert p1, int p2)
		{
			const string __id = "peer_log_alert_direction_set.(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_log_alert_get_event_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_log_alert']]"
		[Register ("peer_log_alert_get_event_type", "(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_log_alert_get_event_type (long p0, global::FrostWire.Libtorrent.Swig.Peer_log_alert p1)
		{
			const string __id = "peer_log_alert_get_event_type.(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_log_alert_log_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_log_alert']]"
		[Register ("peer_log_alert_log_message", "(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_log_alert_log_message (long p0, global::FrostWire.Libtorrent.Swig.Peer_log_alert p1)
		{
			const string __id = "peer_log_alert_log_message.(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_log_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_log_alert']]"
		[Register ("peer_log_alert_message", "(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_log_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Peer_log_alert p1)
		{
			const string __id = "peer_log_alert_message.(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_log_alert_priority_get' and count(parameter)=0]"
		[Register ("peer_log_alert_priority_get", "()I", "")]
		public static unsafe int Peer_log_alert_priority_get ()
		{
			const string __id = "peer_log_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_log_alert_static_category_get' and count(parameter)=0]"
		[Register ("peer_log_alert_static_category_get", "()J", "")]
		public static unsafe long Peer_log_alert_static_category_get ()
		{
			const string __id = "peer_log_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_log_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_log_alert']]"
		[Register ("peer_log_alert_type", "(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;)I", "")]
		public static unsafe int Peer_log_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Peer_log_alert p1)
		{
			const string __id = "peer_log_alert_type.(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_log_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_log_alert']]"
		[Register ("peer_log_alert_what", "(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_log_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Peer_log_alert p1)
		{
			const string __id = "peer_log_alert_what.(JLcom/frostwire/jlibtorrent/swig/peer_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_request_length_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_request']]"
		[Register ("peer_request_length_get", "(JLcom/frostwire/jlibtorrent/swig/peer_request;)I", "")]
		public static unsafe int Peer_request_length_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_request p1)
		{
			const string __id = "peer_request_length_get.(JLcom/frostwire/jlibtorrent/swig/peer_request;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_request_length_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_request'] and parameter[3][@type='int']]"
		[Register ("peer_request_length_set", "(JLcom/frostwire/jlibtorrent/swig/peer_request;I)V", "")]
		public static unsafe void Peer_request_length_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_request p1, int p2)
		{
			const string __id = "peer_request_length_set.(JLcom/frostwire/jlibtorrent/swig/peer_request;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_request_op_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_request'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_request']]"
		[Register ("peer_request_op_eq", "(JLcom/frostwire/jlibtorrent/swig/peer_request;JLcom/frostwire/jlibtorrent/swig/peer_request;)Z", "")]
		public static unsafe bool Peer_request_op_eq (long p0, global::FrostWire.Libtorrent.Swig.Peer_request p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_request p3)
		{
			const string __id = "peer_request_op_eq.(JLcom/frostwire/jlibtorrent/swig/peer_request;JLcom/frostwire/jlibtorrent/swig/peer_request;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_request_piece_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_request']]"
		[Register ("peer_request_piece_get", "(JLcom/frostwire/jlibtorrent/swig/peer_request;)I", "")]
		public static unsafe int Peer_request_piece_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_request p1)
		{
			const string __id = "peer_request_piece_get.(JLcom/frostwire/jlibtorrent/swig/peer_request;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_request_piece_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_request'] and parameter[3][@type='int']]"
		[Register ("peer_request_piece_set", "(JLcom/frostwire/jlibtorrent/swig/peer_request;I)V", "")]
		public static unsafe void Peer_request_piece_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_request p1, int p2)
		{
			const string __id = "peer_request_piece_set.(JLcom/frostwire/jlibtorrent/swig/peer_request;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_request_start_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_request']]"
		[Register ("peer_request_start_get", "(JLcom/frostwire/jlibtorrent/swig/peer_request;)I", "")]
		public static unsafe int Peer_request_start_get (long p0, global::FrostWire.Libtorrent.Swig.Peer_request p1)
		{
			const string __id = "peer_request_start_get.(JLcom/frostwire/jlibtorrent/swig/peer_request;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_request_start_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_request'] and parameter[3][@type='int']]"
		[Register ("peer_request_start_set", "(JLcom/frostwire/jlibtorrent/swig/peer_request;I)V", "")]
		public static unsafe void Peer_request_start_set (long p0, global::FrostWire.Libtorrent.Swig.Peer_request p1, int p2)
		{
			const string __id = "peer_request_start_set.(JLcom/frostwire/jlibtorrent/swig/peer_request;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_snubbed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("peer_snubbed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Peer_snubbed_alert_SWIGUpcast (long p0)
		{
			const string __id = "peer_snubbed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_snubbed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("peer_snubbed_alert_alert_type_get", "()I", "")]
		public static unsafe int Peer_snubbed_alert_alert_type_get ()
		{
			const string __id = "peer_snubbed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_snubbed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_snubbed_alert']]"
		[Register ("peer_snubbed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/peer_snubbed_alert;)J", "")]
		public static unsafe long Peer_snubbed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Peer_snubbed_alert p1)
		{
			const string __id = "peer_snubbed_alert_category.(JLcom/frostwire/jlibtorrent/swig/peer_snubbed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_snubbed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_snubbed_alert']]"
		[Register ("peer_snubbed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/peer_snubbed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_snubbed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Peer_snubbed_alert p1)
		{
			const string __id = "peer_snubbed_alert_message.(JLcom/frostwire/jlibtorrent/swig/peer_snubbed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_snubbed_alert_priority_get' and count(parameter)=0]"
		[Register ("peer_snubbed_alert_priority_get", "()I", "")]
		public static unsafe int Peer_snubbed_alert_priority_get ()
		{
			const string __id = "peer_snubbed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_snubbed_alert_static_category_get' and count(parameter)=0]"
		[Register ("peer_snubbed_alert_static_category_get", "()J", "")]
		public static unsafe long Peer_snubbed_alert_static_category_get ()
		{
			const string __id = "peer_snubbed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_snubbed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_snubbed_alert']]"
		[Register ("peer_snubbed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/peer_snubbed_alert;)I", "")]
		public static unsafe int Peer_snubbed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Peer_snubbed_alert p1)
		{
			const string __id = "peer_snubbed_alert_type.(JLcom/frostwire/jlibtorrent/swig/peer_snubbed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_snubbed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_snubbed_alert']]"
		[Register ("peer_snubbed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/peer_snubbed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_snubbed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Peer_snubbed_alert p1)
		{
			const string __id = "peer_snubbed_alert_what.(JLcom/frostwire/jlibtorrent/swig/peer_snubbed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_source_flags_t_all' and count(parameter)=0]"
		[Register ("peer_source_flags_t_all", "()J", "")]
		public static unsafe long Peer_source_flags_t_all ()
		{
			const string __id = "peer_source_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_source_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t']]"
		[Register ("peer_source_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)J", "")]
		public static unsafe long Peer_source_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p3)
		{
			const string __id = "peer_source_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_source_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t']]"
		[Register ("peer_source_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)Z", "")]
		public static unsafe bool Peer_source_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p3)
		{
			const string __id = "peer_source_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_source_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t']]"
		[Register ("peer_source_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)J", "")]
		public static unsafe long Peer_source_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p1)
		{
			const string __id = "peer_source_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_source_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t']]"
		[Register ("peer_source_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)Z", "")]
		public static unsafe bool Peer_source_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p3)
		{
			const string __id = "peer_source_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_source_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t']]"
		[Register ("peer_source_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)Z", "")]
		public static unsafe bool Peer_source_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p1)
		{
			const string __id = "peer_source_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_source_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t']]"
		[Register ("peer_source_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)J", "")]
		public static unsafe long Peer_source_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p3)
		{
			const string __id = "peer_source_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_source_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t']]"
		[Register ("peer_source_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)I", "")]
		public static unsafe int Peer_source_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p1)
		{
			const string __id = "peer_source_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_source_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t']]"
		[Register ("peer_source_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)J", "")]
		public static unsafe long Peer_source_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p3)
		{
			const string __id = "peer_source_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_unsnubbed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("peer_unsnubbed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Peer_unsnubbed_alert_SWIGUpcast (long p0)
		{
			const string __id = "peer_unsnubbed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_unsnubbed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("peer_unsnubbed_alert_alert_type_get", "()I", "")]
		public static unsafe int Peer_unsnubbed_alert_alert_type_get ()
		{
			const string __id = "peer_unsnubbed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_unsnubbed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_unsnubbed_alert']]"
		[Register ("peer_unsnubbed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/peer_unsnubbed_alert;)J", "")]
		public static unsafe long Peer_unsnubbed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Peer_unsnubbed_alert p1)
		{
			const string __id = "peer_unsnubbed_alert_category.(JLcom/frostwire/jlibtorrent/swig/peer_unsnubbed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_unsnubbed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_unsnubbed_alert']]"
		[Register ("peer_unsnubbed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/peer_unsnubbed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_unsnubbed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Peer_unsnubbed_alert p1)
		{
			const string __id = "peer_unsnubbed_alert_message.(JLcom/frostwire/jlibtorrent/swig/peer_unsnubbed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_unsnubbed_alert_priority_get' and count(parameter)=0]"
		[Register ("peer_unsnubbed_alert_priority_get", "()I", "")]
		public static unsafe int Peer_unsnubbed_alert_priority_get ()
		{
			const string __id = "peer_unsnubbed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_unsnubbed_alert_static_category_get' and count(parameter)=0]"
		[Register ("peer_unsnubbed_alert_static_category_get", "()J", "")]
		public static unsafe long Peer_unsnubbed_alert_static_category_get ()
		{
			const string __id = "peer_unsnubbed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_unsnubbed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_unsnubbed_alert']]"
		[Register ("peer_unsnubbed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/peer_unsnubbed_alert;)I", "")]
		public static unsafe int Peer_unsnubbed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Peer_unsnubbed_alert p1)
		{
			const string __id = "peer_unsnubbed_alert_type.(JLcom/frostwire/jlibtorrent/swig/peer_unsnubbed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='peer_unsnubbed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.peer_unsnubbed_alert']]"
		[Register ("peer_unsnubbed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/peer_unsnubbed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Peer_unsnubbed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Peer_unsnubbed_alert p1)
		{
			const string __id = "peer_unsnubbed_alert_what.(JLcom/frostwire/jlibtorrent/swig/peer_unsnubbed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='performance_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("performance_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Performance_alert_SWIGUpcast (long p0)
		{
			const string __id = "performance_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='performance_alert_alert_type_get' and count(parameter)=0]"
		[Register ("performance_alert_alert_type_get", "()I", "")]
		public static unsafe int Performance_alert_alert_type_get ()
		{
			const string __id = "performance_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='performance_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.performance_alert']]"
		[Register ("performance_alert_category", "(JLcom/frostwire/jlibtorrent/swig/performance_alert;)J", "")]
		public static unsafe long Performance_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Performance_alert p1)
		{
			const string __id = "performance_alert_category.(JLcom/frostwire/jlibtorrent/swig/performance_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='performance_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.performance_alert']]"
		[Register ("performance_alert_message", "(JLcom/frostwire/jlibtorrent/swig/performance_alert;)Ljava/lang/String;", "")]
		public static unsafe string Performance_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Performance_alert p1)
		{
			const string __id = "performance_alert_message.(JLcom/frostwire/jlibtorrent/swig/performance_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='performance_alert_priority_get' and count(parameter)=0]"
		[Register ("performance_alert_priority_get", "()I", "")]
		public static unsafe int Performance_alert_priority_get ()
		{
			const string __id = "performance_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='performance_alert_static_category_get' and count(parameter)=0]"
		[Register ("performance_alert_static_category_get", "()J", "")]
		public static unsafe long Performance_alert_static_category_get ()
		{
			const string __id = "performance_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='performance_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.performance_alert']]"
		[Register ("performance_alert_type", "(JLcom/frostwire/jlibtorrent/swig/performance_alert;)I", "")]
		public static unsafe int Performance_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Performance_alert p1)
		{
			const string __id = "performance_alert_type.(JLcom/frostwire/jlibtorrent/swig/performance_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='performance_alert_warning_code_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.performance_alert']]"
		[Register ("performance_alert_warning_code_get", "(JLcom/frostwire/jlibtorrent/swig/performance_alert;)I", "")]
		public static unsafe int Performance_alert_warning_code_get (long p0, global::FrostWire.Libtorrent.Swig.Performance_alert p1)
		{
			const string __id = "performance_alert_warning_code_get.(JLcom/frostwire/jlibtorrent/swig/performance_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='performance_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.performance_alert']]"
		[Register ("performance_alert_what", "(JLcom/frostwire/jlibtorrent/swig/performance_alert;)Ljava/lang/String;", "")]
		public static unsafe string Performance_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Performance_alert p1)
		{
			const string __id = "performance_alert_what.(JLcom/frostwire/jlibtorrent/swig/performance_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='permission_denied_get' and count(parameter)=0]"
		[Register ("permission_denied_get", "()I", "")]
		public static unsafe int Permission_denied_get ()
		{
			const string __id = "permission_denied_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pex_encryption_get' and count(parameter)=0]"
		[Register ("pex_encryption_get", "()J", "")]
		public static unsafe long Pex_encryption_get ()
		{
			const string __id = "pex_encryption_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pex_flags_t_all' and count(parameter)=0]"
		[Register ("pex_flags_t_all", "()J", "")]
		public static unsafe long Pex_flags_t_all ()
		{
			const string __id = "pex_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pex_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pex_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.pex_flags_t']]"
		[Register ("pex_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)J", "")]
		public static unsafe long Pex_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Pex_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Pex_flags_t p3)
		{
			const string __id = "pex_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pex_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pex_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.pex_flags_t']]"
		[Register ("pex_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)Z", "")]
		public static unsafe bool Pex_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Pex_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Pex_flags_t p3)
		{
			const string __id = "pex_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pex_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pex_flags_t']]"
		[Register ("pex_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)J", "")]
		public static unsafe long Pex_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Pex_flags_t p1)
		{
			const string __id = "pex_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pex_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pex_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.pex_flags_t']]"
		[Register ("pex_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)Z", "")]
		public static unsafe bool Pex_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Pex_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Pex_flags_t p3)
		{
			const string __id = "pex_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pex_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pex_flags_t']]"
		[Register ("pex_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)Z", "")]
		public static unsafe bool Pex_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Pex_flags_t p1)
		{
			const string __id = "pex_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pex_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pex_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.pex_flags_t']]"
		[Register ("pex_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)J", "")]
		public static unsafe long Pex_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Pex_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Pex_flags_t p3)
		{
			const string __id = "pex_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pex_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pex_flags_t']]"
		[Register ("pex_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)I", "")]
		public static unsafe int Pex_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Pex_flags_t p1)
		{
			const string __id = "pex_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pex_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.pex_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.pex_flags_t']]"
		[Register ("pex_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)J", "")]
		public static unsafe long Pex_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Pex_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Pex_flags_t p3)
		{
			const string __id = "pex_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/pex_flags_t;JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pex_holepunch_get' and count(parameter)=0]"
		[Register ("pex_holepunch_get", "()J", "")]
		public static unsafe long Pex_holepunch_get ()
		{
			const string __id = "pex_holepunch_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pex_seed_get' and count(parameter)=0]"
		[Register ("pex_seed_get", "()J", "")]
		public static unsafe long Pex_seed_get ()
		{
			const string __id = "pex_seed_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='pex_utp_get' and count(parameter)=0]"
		[Register ("pex_utp_get", "()J", "")]
		public static unsafe long Pex_utp_get ()
		{
			const string __id = "pex_utp_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_flags_t_all' and count(parameter)=0]"
		[Register ("picker_flags_t_all", "()J", "")]
		public static unsafe long Picker_flags_t_all ()
		{
			const string __id = "picker_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.picker_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.picker_flags_t']]"
		[Register ("picker_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)J", "")]
		public static unsafe long Picker_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Picker_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Picker_flags_t p3)
		{
			const string __id = "picker_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.picker_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.picker_flags_t']]"
		[Register ("picker_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)Z", "")]
		public static unsafe bool Picker_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Picker_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Picker_flags_t p3)
		{
			const string __id = "picker_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.picker_flags_t']]"
		[Register ("picker_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)J", "")]
		public static unsafe long Picker_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Picker_flags_t p1)
		{
			const string __id = "picker_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.picker_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.picker_flags_t']]"
		[Register ("picker_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)Z", "")]
		public static unsafe bool Picker_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Picker_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Picker_flags_t p3)
		{
			const string __id = "picker_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.picker_flags_t']]"
		[Register ("picker_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)Z", "")]
		public static unsafe bool Picker_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Picker_flags_t p1)
		{
			const string __id = "picker_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.picker_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.picker_flags_t']]"
		[Register ("picker_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)J", "")]
		public static unsafe long Picker_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Picker_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Picker_flags_t p3)
		{
			const string __id = "picker_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.picker_flags_t']]"
		[Register ("picker_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)I", "")]
		public static unsafe int Picker_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Picker_flags_t p1)
		{
			const string __id = "picker_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.picker_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.picker_flags_t']]"
		[Register ("picker_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)J", "")]
		public static unsafe long Picker_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Picker_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Picker_flags_t p3)
		{
			const string __id = "picker_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/picker_flags_t;JLcom/frostwire/jlibtorrent/swig/picker_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("picker_log_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Picker_log_alert_SWIGUpcast (long p0)
		{
			const string __id = "picker_log_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_alert_type_get' and count(parameter)=0]"
		[Register ("picker_log_alert_alert_type_get", "()I", "")]
		public static unsafe int Picker_log_alert_alert_type_get ()
		{
			const string __id = "picker_log_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_backup1_get' and count(parameter)=0]"
		[Register ("picker_log_alert_backup1_get", "()J", "")]
		public static unsafe long Picker_log_alert_backup1_get ()
		{
			const string __id = "picker_log_alert_backup1_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_backup2_get' and count(parameter)=0]"
		[Register ("picker_log_alert_backup2_get", "()J", "")]
		public static unsafe long Picker_log_alert_backup2_get ()
		{
			const string __id = "picker_log_alert_backup2_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.picker_log_alert']]"
		[Register ("picker_log_alert_category", "(JLcom/frostwire/jlibtorrent/swig/picker_log_alert;)J", "")]
		public static unsafe long Picker_log_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Picker_log_alert p1)
		{
			const string __id = "picker_log_alert_category.(JLcom/frostwire/jlibtorrent/swig/picker_log_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_end_game_get' and count(parameter)=0]"
		[Register ("picker_log_alert_end_game_get", "()J", "")]
		public static unsafe long Picker_log_alert_end_game_get ()
		{
			const string __id = "picker_log_alert_end_game_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.picker_log_alert']]"
		[Register ("picker_log_alert_message", "(JLcom/frostwire/jlibtorrent/swig/picker_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Picker_log_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Picker_log_alert p1)
		{
			const string __id = "picker_log_alert_message.(JLcom/frostwire/jlibtorrent/swig/picker_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_partial_ratio_get' and count(parameter)=0]"
		[Register ("picker_log_alert_partial_ratio_get", "()J", "")]
		public static unsafe long Picker_log_alert_partial_ratio_get ()
		{
			const string __id = "picker_log_alert_partial_ratio_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_picker_flags_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.picker_log_alert']]"
		[Register ("picker_log_alert_picker_flags_get", "(JLcom/frostwire/jlibtorrent/swig/picker_log_alert;)J", "")]
		public static unsafe long Picker_log_alert_picker_flags_get (long p0, global::FrostWire.Libtorrent.Swig.Picker_log_alert p1)
		{
			const string __id = "picker_log_alert_picker_flags_get.(JLcom/frostwire/jlibtorrent/swig/picker_log_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_prefer_contiguous_get' and count(parameter)=0]"
		[Register ("picker_log_alert_prefer_contiguous_get", "()J", "")]
		public static unsafe long Picker_log_alert_prefer_contiguous_get ()
		{
			const string __id = "picker_log_alert_prefer_contiguous_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_prio_sequential_pieces_get' and count(parameter)=0]"
		[Register ("picker_log_alert_prio_sequential_pieces_get", "()J", "")]
		public static unsafe long Picker_log_alert_prio_sequential_pieces_get ()
		{
			const string __id = "picker_log_alert_prio_sequential_pieces_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_prioritize_partials_get' and count(parameter)=0]"
		[Register ("picker_log_alert_prioritize_partials_get", "()J", "")]
		public static unsafe long Picker_log_alert_prioritize_partials_get ()
		{
			const string __id = "picker_log_alert_prioritize_partials_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_priority_get' and count(parameter)=0]"
		[Register ("picker_log_alert_priority_get", "()I", "")]
		public static unsafe int Picker_log_alert_priority_get ()
		{
			const string __id = "picker_log_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_random_pieces_get' and count(parameter)=0]"
		[Register ("picker_log_alert_random_pieces_get", "()J", "")]
		public static unsafe long Picker_log_alert_random_pieces_get ()
		{
			const string __id = "picker_log_alert_random_pieces_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_rarest_first_get' and count(parameter)=0]"
		[Register ("picker_log_alert_rarest_first_get", "()J", "")]
		public static unsafe long Picker_log_alert_rarest_first_get ()
		{
			const string __id = "picker_log_alert_rarest_first_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_rarest_first_partials_get' and count(parameter)=0]"
		[Register ("picker_log_alert_rarest_first_partials_get", "()J", "")]
		public static unsafe long Picker_log_alert_rarest_first_partials_get ()
		{
			const string __id = "picker_log_alert_rarest_first_partials_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_reverse_pieces_get' and count(parameter)=0]"
		[Register ("picker_log_alert_reverse_pieces_get", "()J", "")]
		public static unsafe long Picker_log_alert_reverse_pieces_get ()
		{
			const string __id = "picker_log_alert_reverse_pieces_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_reverse_rarest_first_get' and count(parameter)=0]"
		[Register ("picker_log_alert_reverse_rarest_first_get", "()J", "")]
		public static unsafe long Picker_log_alert_reverse_rarest_first_get ()
		{
			const string __id = "picker_log_alert_reverse_rarest_first_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_reverse_sequential_get' and count(parameter)=0]"
		[Register ("picker_log_alert_reverse_sequential_get", "()J", "")]
		public static unsafe long Picker_log_alert_reverse_sequential_get ()
		{
			const string __id = "picker_log_alert_reverse_sequential_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_sequential_pieces_get' and count(parameter)=0]"
		[Register ("picker_log_alert_sequential_pieces_get", "()J", "")]
		public static unsafe long Picker_log_alert_sequential_pieces_get ()
		{
			const string __id = "picker_log_alert_sequential_pieces_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_static_category_get' and count(parameter)=0]"
		[Register ("picker_log_alert_static_category_get", "()J", "")]
		public static unsafe long Picker_log_alert_static_category_get ()
		{
			const string __id = "picker_log_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_suggested_pieces_get' and count(parameter)=0]"
		[Register ("picker_log_alert_suggested_pieces_get", "()J", "")]
		public static unsafe long Picker_log_alert_suggested_pieces_get ()
		{
			const string __id = "picker_log_alert_suggested_pieces_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_time_critical_get' and count(parameter)=0]"
		[Register ("picker_log_alert_time_critical_get", "()J", "")]
		public static unsafe long Picker_log_alert_time_critical_get ()
		{
			const string __id = "picker_log_alert_time_critical_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.picker_log_alert']]"
		[Register ("picker_log_alert_type", "(JLcom/frostwire/jlibtorrent/swig/picker_log_alert;)I", "")]
		public static unsafe int Picker_log_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Picker_log_alert p1)
		{
			const string __id = "picker_log_alert_type.(JLcom/frostwire/jlibtorrent/swig/picker_log_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='picker_log_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.picker_log_alert']]"
		[Register ("picker_log_alert_what", "(JLcom/frostwire/jlibtorrent/swig/picker_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Picker_log_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Picker_log_alert p1)
		{
			const string __id = "picker_log_alert_what.(JLcom/frostwire/jlibtorrent/swig/picker_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_finished_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("piece_finished_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Piece_finished_alert_SWIGUpcast (long p0)
		{
			const string __id = "piece_finished_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_finished_alert_alert_type_get' and count(parameter)=0]"
		[Register ("piece_finished_alert_alert_type_get", "()I", "")]
		public static unsafe int Piece_finished_alert_alert_type_get ()
		{
			const string __id = "piece_finished_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_finished_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_finished_alert']]"
		[Register ("piece_finished_alert_category", "(JLcom/frostwire/jlibtorrent/swig/piece_finished_alert;)J", "")]
		public static unsafe long Piece_finished_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Piece_finished_alert p1)
		{
			const string __id = "piece_finished_alert_category.(JLcom/frostwire/jlibtorrent/swig/piece_finished_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_finished_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_finished_alert']]"
		[Register ("piece_finished_alert_message", "(JLcom/frostwire/jlibtorrent/swig/piece_finished_alert;)Ljava/lang/String;", "")]
		public static unsafe string Piece_finished_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Piece_finished_alert p1)
		{
			const string __id = "piece_finished_alert_message.(JLcom/frostwire/jlibtorrent/swig/piece_finished_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_finished_alert_piece_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_finished_alert']]"
		[Register ("piece_finished_alert_piece_index_get", "(JLcom/frostwire/jlibtorrent/swig/piece_finished_alert;)I", "")]
		public static unsafe int Piece_finished_alert_piece_index_get (long p0, global::FrostWire.Libtorrent.Swig.Piece_finished_alert p1)
		{
			const string __id = "piece_finished_alert_piece_index_get.(JLcom/frostwire/jlibtorrent/swig/piece_finished_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_finished_alert_priority_get' and count(parameter)=0]"
		[Register ("piece_finished_alert_priority_get", "()I", "")]
		public static unsafe int Piece_finished_alert_priority_get ()
		{
			const string __id = "piece_finished_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_finished_alert_static_category_get' and count(parameter)=0]"
		[Register ("piece_finished_alert_static_category_get", "()J", "")]
		public static unsafe long Piece_finished_alert_static_category_get ()
		{
			const string __id = "piece_finished_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_finished_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_finished_alert']]"
		[Register ("piece_finished_alert_type", "(JLcom/frostwire/jlibtorrent/swig/piece_finished_alert;)I", "")]
		public static unsafe int Piece_finished_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Piece_finished_alert p1)
		{
			const string __id = "piece_finished_alert_type.(JLcom/frostwire/jlibtorrent/swig/piece_finished_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_finished_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_finished_alert']]"
		[Register ("piece_finished_alert_what", "(JLcom/frostwire/jlibtorrent/swig/piece_finished_alert;)Ljava/lang/String;", "")]
		public static unsafe string Piece_finished_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Piece_finished_alert p1)
		{
			const string __id = "piece_finished_alert_what.(JLcom/frostwire/jlibtorrent/swig/piece_finished_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_all_set' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("piece_index_bitfield_all_set", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)Z", "")]
		public static unsafe bool Piece_index_bitfield_all_set (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1)
		{
			const string __id = "piece_index_bitfield_all_set.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("piece_index_bitfield_clear", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V", "")]
		public static unsafe void Piece_index_bitfield_clear (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1)
		{
			const string __id = "piece_index_bitfield_clear.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_clear_all' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("piece_index_bitfield_clear_all", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V", "")]
		public static unsafe void Piece_index_bitfield_clear_all (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1)
		{
			const string __id = "piece_index_bitfield_clear_all.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_clear_bit' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield'] and parameter[3][@type='int']]"
		[Register ("piece_index_bitfield_clear_bit", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;I)V", "")]
		public static unsafe void Piece_index_bitfield_clear_bit (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1, int p2)
		{
			const string __id = "piece_index_bitfield_clear_bit.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_count' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("piece_index_bitfield_count", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)I", "")]
		public static unsafe int Piece_index_bitfield_count (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1)
		{
			const string __id = "piece_index_bitfield_count.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("piece_index_bitfield_empty", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)Z", "")]
		public static unsafe bool Piece_index_bitfield_empty (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1)
		{
			const string __id = "piece_index_bitfield_empty.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_end_index' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("piece_index_bitfield_end_index", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)I", "")]
		public static unsafe int Piece_index_bitfield_end_index (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1)
		{
			const string __id = "piece_index_bitfield_end_index.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_find_first_set' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("piece_index_bitfield_find_first_set", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)I", "")]
		public static unsafe int Piece_index_bitfield_find_first_set (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1)
		{
			const string __id = "piece_index_bitfield_find_first_set.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_find_last_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("piece_index_bitfield_find_last_clear", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)I", "")]
		public static unsafe int Piece_index_bitfield_find_last_clear (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1)
		{
			const string __id = "piece_index_bitfield_find_last_clear.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_get_bit' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield'] and parameter[3][@type='int']]"
		[Register ("piece_index_bitfield_get_bit", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;I)Z", "")]
		public static unsafe bool Piece_index_bitfield_get_bit (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1, int p2)
		{
			const string __id = "piece_index_bitfield_get_bit.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_none_set' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("piece_index_bitfield_none_set", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)Z", "")]
		public static unsafe bool Piece_index_bitfield_none_set (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1)
		{
			const string __id = "piece_index_bitfield_none_set.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_num_words' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("piece_index_bitfield_num_words", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)I", "")]
		public static unsafe int Piece_index_bitfield_num_words (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1)
		{
			const string __id = "piece_index_bitfield_num_words.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_resize__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield'] and parameter[3][@type='int'] and parameter[4][@type='boolean']]"
		[Register ("piece_index_bitfield_resize__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;IZ)V", "")]
		public static unsafe void Piece_index_bitfield_resize__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1, int p2, bool p3)
		{
			const string __id = "piece_index_bitfield_resize__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;IZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_resize__SWIG_1' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield'] and parameter[3][@type='int']]"
		[Register ("piece_index_bitfield_resize__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;I)V", "")]
		public static unsafe void Piece_index_bitfield_resize__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1, int p2)
		{
			const string __id = "piece_index_bitfield_resize__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_set_all' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("piece_index_bitfield_set_all", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V", "")]
		public static unsafe void Piece_index_bitfield_set_all (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1)
		{
			const string __id = "piece_index_bitfield_set_all.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_set_bit' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield'] and parameter[3][@type='int']]"
		[Register ("piece_index_bitfield_set_bit", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;I)V", "")]
		public static unsafe void Piece_index_bitfield_set_bit (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1, int p2)
		{
			const string __id = "piece_index_bitfield_set_bit.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_bitfield_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("piece_index_bitfield_size", "(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)I", "")]
		public static unsafe int Piece_index_bitfield_size (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p1)
		{
			const string __id = "piece_index_bitfield_size.(JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_int_pair_first_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair']]"
		[Register ("piece_index_int_pair_first_get", "(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair;)I", "")]
		public static unsafe int Piece_index_int_pair_first_get (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair p1)
		{
			const string __id = "piece_index_int_pair_first_get.(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_int_pair_first_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair'] and parameter[3][@type='int']]"
		[Register ("piece_index_int_pair_first_set", "(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair;I)V", "")]
		public static unsafe void Piece_index_int_pair_first_set (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair p1, int p2)
		{
			const string __id = "piece_index_int_pair_first_set.(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_int_pair_second_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair']]"
		[Register ("piece_index_int_pair_second_get", "(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair;)I", "")]
		public static unsafe int Piece_index_int_pair_second_get (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair p1)
		{
			const string __id = "piece_index_int_pair_second_get.(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_int_pair_second_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair'] and parameter[3][@type='int']]"
		[Register ("piece_index_int_pair_second_set", "(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair;I)V", "")]
		public static unsafe void Piece_index_int_pair_second_set (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair p1, int p2)
		{
			const string __id = "piece_index_int_pair_second_set.(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_int_pair_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair_vector']]"
		[Register ("piece_index_int_pair_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;)J", "")]
		public static unsafe long Piece_index_int_pair_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair_vector p1)
		{
			const string __id = "piece_index_int_pair_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_int_pair_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair_vector']]"
		[Register ("piece_index_int_pair_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;)V", "")]
		public static unsafe void Piece_index_int_pair_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair_vector p1)
		{
			const string __id = "piece_index_int_pair_vector_clear.(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_int_pair_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair_vector']]"
		[Register ("piece_index_int_pair_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;)Z", "")]
		public static unsafe bool Piece_index_int_pair_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair_vector p1)
		{
			const string __id = "piece_index_int_pair_vector_empty.(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_int_pair_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair_vector'] and parameter[3][@type='int']]"
		[Register ("piece_index_int_pair_vector_get", "(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;I)J", "")]
		public static unsafe long Piece_index_int_pair_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair_vector p1, int p2)
		{
			const string __id = "piece_index_int_pair_vector_get.(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_int_pair_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair']]"
		[Register ("piece_index_int_pair_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair;)V", "")]
		public static unsafe void Piece_index_int_pair_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair p3)
		{
			const string __id = "piece_index_int_pair_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_int_pair_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair_vector'] and parameter[3][@type='long']]"
		[Register ("piece_index_int_pair_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;J)V", "")]
		public static unsafe void Piece_index_int_pair_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair_vector p1, long p2)
		{
			const string __id = "piece_index_int_pair_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_int_pair_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair']]"
		[Register ("piece_index_int_pair_vector_set", "(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;IJLcom/frostwire/jlibtorrent/swig/piece_index_int_pair;)V", "")]
		public static unsafe void Piece_index_int_pair_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair p4)
		{
			const string __id = "piece_index_int_pair_vector_set.(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;IJLcom/frostwire/jlibtorrent/swig/piece_index_int_pair;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_int_pair_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair_vector']]"
		[Register ("piece_index_int_pair_vector_size", "(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;)J", "")]
		public static unsafe long Piece_index_int_pair_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair_vector p1)
		{
			const string __id = "piece_index_int_pair_vector_size.(JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_vector']]"
		[Register ("piece_index_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;)J", "")]
		public static unsafe long Piece_index_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_vector p1)
		{
			const string __id = "piece_index_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_vector']]"
		[Register ("piece_index_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;)V", "")]
		public static unsafe void Piece_index_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_vector p1)
		{
			const string __id = "piece_index_vector_clear.(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_vector']]"
		[Register ("piece_index_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;)Z", "")]
		public static unsafe bool Piece_index_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_vector p1)
		{
			const string __id = "piece_index_vector_empty.(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_vector'] and parameter[3][@type='int']]"
		[Register ("piece_index_vector_get", "(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;I)I", "")]
		public static unsafe int Piece_index_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_vector p1, int p2)
		{
			const string __id = "piece_index_vector_get.(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_vector_push_back' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_vector'] and parameter[3][@type='int']]"
		[Register ("piece_index_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;I)V", "")]
		public static unsafe void Piece_index_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_vector p1, int p2)
		{
			const string __id = "piece_index_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_vector'] and parameter[3][@type='long']]"
		[Register ("piece_index_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;J)V", "")]
		public static unsafe void Piece_index_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_vector p1, long p2)
		{
			const string __id = "piece_index_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_vector_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_vector'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("piece_index_vector_set", "(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;II)V", "")]
		public static unsafe void Piece_index_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_vector p1, int p2, int p3)
		{
			const string __id = "piece_index_vector_set.(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='piece_index_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.piece_index_vector']]"
		[Register ("piece_index_vector_size", "(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;)J", "")]
		public static unsafe long Piece_index_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Piece_index_vector p1)
		{
			const string __id = "piece_index_vector_size.(JLcom/frostwire/jlibtorrent/swig/piece_index_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='port_filter_access' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.port_filter'] and parameter[3][@type='int']]"
		[Register ("port_filter_access", "(JLcom/frostwire/jlibtorrent/swig/port_filter;I)J", "")]
		public static unsafe long Port_filter_access (long p0, global::FrostWire.Libtorrent.Swig.Port_filter p1, int p2)
		{
			const string __id = "port_filter_access.(JLcom/frostwire/jlibtorrent/swig/port_filter;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='port_filter_add_rule' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.port_filter'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='long']]"
		[Register ("port_filter_add_rule", "(JLcom/frostwire/jlibtorrent/swig/port_filter;IIJ)V", "")]
		public static unsafe void Port_filter_add_rule (long p0, global::FrostWire.Libtorrent.Swig.Port_filter p1, int p2, int p3, long p4)
		{
			const string __id = "port_filter_add_rule.(JLcom/frostwire/jlibtorrent/swig/port_filter;IIJ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='port_filter_blocked_get' and count(parameter)=0]"
		[Register ("port_filter_blocked_get", "()I", "")]
		public static unsafe int Port_filter_blocked_get ()
		{
			const string __id = "port_filter_blocked_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='port_mapping_t_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.port_mapping_t_vector']]"
		[Register ("port_mapping_t_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;)J", "")]
		public static unsafe long Port_mapping_t_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Port_mapping_t_vector p1)
		{
			const string __id = "port_mapping_t_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='port_mapping_t_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.port_mapping_t_vector']]"
		[Register ("port_mapping_t_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;)V", "")]
		public static unsafe void Port_mapping_t_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Port_mapping_t_vector p1)
		{
			const string __id = "port_mapping_t_vector_clear.(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='port_mapping_t_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.port_mapping_t_vector']]"
		[Register ("port_mapping_t_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;)Z", "")]
		public static unsafe bool Port_mapping_t_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Port_mapping_t_vector p1)
		{
			const string __id = "port_mapping_t_vector_empty.(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='port_mapping_t_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.port_mapping_t_vector'] and parameter[3][@type='int']]"
		[Register ("port_mapping_t_vector_get", "(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;I)I", "")]
		public static unsafe int Port_mapping_t_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Port_mapping_t_vector p1, int p2)
		{
			const string __id = "port_mapping_t_vector_get.(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='port_mapping_t_vector_push_back' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.port_mapping_t_vector'] and parameter[3][@type='int']]"
		[Register ("port_mapping_t_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;I)V", "")]
		public static unsafe void Port_mapping_t_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Port_mapping_t_vector p1, int p2)
		{
			const string __id = "port_mapping_t_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='port_mapping_t_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.port_mapping_t_vector'] and parameter[3][@type='long']]"
		[Register ("port_mapping_t_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;J)V", "")]
		public static unsafe void Port_mapping_t_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Port_mapping_t_vector p1, long p2)
		{
			const string __id = "port_mapping_t_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='port_mapping_t_vector_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.port_mapping_t_vector'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("port_mapping_t_vector_set", "(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;II)V", "")]
		public static unsafe void Port_mapping_t_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Port_mapping_t_vector p1, int p2, int p3)
		{
			const string __id = "port_mapping_t_vector_set.(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='port_mapping_t_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.port_mapping_t_vector']]"
		[Register ("port_mapping_t_vector_size", "(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;)J", "")]
		public static unsafe long Port_mapping_t_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Port_mapping_t_vector p1)
		{
			const string __id = "port_mapping_t_vector_size.(JLcom/frostwire/jlibtorrent/swig/port_mapping_t_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("portmap_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Portmap_alert_SWIGUpcast (long p0)
		{
			const string __id = "portmap_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_alert_alert_type_get' and count(parameter)=0]"
		[Register ("portmap_alert_alert_type_get", "()I", "")]
		public static unsafe int Portmap_alert_alert_type_get ()
		{
			const string __id = "portmap_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_alert']]"
		[Register ("portmap_alert_category", "(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)J", "")]
		public static unsafe long Portmap_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Portmap_alert p1)
		{
			const string __id = "portmap_alert_category.(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_alert_external_port_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_alert']]"
		[Register ("portmap_alert_external_port_get", "(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)I", "")]
		public static unsafe int Portmap_alert_external_port_get (long p0, global::FrostWire.Libtorrent.Swig.Portmap_alert p1)
		{
			const string __id = "portmap_alert_external_port_get.(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_alert_map_protocol_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_alert']]"
		[Register ("portmap_alert_map_protocol_get", "(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)I", "")]
		public static unsafe int Portmap_alert_map_protocol_get (long p0, global::FrostWire.Libtorrent.Swig.Portmap_alert p1)
		{
			const string __id = "portmap_alert_map_protocol_get.(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_alert_map_transport_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_alert']]"
		[Register ("portmap_alert_map_transport_get", "(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)I", "")]
		public static unsafe int Portmap_alert_map_transport_get (long p0, global::FrostWire.Libtorrent.Swig.Portmap_alert p1)
		{
			const string __id = "portmap_alert_map_transport_get.(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_alert_mapping_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_alert']]"
		[Register ("portmap_alert_mapping_get", "(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)I", "")]
		public static unsafe int Portmap_alert_mapping_get (long p0, global::FrostWire.Libtorrent.Swig.Portmap_alert p1)
		{
			const string __id = "portmap_alert_mapping_get.(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_alert']]"
		[Register ("portmap_alert_message", "(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)Ljava/lang/String;", "")]
		public static unsafe string Portmap_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Portmap_alert p1)
		{
			const string __id = "portmap_alert_message.(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_alert_priority_get' and count(parameter)=0]"
		[Register ("portmap_alert_priority_get", "()I", "")]
		public static unsafe int Portmap_alert_priority_get ()
		{
			const string __id = "portmap_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_alert_static_category_get' and count(parameter)=0]"
		[Register ("portmap_alert_static_category_get", "()J", "")]
		public static unsafe long Portmap_alert_static_category_get ()
		{
			const string __id = "portmap_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_alert']]"
		[Register ("portmap_alert_type", "(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)I", "")]
		public static unsafe int Portmap_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Portmap_alert p1)
		{
			const string __id = "portmap_alert_type.(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_alert']]"
		[Register ("portmap_alert_what", "(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)Ljava/lang/String;", "")]
		public static unsafe string Portmap_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Portmap_alert p1)
		{
			const string __id = "portmap_alert_what.(JLcom/frostwire/jlibtorrent/swig/portmap_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_error_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("portmap_error_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Portmap_error_alert_SWIGUpcast (long p0)
		{
			const string __id = "portmap_error_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_error_alert_alert_type_get' and count(parameter)=0]"
		[Register ("portmap_error_alert_alert_type_get", "()I", "")]
		public static unsafe int Portmap_error_alert_alert_type_get ()
		{
			const string __id = "portmap_error_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_error_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_error_alert']]"
		[Register ("portmap_error_alert_category", "(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;)J", "")]
		public static unsafe long Portmap_error_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Portmap_error_alert p1)
		{
			const string __id = "portmap_error_alert_category.(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_error_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_error_alert']]"
		[Register ("portmap_error_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;)J", "")]
		public static unsafe long Portmap_error_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Portmap_error_alert p1)
		{
			const string __id = "portmap_error_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_error_alert_map_transport_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_error_alert']]"
		[Register ("portmap_error_alert_map_transport_get", "(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;)I", "")]
		public static unsafe int Portmap_error_alert_map_transport_get (long p0, global::FrostWire.Libtorrent.Swig.Portmap_error_alert p1)
		{
			const string __id = "portmap_error_alert_map_transport_get.(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_error_alert_map_transport_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_error_alert'] and parameter[3][@type='int']]"
		[Register ("portmap_error_alert_map_transport_set", "(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;I)V", "")]
		public static unsafe void Portmap_error_alert_map_transport_set (long p0, global::FrostWire.Libtorrent.Swig.Portmap_error_alert p1, int p2)
		{
			const string __id = "portmap_error_alert_map_transport_set.(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_error_alert_mapping_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_error_alert']]"
		[Register ("portmap_error_alert_mapping_get", "(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;)I", "")]
		public static unsafe int Portmap_error_alert_mapping_get (long p0, global::FrostWire.Libtorrent.Swig.Portmap_error_alert p1)
		{
			const string __id = "portmap_error_alert_mapping_get.(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_error_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_error_alert']]"
		[Register ("portmap_error_alert_message", "(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Portmap_error_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Portmap_error_alert p1)
		{
			const string __id = "portmap_error_alert_message.(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_error_alert_priority_get' and count(parameter)=0]"
		[Register ("portmap_error_alert_priority_get", "()I", "")]
		public static unsafe int Portmap_error_alert_priority_get ()
		{
			const string __id = "portmap_error_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_error_alert_static_category_get' and count(parameter)=0]"
		[Register ("portmap_error_alert_static_category_get", "()J", "")]
		public static unsafe long Portmap_error_alert_static_category_get ()
		{
			const string __id = "portmap_error_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_error_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_error_alert']]"
		[Register ("portmap_error_alert_type", "(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;)I", "")]
		public static unsafe int Portmap_error_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Portmap_error_alert p1)
		{
			const string __id = "portmap_error_alert_type.(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_error_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_error_alert']]"
		[Register ("portmap_error_alert_what", "(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Portmap_error_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Portmap_error_alert p1)
		{
			const string __id = "portmap_error_alert_what.(JLcom/frostwire/jlibtorrent/swig/portmap_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_log_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("portmap_log_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Portmap_log_alert_SWIGUpcast (long p0)
		{
			const string __id = "portmap_log_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_log_alert_alert_type_get' and count(parameter)=0]"
		[Register ("portmap_log_alert_alert_type_get", "()I", "")]
		public static unsafe int Portmap_log_alert_alert_type_get ()
		{
			const string __id = "portmap_log_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_log_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_log_alert']]"
		[Register ("portmap_log_alert_category", "(JLcom/frostwire/jlibtorrent/swig/portmap_log_alert;)J", "")]
		public static unsafe long Portmap_log_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Portmap_log_alert p1)
		{
			const string __id = "portmap_log_alert_category.(JLcom/frostwire/jlibtorrent/swig/portmap_log_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_log_alert_log_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_log_alert']]"
		[Register ("portmap_log_alert_log_message", "(JLcom/frostwire/jlibtorrent/swig/portmap_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Portmap_log_alert_log_message (long p0, global::FrostWire.Libtorrent.Swig.Portmap_log_alert p1)
		{
			const string __id = "portmap_log_alert_log_message.(JLcom/frostwire/jlibtorrent/swig/portmap_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_log_alert_map_transport_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_log_alert']]"
		[Register ("portmap_log_alert_map_transport_get", "(JLcom/frostwire/jlibtorrent/swig/portmap_log_alert;)I", "")]
		public static unsafe int Portmap_log_alert_map_transport_get (long p0, global::FrostWire.Libtorrent.Swig.Portmap_log_alert p1)
		{
			const string __id = "portmap_log_alert_map_transport_get.(JLcom/frostwire/jlibtorrent/swig/portmap_log_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_log_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_log_alert']]"
		[Register ("portmap_log_alert_message", "(JLcom/frostwire/jlibtorrent/swig/portmap_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Portmap_log_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Portmap_log_alert p1)
		{
			const string __id = "portmap_log_alert_message.(JLcom/frostwire/jlibtorrent/swig/portmap_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_log_alert_priority_get' and count(parameter)=0]"
		[Register ("portmap_log_alert_priority_get", "()I", "")]
		public static unsafe int Portmap_log_alert_priority_get ()
		{
			const string __id = "portmap_log_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_log_alert_static_category_get' and count(parameter)=0]"
		[Register ("portmap_log_alert_static_category_get", "()J", "")]
		public static unsafe long Portmap_log_alert_static_category_get ()
		{
			const string __id = "portmap_log_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_log_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_log_alert']]"
		[Register ("portmap_log_alert_type", "(JLcom/frostwire/jlibtorrent/swig/portmap_log_alert;)I", "")]
		public static unsafe int Portmap_log_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Portmap_log_alert p1)
		{
			const string __id = "portmap_log_alert_type.(JLcom/frostwire/jlibtorrent/swig/portmap_log_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='portmap_log_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.portmap_log_alert']]"
		[Register ("portmap_log_alert_what", "(JLcom/frostwire/jlibtorrent/swig/portmap_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Portmap_log_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Portmap_log_alert p1)
		{
			const string __id = "portmap_log_alert_what.(JLcom/frostwire/jlibtorrent/swig/portmap_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_stat_t_atime_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_stat_t']]"
		[Register ("posix_stat_t_atime_get", "(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;)J", "")]
		public static unsafe long Posix_stat_t_atime_get (long p0, global::FrostWire.Libtorrent.Swig.Posix_stat_t p1)
		{
			const string __id = "posix_stat_t_atime_get.(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_stat_t_atime_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_stat_t'] and parameter[3][@type='long']]"
		[Register ("posix_stat_t_atime_set", "(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;J)V", "")]
		public static unsafe void Posix_stat_t_atime_set (long p0, global::FrostWire.Libtorrent.Swig.Posix_stat_t p1, long p2)
		{
			const string __id = "posix_stat_t_atime_set.(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_stat_t_ctime_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_stat_t']]"
		[Register ("posix_stat_t_ctime_get", "(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;)J", "")]
		public static unsafe long Posix_stat_t_ctime_get (long p0, global::FrostWire.Libtorrent.Swig.Posix_stat_t p1)
		{
			const string __id = "posix_stat_t_ctime_get.(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_stat_t_ctime_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_stat_t'] and parameter[3][@type='long']]"
		[Register ("posix_stat_t_ctime_set", "(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;J)V", "")]
		public static unsafe void Posix_stat_t_ctime_set (long p0, global::FrostWire.Libtorrent.Swig.Posix_stat_t p1, long p2)
		{
			const string __id = "posix_stat_t_ctime_set.(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_stat_t_mode_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_stat_t']]"
		[Register ("posix_stat_t_mode_get", "(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;)I", "")]
		public static unsafe int Posix_stat_t_mode_get (long p0, global::FrostWire.Libtorrent.Swig.Posix_stat_t p1)
		{
			const string __id = "posix_stat_t_mode_get.(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_stat_t_mode_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_stat_t'] and parameter[3][@type='int']]"
		[Register ("posix_stat_t_mode_set", "(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;I)V", "")]
		public static unsafe void Posix_stat_t_mode_set (long p0, global::FrostWire.Libtorrent.Swig.Posix_stat_t p1, int p2)
		{
			const string __id = "posix_stat_t_mode_set.(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_stat_t_mtime_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_stat_t']]"
		[Register ("posix_stat_t_mtime_get", "(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;)J", "")]
		public static unsafe long Posix_stat_t_mtime_get (long p0, global::FrostWire.Libtorrent.Swig.Posix_stat_t p1)
		{
			const string __id = "posix_stat_t_mtime_get.(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_stat_t_mtime_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_stat_t'] and parameter[3][@type='long']]"
		[Register ("posix_stat_t_mtime_set", "(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;J)V", "")]
		public static unsafe void Posix_stat_t_mtime_set (long p0, global::FrostWire.Libtorrent.Swig.Posix_stat_t p1, long p2)
		{
			const string __id = "posix_stat_t_mtime_set.(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_stat_t_size_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_stat_t']]"
		[Register ("posix_stat_t_size_get", "(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;)J", "")]
		public static unsafe long Posix_stat_t_size_get (long p0, global::FrostWire.Libtorrent.Swig.Posix_stat_t p1)
		{
			const string __id = "posix_stat_t_size_get.(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_stat_t_size_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_stat_t'] and parameter[3][@type='long']]"
		[Register ("posix_stat_t_size_set", "(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;J)V", "")]
		public static unsafe void Posix_stat_t_size_set (long p0, global::FrostWire.Libtorrent.Swig.Posix_stat_t p1, long p2)
		{
			const string __id = "posix_stat_t_size_set.(JLcom/frostwire/jlibtorrent/swig/posix_stat_t;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_wrapper_change_ownership' and count(parameter)=3 and parameter[1][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[2][@type='long'] and parameter[3][@type='boolean']]"
		[Register ("posix_wrapper_change_ownership", "(Lcom/frostwire/jlibtorrent/swig/posix_wrapper;JZ)V", "")]
		public static unsafe void Posix_wrapper_change_ownership (global::FrostWire.Libtorrent.Swig.Posix_wrapper p0, long p1, bool p2)
		{
			const string __id = "posix_wrapper_change_ownership.(Lcom/frostwire/jlibtorrent/swig/posix_wrapper;JZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_wrapper_director_connect' and count(parameter)=4 and parameter[1][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[2][@type='long'] and parameter[3][@type='boolean'] and parameter[4][@type='boolean']]"
		[Register ("posix_wrapper_director_connect", "(Lcom/frostwire/jlibtorrent/swig/posix_wrapper;JZZ)V", "")]
		public static unsafe void Posix_wrapper_director_connect (global::FrostWire.Libtorrent.Swig.Posix_wrapper p0, long p1, bool p2, bool p3)
		{
			const string __id = "posix_wrapper_director_connect.(Lcom/frostwire/jlibtorrent/swig/posix_wrapper;JZZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_wrapper_mkdir' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int']]"
		[Register ("posix_wrapper_mkdir", "(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;I)I", "")]
		public static unsafe int Posix_wrapper_mkdir (long p0, global::FrostWire.Libtorrent.Swig.Posix_wrapper p1, string p2, int p3)
		{
			const string __id = "posix_wrapper_mkdir.(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;I)I";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_wrapper_mkdirSwigExplicitposix_wrapper' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int']]"
		[Register ("posix_wrapper_mkdirSwigExplicitposix_wrapper", "(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;I)I", "")]
		public static unsafe int Posix_wrapper_mkdirSwigExplicitposix_wrapper (long p0, global::FrostWire.Libtorrent.Swig.Posix_wrapper p1, string p2, int p3)
		{
			const string __id = "posix_wrapper_mkdirSwigExplicitposix_wrapper.(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;I)I";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_wrapper_open' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int'] and parameter[5][@type='int']]"
		[Register ("posix_wrapper_open", "(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;II)I", "")]
		public static unsafe int Posix_wrapper_open (long p0, global::FrostWire.Libtorrent.Swig.Posix_wrapper p1, string p2, int p3, int p4)
		{
			const string __id = "posix_wrapper_open.(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;II)I";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_wrapper_openSwigExplicitposix_wrapper' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int'] and parameter[5][@type='int']]"
		[Register ("posix_wrapper_openSwigExplicitposix_wrapper", "(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;II)I", "")]
		public static unsafe int Posix_wrapper_openSwigExplicitposix_wrapper (long p0, global::FrostWire.Libtorrent.Swig.Posix_wrapper p1, string p2, int p3, int p4)
		{
			const string __id = "posix_wrapper_openSwigExplicitposix_wrapper.(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;II)I";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_wrapper_remove' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[3][@type='java.lang.String']]"
		[Register ("posix_wrapper_remove", "(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;)I", "")]
		public static unsafe int Posix_wrapper_remove (long p0, global::FrostWire.Libtorrent.Swig.Posix_wrapper p1, string p2)
		{
			const string __id = "posix_wrapper_remove.(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;)I";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_wrapper_removeSwigExplicitposix_wrapper' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[3][@type='java.lang.String']]"
		[Register ("posix_wrapper_removeSwigExplicitposix_wrapper", "(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;)I", "")]
		public static unsafe int Posix_wrapper_removeSwigExplicitposix_wrapper (long p0, global::FrostWire.Libtorrent.Swig.Posix_wrapper p1, string p2)
		{
			const string __id = "posix_wrapper_removeSwigExplicitposix_wrapper.(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;)I";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_wrapper_rename' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("posix_wrapper_rename", "(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;Ljava/lang/String;)I", "")]
		public static unsafe int Posix_wrapper_rename (long p0, global::FrostWire.Libtorrent.Swig.Posix_wrapper p1, string p2, string p3)
		{
			const string __id = "posix_wrapper_rename.(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;Ljava/lang/String;)I";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (native_p3);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_wrapper_renameSwigExplicitposix_wrapper' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("posix_wrapper_renameSwigExplicitposix_wrapper", "(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;Ljava/lang/String;)I", "")]
		public static unsafe int Posix_wrapper_renameSwigExplicitposix_wrapper (long p0, global::FrostWire.Libtorrent.Swig.Posix_wrapper p1, string p2, string p3)
		{
			const string __id = "posix_wrapper_renameSwigExplicitposix_wrapper.(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;Ljava/lang/String;)I";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (native_p3);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_wrapper_stat' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.posix_stat_t']]"
		[Register ("posix_wrapper_stat", "(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/posix_stat_t;)I", "")]
		public static unsafe int Posix_wrapper_stat (long p0, global::FrostWire.Libtorrent.Swig.Posix_wrapper p1, string p2, long p3, global::FrostWire.Libtorrent.Swig.Posix_stat_t p4)
		{
			const string __id = "posix_wrapper_stat.(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/posix_stat_t;)I";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='posix_wrapper_statSwigExplicitposix_wrapper' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_wrapper'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.posix_stat_t']]"
		[Register ("posix_wrapper_statSwigExplicitposix_wrapper", "(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/posix_stat_t;)I", "")]
		public static unsafe int Posix_wrapper_statSwigExplicitposix_wrapper (long p0, global::FrostWire.Libtorrent.Swig.Posix_wrapper p1, string p2, long p3, global::FrostWire.Libtorrent.Swig.Posix_stat_t p4)
		{
			const string __id = "posix_wrapper_statSwigExplicitposix_wrapper.(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/posix_stat_t;)I";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='protocol_error_get' and count(parameter)=0]"
		[Register ("protocol_error_get", "()I", "")]
		public static unsafe int Protocol_error_get ()
		{
			const string __id = "protocol_error_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='protocol_not_supported_get' and count(parameter)=0]"
		[Register ("protocol_not_supported_get", "()I", "")]
		public static unsafe int Protocol_not_supported_get ()
		{
			const string __id = "protocol_not_supported_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_only_file_system_get' and count(parameter)=0]"
		[Register ("read_only_file_system_get", "()I", "")]
		public static unsafe int Read_only_file_system_get ()
		{
			const string __id = "read_only_file_system_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_piece_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("read_piece_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Read_piece_alert_SWIGUpcast (long p0)
		{
			const string __id = "read_piece_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_piece_alert_alert_type_get' and count(parameter)=0]"
		[Register ("read_piece_alert_alert_type_get", "()I", "")]
		public static unsafe int Read_piece_alert_alert_type_get ()
		{
			const string __id = "read_piece_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_piece_alert_buffer_ptr' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.read_piece_alert']]"
		[Register ("read_piece_alert_buffer_ptr", "(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)J", "")]
		public static unsafe long Read_piece_alert_buffer_ptr (long p0, global::FrostWire.Libtorrent.Swig.Read_piece_alert p1)
		{
			const string __id = "read_piece_alert_buffer_ptr.(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_piece_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.read_piece_alert']]"
		[Register ("read_piece_alert_category", "(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)J", "")]
		public static unsafe long Read_piece_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Read_piece_alert p1)
		{
			const string __id = "read_piece_alert_category.(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_piece_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.read_piece_alert']]"
		[Register ("read_piece_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)J", "")]
		public static unsafe long Read_piece_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Read_piece_alert p1)
		{
			const string __id = "read_piece_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_piece_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.read_piece_alert']]"
		[Register ("read_piece_alert_message", "(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)Ljava/lang/String;", "")]
		public static unsafe string Read_piece_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Read_piece_alert p1)
		{
			const string __id = "read_piece_alert_message.(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_piece_alert_piece_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.read_piece_alert']]"
		[Register ("read_piece_alert_piece_get", "(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)I", "")]
		public static unsafe int Read_piece_alert_piece_get (long p0, global::FrostWire.Libtorrent.Swig.Read_piece_alert p1)
		{
			const string __id = "read_piece_alert_piece_get.(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_piece_alert_priority_get' and count(parameter)=0]"
		[Register ("read_piece_alert_priority_get", "()I", "")]
		public static unsafe int Read_piece_alert_priority_get ()
		{
			const string __id = "read_piece_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_piece_alert_size_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.read_piece_alert']]"
		[Register ("read_piece_alert_size_get", "(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)I", "")]
		public static unsafe int Read_piece_alert_size_get (long p0, global::FrostWire.Libtorrent.Swig.Read_piece_alert p1)
		{
			const string __id = "read_piece_alert_size_get.(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_piece_alert_static_category_get' and count(parameter)=0]"
		[Register ("read_piece_alert_static_category_get", "()J", "")]
		public static unsafe long Read_piece_alert_static_category_get ()
		{
			const string __id = "read_piece_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_piece_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.read_piece_alert']]"
		[Register ("read_piece_alert_type", "(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)I", "")]
		public static unsafe int Read_piece_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Read_piece_alert p1)
		{
			const string __id = "read_piece_alert_type.(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_piece_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.read_piece_alert']]"
		[Register ("read_piece_alert_what", "(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)Ljava/lang/String;", "")]
		public static unsafe string Read_piece_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Read_piece_alert p1)
		{
			const string __id = "read_piece_alert_what.(JLcom/frostwire/jlibtorrent/swig/read_piece_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_session_params__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t']]"
		[Register ("read_session_params__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)J", "")]
		public static unsafe long Read_session_params__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1, long p2, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p3)
		{
			const string __id = "read_session_params__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='read_session_params__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.bdecode_node']]"
		[Register ("read_session_params__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)J", "")]
		public static unsafe long Read_session_params__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Bdecode_node p1)
		{
			const string __id = "read_session_params__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/bdecode_node;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reannounce_flags_t_all' and count(parameter)=0]"
		[Register ("reannounce_flags_t_all", "()J", "")]
		public static unsafe long Reannounce_flags_t_all ()
		{
			const string __id = "reannounce_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reannounce_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reannounce_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.reannounce_flags_t']]"
		[Register ("reannounce_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)J", "")]
		public static unsafe long Reannounce_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Reannounce_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Reannounce_flags_t p3)
		{
			const string __id = "reannounce_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reannounce_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reannounce_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.reannounce_flags_t']]"
		[Register ("reannounce_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)Z", "")]
		public static unsafe bool Reannounce_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Reannounce_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Reannounce_flags_t p3)
		{
			const string __id = "reannounce_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reannounce_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reannounce_flags_t']]"
		[Register ("reannounce_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)J", "")]
		public static unsafe long Reannounce_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Reannounce_flags_t p1)
		{
			const string __id = "reannounce_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reannounce_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reannounce_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.reannounce_flags_t']]"
		[Register ("reannounce_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)Z", "")]
		public static unsafe bool Reannounce_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Reannounce_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Reannounce_flags_t p3)
		{
			const string __id = "reannounce_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reannounce_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reannounce_flags_t']]"
		[Register ("reannounce_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)Z", "")]
		public static unsafe bool Reannounce_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Reannounce_flags_t p1)
		{
			const string __id = "reannounce_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reannounce_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reannounce_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.reannounce_flags_t']]"
		[Register ("reannounce_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)J", "")]
		public static unsafe long Reannounce_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Reannounce_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Reannounce_flags_t p3)
		{
			const string __id = "reannounce_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reannounce_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reannounce_flags_t']]"
		[Register ("reannounce_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)I", "")]
		public static unsafe int Reannounce_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Reannounce_flags_t p1)
		{
			const string __id = "reannounce_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reannounce_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reannounce_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.reannounce_flags_t']]"
		[Register ("reannounce_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)J", "")]
		public static unsafe long Reannounce_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Reannounce_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Reannounce_flags_t p3)
		{
			const string __id = "reannounce_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;JLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='remove_flags_t_all' and count(parameter)=0]"
		[Register ("remove_flags_t_all", "()J", "")]
		public static unsafe long Remove_flags_t_all ()
		{
			const string __id = "remove_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='remove_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.remove_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.remove_flags_t']]"
		[Register ("remove_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)J", "")]
		public static unsafe long Remove_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Remove_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Remove_flags_t p3)
		{
			const string __id = "remove_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='remove_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.remove_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.remove_flags_t']]"
		[Register ("remove_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)Z", "")]
		public static unsafe bool Remove_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Remove_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Remove_flags_t p3)
		{
			const string __id = "remove_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='remove_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.remove_flags_t']]"
		[Register ("remove_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)J", "")]
		public static unsafe long Remove_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Remove_flags_t p1)
		{
			const string __id = "remove_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='remove_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.remove_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.remove_flags_t']]"
		[Register ("remove_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)Z", "")]
		public static unsafe bool Remove_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Remove_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Remove_flags_t p3)
		{
			const string __id = "remove_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='remove_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.remove_flags_t']]"
		[Register ("remove_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)Z", "")]
		public static unsafe bool Remove_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Remove_flags_t p1)
		{
			const string __id = "remove_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='remove_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.remove_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.remove_flags_t']]"
		[Register ("remove_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)J", "")]
		public static unsafe long Remove_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Remove_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Remove_flags_t p3)
		{
			const string __id = "remove_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='remove_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.remove_flags_t']]"
		[Register ("remove_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)I", "")]
		public static unsafe int Remove_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Remove_flags_t p1)
		{
			const string __id = "remove_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='remove_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.remove_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.remove_flags_t']]"
		[Register ("remove_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)J", "")]
		public static unsafe long Remove_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Remove_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Remove_flags_t p3)
		{
			const string __id = "remove_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/remove_flags_t;JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reopen_network_flags_t_all' and count(parameter)=0]"
		[Register ("reopen_network_flags_t_all", "()J", "")]
		public static unsafe long Reopen_network_flags_t_all ()
		{
			const string __id = "reopen_network_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reopen_network_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reopen_network_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.reopen_network_flags_t']]"
		[Register ("reopen_network_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)J", "")]
		public static unsafe long Reopen_network_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Reopen_network_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Reopen_network_flags_t p3)
		{
			const string __id = "reopen_network_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reopen_network_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reopen_network_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.reopen_network_flags_t']]"
		[Register ("reopen_network_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)Z", "")]
		public static unsafe bool Reopen_network_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Reopen_network_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Reopen_network_flags_t p3)
		{
			const string __id = "reopen_network_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reopen_network_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reopen_network_flags_t']]"
		[Register ("reopen_network_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)J", "")]
		public static unsafe long Reopen_network_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Reopen_network_flags_t p1)
		{
			const string __id = "reopen_network_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reopen_network_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reopen_network_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.reopen_network_flags_t']]"
		[Register ("reopen_network_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)Z", "")]
		public static unsafe bool Reopen_network_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Reopen_network_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Reopen_network_flags_t p3)
		{
			const string __id = "reopen_network_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reopen_network_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reopen_network_flags_t']]"
		[Register ("reopen_network_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)Z", "")]
		public static unsafe bool Reopen_network_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Reopen_network_flags_t p1)
		{
			const string __id = "reopen_network_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reopen_network_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reopen_network_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.reopen_network_flags_t']]"
		[Register ("reopen_network_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)J", "")]
		public static unsafe long Reopen_network_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Reopen_network_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Reopen_network_flags_t p3)
		{
			const string __id = "reopen_network_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reopen_network_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reopen_network_flags_t']]"
		[Register ("reopen_network_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)I", "")]
		public static unsafe int Reopen_network_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Reopen_network_flags_t p1)
		{
			const string __id = "reopen_network_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='reopen_network_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.reopen_network_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.reopen_network_flags_t']]"
		[Register ("reopen_network_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)J", "")]
		public static unsafe long Reopen_network_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Reopen_network_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Reopen_network_flags_t p3)
		{
			const string __id = "reopen_network_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='request_dropped_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("request_dropped_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Request_dropped_alert_SWIGUpcast (long p0)
		{
			const string __id = "request_dropped_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='request_dropped_alert_alert_type_get' and count(parameter)=0]"
		[Register ("request_dropped_alert_alert_type_get", "()I", "")]
		public static unsafe int Request_dropped_alert_alert_type_get ()
		{
			const string __id = "request_dropped_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='request_dropped_alert_block_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.request_dropped_alert']]"
		[Register ("request_dropped_alert_block_index_get", "(JLcom/frostwire/jlibtorrent/swig/request_dropped_alert;)I", "")]
		public static unsafe int Request_dropped_alert_block_index_get (long p0, global::FrostWire.Libtorrent.Swig.Request_dropped_alert p1)
		{
			const string __id = "request_dropped_alert_block_index_get.(JLcom/frostwire/jlibtorrent/swig/request_dropped_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='request_dropped_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.request_dropped_alert']]"
		[Register ("request_dropped_alert_category", "(JLcom/frostwire/jlibtorrent/swig/request_dropped_alert;)J", "")]
		public static unsafe long Request_dropped_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Request_dropped_alert p1)
		{
			const string __id = "request_dropped_alert_category.(JLcom/frostwire/jlibtorrent/swig/request_dropped_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='request_dropped_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.request_dropped_alert']]"
		[Register ("request_dropped_alert_message", "(JLcom/frostwire/jlibtorrent/swig/request_dropped_alert;)Ljava/lang/String;", "")]
		public static unsafe string Request_dropped_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Request_dropped_alert p1)
		{
			const string __id = "request_dropped_alert_message.(JLcom/frostwire/jlibtorrent/swig/request_dropped_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='request_dropped_alert_piece_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.request_dropped_alert']]"
		[Register ("request_dropped_alert_piece_index_get", "(JLcom/frostwire/jlibtorrent/swig/request_dropped_alert;)I", "")]
		public static unsafe int Request_dropped_alert_piece_index_get (long p0, global::FrostWire.Libtorrent.Swig.Request_dropped_alert p1)
		{
			const string __id = "request_dropped_alert_piece_index_get.(JLcom/frostwire/jlibtorrent/swig/request_dropped_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='request_dropped_alert_priority_get' and count(parameter)=0]"
		[Register ("request_dropped_alert_priority_get", "()I", "")]
		public static unsafe int Request_dropped_alert_priority_get ()
		{
			const string __id = "request_dropped_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='request_dropped_alert_static_category_get' and count(parameter)=0]"
		[Register ("request_dropped_alert_static_category_get", "()J", "")]
		public static unsafe long Request_dropped_alert_static_category_get ()
		{
			const string __id = "request_dropped_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='request_dropped_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.request_dropped_alert']]"
		[Register ("request_dropped_alert_type", "(JLcom/frostwire/jlibtorrent/swig/request_dropped_alert;)I", "")]
		public static unsafe int Request_dropped_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Request_dropped_alert p1)
		{
			const string __id = "request_dropped_alert_type.(JLcom/frostwire/jlibtorrent/swig/request_dropped_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='request_dropped_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.request_dropped_alert']]"
		[Register ("request_dropped_alert_what", "(JLcom/frostwire/jlibtorrent/swig/request_dropped_alert;)Ljava/lang/String;", "")]
		public static unsafe string Request_dropped_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Request_dropped_alert p1)
		{
			const string __id = "request_dropped_alert_what.(JLcom/frostwire/jlibtorrent/swig/request_dropped_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='resource_deadlock_would_occur_get' and count(parameter)=0]"
		[Register ("resource_deadlock_would_occur_get", "()I", "")]
		public static unsafe int Resource_deadlock_would_occur_get ()
		{
			const string __id = "resource_deadlock_would_occur_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='resource_unavailable_try_again_get' and count(parameter)=0]"
		[Register ("resource_unavailable_try_again_get", "()I", "")]
		public static unsafe int Resource_unavailable_try_again_get ()
		{
			const string __id = "resource_unavailable_try_again_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='result_out_of_range_get' and count(parameter)=0]"
		[Register ("result_out_of_range_get", "()I", "")]
		public static unsafe int Result_out_of_range_get ()
		{
			const string __id = "result_out_of_range_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='resume_data_flags_t_all' and count(parameter)=0]"
		[Register ("resume_data_flags_t_all", "()J", "")]
		public static unsafe long Resume_data_flags_t_all ()
		{
			const string __id = "resume_data_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='resume_data_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.resume_data_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.resume_data_flags_t']]"
		[Register ("resume_data_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)J", "")]
		public static unsafe long Resume_data_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Resume_data_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Resume_data_flags_t p3)
		{
			const string __id = "resume_data_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='resume_data_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.resume_data_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.resume_data_flags_t']]"
		[Register ("resume_data_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)Z", "")]
		public static unsafe bool Resume_data_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Resume_data_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Resume_data_flags_t p3)
		{
			const string __id = "resume_data_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='resume_data_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.resume_data_flags_t']]"
		[Register ("resume_data_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)J", "")]
		public static unsafe long Resume_data_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Resume_data_flags_t p1)
		{
			const string __id = "resume_data_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='resume_data_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.resume_data_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.resume_data_flags_t']]"
		[Register ("resume_data_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)Z", "")]
		public static unsafe bool Resume_data_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Resume_data_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Resume_data_flags_t p3)
		{
			const string __id = "resume_data_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='resume_data_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.resume_data_flags_t']]"
		[Register ("resume_data_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)Z", "")]
		public static unsafe bool Resume_data_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Resume_data_flags_t p1)
		{
			const string __id = "resume_data_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='resume_data_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.resume_data_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.resume_data_flags_t']]"
		[Register ("resume_data_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)J", "")]
		public static unsafe long Resume_data_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Resume_data_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Resume_data_flags_t p3)
		{
			const string __id = "resume_data_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='resume_data_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.resume_data_flags_t']]"
		[Register ("resume_data_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)I", "")]
		public static unsafe int Resume_data_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Resume_data_flags_t p1)
		{
			const string __id = "resume_data_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='resume_data_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.resume_data_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.resume_data_flags_t']]"
		[Register ("resume_data_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)J", "")]
		public static unsafe long Resume_data_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Resume_data_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Resume_data_flags_t p3)
		{
			const string __id = "resume_data_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("save_resume_data_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Save_resume_data_alert_SWIGUpcast (long p0)
		{
			const string __id = "save_resume_data_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_alert_alert_type_get' and count(parameter)=0]"
		[Register ("save_resume_data_alert_alert_type_get", "()I", "")]
		public static unsafe int Save_resume_data_alert_alert_type_get ()
		{
			const string __id = "save_resume_data_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_resume_data_alert']]"
		[Register ("save_resume_data_alert_category", "(JLcom/frostwire/jlibtorrent/swig/save_resume_data_alert;)J", "")]
		public static unsafe long Save_resume_data_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Save_resume_data_alert p1)
		{
			const string __id = "save_resume_data_alert_category.(JLcom/frostwire/jlibtorrent/swig/save_resume_data_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_resume_data_alert']]"
		[Register ("save_resume_data_alert_message", "(JLcom/frostwire/jlibtorrent/swig/save_resume_data_alert;)Ljava/lang/String;", "")]
		public static unsafe string Save_resume_data_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Save_resume_data_alert p1)
		{
			const string __id = "save_resume_data_alert_message.(JLcom/frostwire/jlibtorrent/swig/save_resume_data_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_alert_params_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_resume_data_alert']]"
		[Register ("save_resume_data_alert_params_get", "(JLcom/frostwire/jlibtorrent/swig/save_resume_data_alert;)J", "")]
		public static unsafe long Save_resume_data_alert_params_get (long p0, global::FrostWire.Libtorrent.Swig.Save_resume_data_alert p1)
		{
			const string __id = "save_resume_data_alert_params_get.(JLcom/frostwire/jlibtorrent/swig/save_resume_data_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_alert_params_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_resume_data_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("save_resume_data_alert_params_set", "(JLcom/frostwire/jlibtorrent/swig/save_resume_data_alert;JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)V", "")]
		public static unsafe void Save_resume_data_alert_params_set (long p0, global::FrostWire.Libtorrent.Swig.Save_resume_data_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Add_torrent_params p3)
		{
			const string __id = "save_resume_data_alert_params_set.(JLcom/frostwire/jlibtorrent/swig/save_resume_data_alert;JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_alert_priority_get' and count(parameter)=0]"
		[Register ("save_resume_data_alert_priority_get", "()I", "")]
		public static unsafe int Save_resume_data_alert_priority_get ()
		{
			const string __id = "save_resume_data_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_alert_static_category_get' and count(parameter)=0]"
		[Register ("save_resume_data_alert_static_category_get", "()J", "")]
		public static unsafe long Save_resume_data_alert_static_category_get ()
		{
			const string __id = "save_resume_data_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_resume_data_alert']]"
		[Register ("save_resume_data_alert_type", "(JLcom/frostwire/jlibtorrent/swig/save_resume_data_alert;)I", "")]
		public static unsafe int Save_resume_data_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Save_resume_data_alert p1)
		{
			const string __id = "save_resume_data_alert_type.(JLcom/frostwire/jlibtorrent/swig/save_resume_data_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_resume_data_alert']]"
		[Register ("save_resume_data_alert_what", "(JLcom/frostwire/jlibtorrent/swig/save_resume_data_alert;)Ljava/lang/String;", "")]
		public static unsafe string Save_resume_data_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Save_resume_data_alert p1)
		{
			const string __id = "save_resume_data_alert_what.(JLcom/frostwire/jlibtorrent/swig/save_resume_data_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_failed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("save_resume_data_failed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Save_resume_data_failed_alert_SWIGUpcast (long p0)
		{
			const string __id = "save_resume_data_failed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_failed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("save_resume_data_failed_alert_alert_type_get", "()I", "")]
		public static unsafe int Save_resume_data_failed_alert_alert_type_get ()
		{
			const string __id = "save_resume_data_failed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_failed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_resume_data_failed_alert']]"
		[Register ("save_resume_data_failed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/save_resume_data_failed_alert;)J", "")]
		public static unsafe long Save_resume_data_failed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Save_resume_data_failed_alert p1)
		{
			const string __id = "save_resume_data_failed_alert_category.(JLcom/frostwire/jlibtorrent/swig/save_resume_data_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_failed_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_resume_data_failed_alert']]"
		[Register ("save_resume_data_failed_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/save_resume_data_failed_alert;)J", "")]
		public static unsafe long Save_resume_data_failed_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Save_resume_data_failed_alert p1)
		{
			const string __id = "save_resume_data_failed_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/save_resume_data_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_failed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_resume_data_failed_alert']]"
		[Register ("save_resume_data_failed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/save_resume_data_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Save_resume_data_failed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Save_resume_data_failed_alert p1)
		{
			const string __id = "save_resume_data_failed_alert_message.(JLcom/frostwire/jlibtorrent/swig/save_resume_data_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_failed_alert_priority_get' and count(parameter)=0]"
		[Register ("save_resume_data_failed_alert_priority_get", "()I", "")]
		public static unsafe int Save_resume_data_failed_alert_priority_get ()
		{
			const string __id = "save_resume_data_failed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_failed_alert_static_category_get' and count(parameter)=0]"
		[Register ("save_resume_data_failed_alert_static_category_get", "()J", "")]
		public static unsafe long Save_resume_data_failed_alert_static_category_get ()
		{
			const string __id = "save_resume_data_failed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_failed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_resume_data_failed_alert']]"
		[Register ("save_resume_data_failed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/save_resume_data_failed_alert;)I", "")]
		public static unsafe int Save_resume_data_failed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Save_resume_data_failed_alert p1)
		{
			const string __id = "save_resume_data_failed_alert_type.(JLcom/frostwire/jlibtorrent/swig/save_resume_data_failed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_resume_data_failed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_resume_data_failed_alert']]"
		[Register ("save_resume_data_failed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/save_resume_data_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Save_resume_data_failed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Save_resume_data_failed_alert p1)
		{
			const string __id = "save_resume_data_failed_alert_what.(JLcom/frostwire/jlibtorrent/swig/save_resume_data_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_state_flags_t_all' and count(parameter)=0]"
		[Register ("save_state_flags_t_all", "()J", "")]
		public static unsafe long Save_state_flags_t_all ()
		{
			const string __id = "save_state_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_state_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t']]"
		[Register ("save_state_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)J", "")]
		public static unsafe long Save_state_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p3)
		{
			const string __id = "save_state_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_state_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t']]"
		[Register ("save_state_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)Z", "")]
		public static unsafe bool Save_state_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p3)
		{
			const string __id = "save_state_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_state_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t']]"
		[Register ("save_state_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)J", "")]
		public static unsafe long Save_state_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p1)
		{
			const string __id = "save_state_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_state_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t']]"
		[Register ("save_state_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)Z", "")]
		public static unsafe bool Save_state_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p3)
		{
			const string __id = "save_state_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_state_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t']]"
		[Register ("save_state_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)Z", "")]
		public static unsafe bool Save_state_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p1)
		{
			const string __id = "save_state_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_state_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t']]"
		[Register ("save_state_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)J", "")]
		public static unsafe long Save_state_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p3)
		{
			const string __id = "save_state_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_state_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t']]"
		[Register ("save_state_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)I", "")]
		public static unsafe int Save_state_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p1)
		{
			const string __id = "save_state_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='save_state_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t']]"
		[Register ("save_state_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)J", "")]
		public static unsafe long Save_state_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p3)
		{
			const string __id = "save_state_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_failed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("scrape_failed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Scrape_failed_alert_SWIGUpcast (long p0)
		{
			const string __id = "scrape_failed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_failed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("scrape_failed_alert_alert_type_get", "()I", "")]
		public static unsafe int Scrape_failed_alert_alert_type_get ()
		{
			const string __id = "scrape_failed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_failed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.scrape_failed_alert']]"
		[Register ("scrape_failed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/scrape_failed_alert;)J", "")]
		public static unsafe long Scrape_failed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Scrape_failed_alert p1)
		{
			const string __id = "scrape_failed_alert_category.(JLcom/frostwire/jlibtorrent/swig/scrape_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_failed_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.scrape_failed_alert']]"
		[Register ("scrape_failed_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/scrape_failed_alert;)J", "")]
		public static unsafe long Scrape_failed_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Scrape_failed_alert p1)
		{
			const string __id = "scrape_failed_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/scrape_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_failed_alert_error_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.scrape_failed_alert']]"
		[Register ("scrape_failed_alert_error_message", "(JLcom/frostwire/jlibtorrent/swig/scrape_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Scrape_failed_alert_error_message (long p0, global::FrostWire.Libtorrent.Swig.Scrape_failed_alert p1)
		{
			const string __id = "scrape_failed_alert_error_message.(JLcom/frostwire/jlibtorrent/swig/scrape_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_failed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.scrape_failed_alert']]"
		[Register ("scrape_failed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/scrape_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Scrape_failed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Scrape_failed_alert p1)
		{
			const string __id = "scrape_failed_alert_message.(JLcom/frostwire/jlibtorrent/swig/scrape_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_failed_alert_priority_get' and count(parameter)=0]"
		[Register ("scrape_failed_alert_priority_get", "()I", "")]
		public static unsafe int Scrape_failed_alert_priority_get ()
		{
			const string __id = "scrape_failed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_failed_alert_static_category_get' and count(parameter)=0]"
		[Register ("scrape_failed_alert_static_category_get", "()J", "")]
		public static unsafe long Scrape_failed_alert_static_category_get ()
		{
			const string __id = "scrape_failed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_failed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.scrape_failed_alert']]"
		[Register ("scrape_failed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/scrape_failed_alert;)I", "")]
		public static unsafe int Scrape_failed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Scrape_failed_alert p1)
		{
			const string __id = "scrape_failed_alert_type.(JLcom/frostwire/jlibtorrent/swig/scrape_failed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_failed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.scrape_failed_alert']]"
		[Register ("scrape_failed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/scrape_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Scrape_failed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Scrape_failed_alert p1)
		{
			const string __id = "scrape_failed_alert_what.(JLcom/frostwire/jlibtorrent/swig/scrape_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_not_available_get' and count(parameter)=0]"
		[Register ("scrape_not_available_get", "()I", "")]
		public static unsafe int Scrape_not_available_get ()
		{
			const string __id = "scrape_not_available_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_reply_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("scrape_reply_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Scrape_reply_alert_SWIGUpcast (long p0)
		{
			const string __id = "scrape_reply_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_reply_alert_alert_type_get' and count(parameter)=0]"
		[Register ("scrape_reply_alert_alert_type_get", "()I", "")]
		public static unsafe int Scrape_reply_alert_alert_type_get ()
		{
			const string __id = "scrape_reply_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_reply_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.scrape_reply_alert']]"
		[Register ("scrape_reply_alert_category", "(JLcom/frostwire/jlibtorrent/swig/scrape_reply_alert;)J", "")]
		public static unsafe long Scrape_reply_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Scrape_reply_alert p1)
		{
			const string __id = "scrape_reply_alert_category.(JLcom/frostwire/jlibtorrent/swig/scrape_reply_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_reply_alert_complete_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.scrape_reply_alert']]"
		[Register ("scrape_reply_alert_complete_get", "(JLcom/frostwire/jlibtorrent/swig/scrape_reply_alert;)I", "")]
		public static unsafe int Scrape_reply_alert_complete_get (long p0, global::FrostWire.Libtorrent.Swig.Scrape_reply_alert p1)
		{
			const string __id = "scrape_reply_alert_complete_get.(JLcom/frostwire/jlibtorrent/swig/scrape_reply_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_reply_alert_incomplete_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.scrape_reply_alert']]"
		[Register ("scrape_reply_alert_incomplete_get", "(JLcom/frostwire/jlibtorrent/swig/scrape_reply_alert;)I", "")]
		public static unsafe int Scrape_reply_alert_incomplete_get (long p0, global::FrostWire.Libtorrent.Swig.Scrape_reply_alert p1)
		{
			const string __id = "scrape_reply_alert_incomplete_get.(JLcom/frostwire/jlibtorrent/swig/scrape_reply_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_reply_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.scrape_reply_alert']]"
		[Register ("scrape_reply_alert_message", "(JLcom/frostwire/jlibtorrent/swig/scrape_reply_alert;)Ljava/lang/String;", "")]
		public static unsafe string Scrape_reply_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Scrape_reply_alert p1)
		{
			const string __id = "scrape_reply_alert_message.(JLcom/frostwire/jlibtorrent/swig/scrape_reply_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_reply_alert_priority_get' and count(parameter)=0]"
		[Register ("scrape_reply_alert_priority_get", "()I", "")]
		public static unsafe int Scrape_reply_alert_priority_get ()
		{
			const string __id = "scrape_reply_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_reply_alert_static_category_get' and count(parameter)=0]"
		[Register ("scrape_reply_alert_static_category_get", "()J", "")]
		public static unsafe long Scrape_reply_alert_static_category_get ()
		{
			const string __id = "scrape_reply_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_reply_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.scrape_reply_alert']]"
		[Register ("scrape_reply_alert_type", "(JLcom/frostwire/jlibtorrent/swig/scrape_reply_alert;)I", "")]
		public static unsafe int Scrape_reply_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Scrape_reply_alert p1)
		{
			const string __id = "scrape_reply_alert_type.(JLcom/frostwire/jlibtorrent/swig/scrape_reply_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='scrape_reply_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.scrape_reply_alert']]"
		[Register ("scrape_reply_alert_what", "(JLcom/frostwire/jlibtorrent/swig/scrape_reply_alert;)Ljava/lang/String;", "")]
		public static unsafe string Scrape_reply_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Scrape_reply_alert p1)
		{
			const string __id = "scrape_reply_alert_what.(JLcom/frostwire/jlibtorrent/swig/scrape_reply_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='seed_mode_get' and count(parameter)=0]"
		[Register ("seed_mode_get", "()J", "")]
		public static unsafe long Seed_mode_get ()
		{
			const string __id = "seed_mode_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sequential_download_get' and count(parameter)=0]"
		[Register ("sequential_download_get", "()J", "")]
		public static unsafe long Sequential_download_get ()
		{
			const string __id = "sequential_download_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='service_unavailable_get' and count(parameter)=0]"
		[Register ("service_unavailable_get", "()I", "")]
		public static unsafe int Service_unavailable_get ()
		{
			const string __id = "service_unavailable_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("session_SWIGUpcast", "(J)J", "")]
		public static unsafe long Session_SWIGUpcast (long p0)
		{
			const string __id = "session_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_abort' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session']]"
		[Register ("session_abort", "(JLcom/frostwire/jlibtorrent/swig/session;)J", "")]
		public static unsafe long Session_abort (long p0, global::FrostWire.Libtorrent.Swig.Session p1)
		{
			const string __id = "session_abort.(JLcom/frostwire/jlibtorrent/swig/session;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_error_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("session_error_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Session_error_alert_SWIGUpcast (long p0)
		{
			const string __id = "session_error_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_error_alert_alert_type_get' and count(parameter)=0]"
		[Register ("session_error_alert_alert_type_get", "()I", "")]
		public static unsafe int Session_error_alert_alert_type_get ()
		{
			const string __id = "session_error_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_error_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_error_alert']]"
		[Register ("session_error_alert_category", "(JLcom/frostwire/jlibtorrent/swig/session_error_alert;)J", "")]
		public static unsafe long Session_error_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Session_error_alert p1)
		{
			const string __id = "session_error_alert_category.(JLcom/frostwire/jlibtorrent/swig/session_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_error_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_error_alert']]"
		[Register ("session_error_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/session_error_alert;)J", "")]
		public static unsafe long Session_error_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Session_error_alert p1)
		{
			const string __id = "session_error_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/session_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_error_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_error_alert']]"
		[Register ("session_error_alert_message", "(JLcom/frostwire/jlibtorrent/swig/session_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Session_error_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Session_error_alert p1)
		{
			const string __id = "session_error_alert_message.(JLcom/frostwire/jlibtorrent/swig/session_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_error_alert_priority_get' and count(parameter)=0]"
		[Register ("session_error_alert_priority_get", "()I", "")]
		public static unsafe int Session_error_alert_priority_get ()
		{
			const string __id = "session_error_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_error_alert_static_category_get' and count(parameter)=0]"
		[Register ("session_error_alert_static_category_get", "()J", "")]
		public static unsafe long Session_error_alert_static_category_get ()
		{
			const string __id = "session_error_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_error_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_error_alert']]"
		[Register ("session_error_alert_type", "(JLcom/frostwire/jlibtorrent/swig/session_error_alert;)I", "")]
		public static unsafe int Session_error_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Session_error_alert p1)
		{
			const string __id = "session_error_alert_type.(JLcom/frostwire/jlibtorrent/swig/session_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_error_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_error_alert']]"
		[Register ("session_error_alert_what", "(JLcom/frostwire/jlibtorrent/swig/session_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Session_error_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Session_error_alert p1)
		{
			const string __id = "session_error_alert_what.(JLcom/frostwire/jlibtorrent/swig/session_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_flags_t_all' and count(parameter)=0]"
		[Register ("session_flags_t_all", "()J", "")]
		public static unsafe long Session_flags_t_all ()
		{
			const string __id = "session_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.session_flags_t']]"
		[Register ("session_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/session_flags_t;JLcom/frostwire/jlibtorrent/swig/session_flags_t;)J", "")]
		public static unsafe long Session_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Session_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Session_flags_t p3)
		{
			const string __id = "session_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/session_flags_t;JLcom/frostwire/jlibtorrent/swig/session_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.session_flags_t']]"
		[Register ("session_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/session_flags_t;JLcom/frostwire/jlibtorrent/swig/session_flags_t;)Z", "")]
		public static unsafe bool Session_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Session_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Session_flags_t p3)
		{
			const string __id = "session_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/session_flags_t;JLcom/frostwire/jlibtorrent/swig/session_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_flags_t']]"
		[Register ("session_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/session_flags_t;)J", "")]
		public static unsafe long Session_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Session_flags_t p1)
		{
			const string __id = "session_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/session_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.session_flags_t']]"
		[Register ("session_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/session_flags_t;JLcom/frostwire/jlibtorrent/swig/session_flags_t;)Z", "")]
		public static unsafe bool Session_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Session_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Session_flags_t p3)
		{
			const string __id = "session_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/session_flags_t;JLcom/frostwire/jlibtorrent/swig/session_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_flags_t']]"
		[Register ("session_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/session_flags_t;)Z", "")]
		public static unsafe bool Session_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Session_flags_t p1)
		{
			const string __id = "session_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/session_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.session_flags_t']]"
		[Register ("session_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/session_flags_t;JLcom/frostwire/jlibtorrent/swig/session_flags_t;)J", "")]
		public static unsafe long Session_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Session_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Session_flags_t p3)
		{
			const string __id = "session_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/session_flags_t;JLcom/frostwire/jlibtorrent/swig/session_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_flags_t']]"
		[Register ("session_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/session_flags_t;)I", "")]
		public static unsafe int Session_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Session_flags_t p1)
		{
			const string __id = "session_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/session_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.session_flags_t']]"
		[Register ("session_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/session_flags_t;JLcom/frostwire/jlibtorrent/swig/session_flags_t;)J", "")]
		public static unsafe long Session_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Session_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Session_flags_t p3)
		{
			const string __id = "session_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/session_flags_t;JLcom/frostwire/jlibtorrent/swig/session_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_add_default_plugins_get' and count(parameter)=0]"
		[Register ("session_handle_add_default_plugins_get", "()J", "")]
		public static unsafe long Session_handle_add_default_plugins_get ()
		{
			const string __id = "session_handle_add_default_plugins_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_add_dht_node' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_int_pair']]"
		[Register ("session_handle_add_dht_node", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/string_int_pair;)V", "")]
		public static unsafe void Session_handle_add_dht_node (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.String_int_pair p3)
		{
			const string __id = "session_handle_add_dht_node.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/string_int_pair;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_add_extension' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.swig_plugin']]"
		[Register ("session_handle_add_extension", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/swig_plugin;)V", "")]
		public static unsafe void Session_handle_add_extension (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Swig_plugin p3)
		{
			const string __id = "session_handle_add_extension.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/swig_plugin;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_add_port_mapping' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int']]"
		[Register ("session_handle_add_port_mapping", "(JLcom/frostwire/jlibtorrent/swig/session_handle;III)J", "")]
		public static unsafe long Session_handle_add_port_mapping (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, int p2, int p3, int p4)
		{
			const string __id = "session_handle_add_port_mapping.(JLcom/frostwire/jlibtorrent/swig/session_handle;III)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_add_torrent' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.add_torrent_params'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("session_handle_add_torrent", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/error_code;)J", "")]
		public static unsafe long Session_handle_add_torrent (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Add_torrent_params p3, long p4, global::FrostWire.Libtorrent.Swig.Error_code p5)
		{
			const string __id = "session_handle_add_torrent.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/add_torrent_params;JLcom/frostwire/jlibtorrent/swig/error_code;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_apply_settings' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.settings_pack']]"
		[Register ("session_handle_apply_settings", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/settings_pack;)V", "")]
		public static unsafe void Session_handle_apply_settings (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Settings_pack p3)
		{
			const string __id = "session_handle_apply_settings.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/settings_pack;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_async_add_torrent' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.add_torrent_params']]"
		[Register ("session_handle_async_add_torrent", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)V", "")]
		public static unsafe void Session_handle_async_add_torrent (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Add_torrent_params p3)
		{
			const string __id = "session_handle_async_add_torrent.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/add_torrent_params;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_create_peer_class' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='java.lang.String']]"
		[Register ("session_handle_create_peer_class", "(JLcom/frostwire/jlibtorrent/swig/session_handle;Ljava/lang/String;)I", "")]
		public static unsafe int Session_handle_create_peer_class (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, string p2)
		{
			const string __id = "session_handle_create_peer_class.(JLcom/frostwire/jlibtorrent/swig/session_handle;Ljava/lang/String;)I";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_delete_files_get' and count(parameter)=0]"
		[Register ("session_handle_delete_files_get", "()J", "")]
		public static unsafe long Session_handle_delete_files_get ()
		{
			const string __id = "session_handle_delete_files_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_delete_partfile_get' and count(parameter)=0]"
		[Register ("session_handle_delete_partfile_get", "()J", "")]
		public static unsafe long Session_handle_delete_partfile_get ()
		{
			const string __id = "session_handle_delete_partfile_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_delete_peer_class' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='int']]"
		[Register ("session_handle_delete_peer_class", "(JLcom/frostwire/jlibtorrent/swig/session_handle;I)V", "")]
		public static unsafe void Session_handle_delete_peer_class (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, int p2)
		{
			const string __id = "session_handle_delete_peer_class.(JLcom/frostwire/jlibtorrent/swig/session_handle;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_delete_port_mapping' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='int']]"
		[Register ("session_handle_delete_port_mapping", "(JLcom/frostwire/jlibtorrent/swig/session_handle;I)V", "")]
		public static unsafe void Session_handle_delete_port_mapping (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, int p2)
		{
			const string __id = "session_handle_delete_port_mapping.(JLcom/frostwire/jlibtorrent/swig/session_handle;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_dht_announce__SWIG_0' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash'] and parameter[5][@type='int'] and parameter[6][@type='int']]"
		[Register ("session_handle_dht_announce__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/sha1_hash;II)V", "")]
		public static unsafe void Session_handle_dht_announce__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3, int p4, int p5)
		{
			const string __id = "session_handle_dht_announce__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/sha1_hash;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue (p5);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_dht_announce__SWIG_1' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash'] and parameter[5][@type='int']]"
		[Register ("session_handle_dht_announce__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/sha1_hash;I)V", "")]
		public static unsafe void Session_handle_dht_announce__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3, int p4)
		{
			const string __id = "session_handle_dht_announce__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/sha1_hash;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_dht_announce__SWIG_2' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("session_handle_dht_announce__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Session_handle_dht_announce__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "session_handle_dht_announce__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_dht_direct_request__SWIG_0' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.udp_endpoint'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("session_handle_dht_direct_request__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;JLcom/frostwire/jlibtorrent/swig/entry;)V", "")]
		public static unsafe void Session_handle_dht_direct_request__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Udp_endpoint p3, long p4, global::FrostWire.Libtorrent.Swig.Entry p5)
		{
			const string __id = "session_handle_dht_direct_request__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;JLcom/frostwire/jlibtorrent/swig/entry;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_dht_direct_request__SWIG_1' and count(parameter)=7 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.udp_endpoint'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.entry'] and parameter[7][@type='long']]"
		[Register ("session_handle_dht_direct_request__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;JLcom/frostwire/jlibtorrent/swig/entry;J)V", "")]
		public static unsafe void Session_handle_dht_direct_request__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Udp_endpoint p3, long p4, global::FrostWire.Libtorrent.Swig.Entry p5, long p6)
		{
			const string __id = "session_handle_dht_direct_request__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;JLcom/frostwire/jlibtorrent/swig/entry;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				__args [6] = new JniArgumentValue (p6);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_dht_get_item__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("session_handle_dht_get_item__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Session_handle_dht_get_item__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "session_handle_dht_get_item__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_dht_get_item__SWIG_1' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("session_handle_dht_get_item__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Session_handle_dht_get_item__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3, long p4, global::FrostWire.Libtorrent.Swig.Byte_vector p5)
		{
			const string __id = "session_handle_dht_get_item__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_dht_get_peers' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("session_handle_dht_get_peers", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Session_handle_dht_get_peers (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "session_handle_dht_get_peers.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_dht_live_nodes' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("session_handle_dht_live_nodes", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Session_handle_dht_live_nodes (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "session_handle_dht_live_nodes.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_dht_put_item__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("session_handle_dht_put_item__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/entry;)J", "")]
		public static unsafe long Session_handle_dht_put_item__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Entry p3)
		{
			const string __id = "session_handle_dht_put_item__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/entry;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_dht_put_item__SWIG_1' and count(parameter)=10 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[7][@type='long'] and parameter[8][@type='com.frostwire.jlibtorrent.swig.entry'] and parameter[9][@type='long'] and parameter[10][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("session_handle_dht_put_item__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/entry;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Session_handle_dht_put_item__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3, long p4, global::FrostWire.Libtorrent.Swig.Byte_vector p5, long p6, global::FrostWire.Libtorrent.Swig.Entry p7, long p8, global::FrostWire.Libtorrent.Swig.Byte_vector p9)
		{
			const string __id = "session_handle_dht_put_item__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/entry;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [10];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				__args [6] = new JniArgumentValue (p6);
				__args [7] = new JniArgumentValue ((p7 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p7).Handle);
				__args [8] = new JniArgumentValue (p8);
				__args [9] = new JniArgumentValue ((p9 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p9).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_dht_sample_infohashes' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.udp_endpoint'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("session_handle_dht_sample_infohashes", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Session_handle_dht_sample_infohashes (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Udp_endpoint p3, long p4, global::FrostWire.Libtorrent.Swig.Sha1_hash p5)
		{
			const string __id = "session_handle_dht_sample_infohashes.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_disk_cache_no_pieces_get' and count(parameter)=0]"
		[Register ("session_handle_disk_cache_no_pieces_get", "()I", "")]
		public static unsafe int Session_handle_disk_cache_no_pieces_get ()
		{
			const string __id = "session_handle_disk_cache_no_pieces_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_find_torrent' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("session_handle_find_torrent", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)J", "")]
		public static unsafe long Session_handle_find_torrent (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "session_handle_find_torrent.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_get_dht_settings' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_get_dht_settings", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)J", "")]
		public static unsafe long Session_handle_get_dht_settings (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_get_dht_settings.(JLcom/frostwire/jlibtorrent/swig/session_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_get_ip_filter' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_get_ip_filter", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)J", "")]
		public static unsafe long Session_handle_get_ip_filter (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_get_ip_filter.(JLcom/frostwire/jlibtorrent/swig/session_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_get_peer_class' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='int']]"
		[Register ("session_handle_get_peer_class", "(JLcom/frostwire/jlibtorrent/swig/session_handle;I)J", "")]
		public static unsafe long Session_handle_get_peer_class (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, int p2)
		{
			const string __id = "session_handle_get_peer_class.(JLcom/frostwire/jlibtorrent/swig/session_handle;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_get_peer_class_filter' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_get_peer_class_filter", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)J", "")]
		public static unsafe long Session_handle_get_peer_class_filter (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_get_peer_class_filter.(JLcom/frostwire/jlibtorrent/swig/session_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_get_peer_class_type_filter' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_get_peer_class_type_filter", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)J", "")]
		public static unsafe long Session_handle_get_peer_class_type_filter (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_get_peer_class_type_filter.(JLcom/frostwire/jlibtorrent/swig/session_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_get_settings' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_get_settings", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)J", "")]
		public static unsafe long Session_handle_get_settings (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_get_settings.(JLcom/frostwire/jlibtorrent/swig/session_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_get_torrents' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_get_torrents", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)J", "")]
		public static unsafe long Session_handle_get_torrents (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_get_torrents.(JLcom/frostwire/jlibtorrent/swig/session_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_global_peer_class_id_get' and count(parameter)=0]"
		[Register ("session_handle_global_peer_class_id_get", "()I", "")]
		public static unsafe int Session_handle_global_peer_class_id_get ()
		{
			const string __id = "session_handle_global_peer_class_id_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_is_dht_running' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_is_dht_running", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)Z", "")]
		public static unsafe bool Session_handle_is_dht_running (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_is_dht_running.(JLcom/frostwire/jlibtorrent/swig/session_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_is_listening' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_is_listening", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)Z", "")]
		public static unsafe bool Session_handle_is_listening (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_is_listening.(JLcom/frostwire/jlibtorrent/swig/session_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_is_paused' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_is_paused", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)Z", "")]
		public static unsafe bool Session_handle_is_paused (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_is_paused.(JLcom/frostwire/jlibtorrent/swig/session_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_is_valid' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_is_valid", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)Z", "")]
		public static unsafe bool Session_handle_is_valid (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_is_valid.(JLcom/frostwire/jlibtorrent/swig/session_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_listen_port' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_listen_port", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)I", "")]
		public static unsafe int Session_handle_listen_port (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_listen_port.(JLcom/frostwire/jlibtorrent/swig/session_handle;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_load_state__SWIG_0' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t']]"
		[Register ("session_handle_load_state__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/bdecode_node;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)V", "")]
		public static unsafe void Session_handle_load_state__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Bdecode_node p3, long p4, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p5)
		{
			const string __id = "session_handle_load_state__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/bdecode_node;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_load_state__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.bdecode_node']]"
		[Register ("session_handle_load_state__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/bdecode_node;)V", "")]
		public static unsafe void Session_handle_load_state__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Bdecode_node p3)
		{
			const string __id = "session_handle_load_state__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/bdecode_node;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_local_peer_class_id_get' and count(parameter)=0]"
		[Register ("session_handle_local_peer_class_id_get", "()I", "")]
		public static unsafe int Session_handle_local_peer_class_id_get ()
		{
			const string __id = "session_handle_local_peer_class_id_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_pause' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_pause", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)V", "")]
		public static unsafe void Session_handle_pause (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_pause.(JLcom/frostwire/jlibtorrent/swig/session_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_pop_alerts' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.alert_ptr_vector']]"
		[Register ("session_handle_pop_alerts", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;)V", "")]
		public static unsafe void Session_handle_pop_alerts (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Alert_ptr_vector p3)
		{
			const string __id = "session_handle_pop_alerts.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/alert_ptr_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_post_dht_stats' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_post_dht_stats", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)V", "")]
		public static unsafe void Session_handle_post_dht_stats (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_post_dht_stats.(JLcom/frostwire/jlibtorrent/swig/session_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_post_session_stats' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_post_session_stats", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)V", "")]
		public static unsafe void Session_handle_post_session_stats (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_post_session_stats.(JLcom/frostwire/jlibtorrent/swig/session_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_post_torrent_updates__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.status_flags_t']]"
		[Register ("session_handle_post_torrent_updates__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)V", "")]
		public static unsafe void Session_handle_post_torrent_updates__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Status_flags_t p3)
		{
			const string __id = "session_handle_post_torrent_updates__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_post_torrent_updates__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_post_torrent_updates__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)V", "")]
		public static unsafe void Session_handle_post_torrent_updates__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_post_torrent_updates__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/session_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_refresh_torrent_status__SWIG_0' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_status_vector'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.status_flags_t']]"
		[Register ("session_handle_refresh_torrent_status__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)V", "")]
		public static unsafe void Session_handle_refresh_torrent_status__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_status_vector p3, long p4, global::FrostWire.Libtorrent.Swig.Status_flags_t p5)
		{
			const string __id = "session_handle_refresh_torrent_status__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_refresh_torrent_status__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_status_vector']]"
		[Register ("session_handle_refresh_torrent_status__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;)V", "")]
		public static unsafe void Session_handle_refresh_torrent_status__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_status_vector p3)
		{
			const string __id = "session_handle_refresh_torrent_status__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_remove_torrent__SWIG_0' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.remove_flags_t']]"
		[Register ("session_handle_remove_torrent__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)V", "")]
		public static unsafe void Session_handle_remove_torrent__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_handle p3, long p4, global::FrostWire.Libtorrent.Swig.Remove_flags_t p5)
		{
			const string __id = "session_handle_remove_torrent__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/remove_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_remove_torrent__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("session_handle_remove_torrent__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Session_handle_remove_torrent__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_handle p3)
		{
			const string __id = "session_handle_remove_torrent__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_reopen_map_ports_get' and count(parameter)=0]"
		[Register ("session_handle_reopen_map_ports_get", "()J", "")]
		public static unsafe long Session_handle_reopen_map_ports_get ()
		{
			const string __id = "session_handle_reopen_map_ports_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_reopen_network_sockets__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.reopen_network_flags_t']]"
		[Register ("session_handle_reopen_network_sockets__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)V", "")]
		public static unsafe void Session_handle_reopen_network_sockets__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Reopen_network_flags_t p3)
		{
			const string __id = "session_handle_reopen_network_sockets__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/reopen_network_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_reopen_network_sockets__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_reopen_network_sockets__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)V", "")]
		public static unsafe void Session_handle_reopen_network_sockets__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_reopen_network_sockets__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/session_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_resume' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_resume", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)V", "")]
		public static unsafe void Session_handle_resume (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_resume.(JLcom/frostwire/jlibtorrent/swig/session_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_save_dht_settings_get' and count(parameter)=0]"
		[Register ("session_handle_save_dht_settings_get", "()J", "")]
		public static unsafe long Session_handle_save_dht_settings_get ()
		{
			const string __id = "session_handle_save_dht_settings_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_save_dht_state_get' and count(parameter)=0]"
		[Register ("session_handle_save_dht_state_get", "()J", "")]
		public static unsafe long Session_handle_save_dht_state_get ()
		{
			const string __id = "session_handle_save_dht_state_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_save_settings_get' and count(parameter)=0]"
		[Register ("session_handle_save_settings_get", "()J", "")]
		public static unsafe long Session_handle_save_settings_get ()
		{
			const string __id = "session_handle_save_settings_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_save_state__SWIG_0' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.entry'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.save_state_flags_t']]"
		[Register ("session_handle_save_state__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/entry;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)V", "")]
		public static unsafe void Session_handle_save_state__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Entry p3, long p4, global::FrostWire.Libtorrent.Swig.Save_state_flags_t p5)
		{
			const string __id = "session_handle_save_state__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/entry;JLcom/frostwire/jlibtorrent/swig/save_state_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_save_state__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("session_handle_save_state__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/entry;)V", "")]
		public static unsafe void Session_handle_save_state__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Entry p3)
		{
			const string __id = "session_handle_save_state__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/entry;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_set_alert_notify_callback' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.alert_notify_callback']]"
		[Register ("session_handle_set_alert_notify_callback", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/alert_notify_callback;)V", "")]
		public static unsafe void Session_handle_set_alert_notify_callback (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Alert_notify_callback p3)
		{
			const string __id = "session_handle_set_alert_notify_callback.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/alert_notify_callback;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_set_dht_settings' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("session_handle_set_dht_settings", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/dht_settings;)V", "")]
		public static unsafe void Session_handle_set_dht_settings (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Dht_settings p3)
		{
			const string __id = "session_handle_set_dht_settings.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/dht_settings;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_set_ip_filter' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.ip_filter']]"
		[Register ("session_handle_set_ip_filter", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/ip_filter;)V", "")]
		public static unsafe void Session_handle_set_ip_filter (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Ip_filter p3)
		{
			const string __id = "session_handle_set_ip_filter.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/ip_filter;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_set_peer_class' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.peer_class_info']]"
		[Register ("session_handle_set_peer_class", "(JLcom/frostwire/jlibtorrent/swig/session_handle;IJLcom/frostwire/jlibtorrent/swig/peer_class_info;)V", "")]
		public static unsafe void Session_handle_set_peer_class (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Peer_class_info p4)
		{
			const string __id = "session_handle_set_peer_class.(JLcom/frostwire/jlibtorrent/swig/session_handle;IJLcom/frostwire/jlibtorrent/swig/peer_class_info;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_set_peer_class_filter' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.ip_filter']]"
		[Register ("session_handle_set_peer_class_filter", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/ip_filter;)V", "")]
		public static unsafe void Session_handle_set_peer_class_filter (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Ip_filter p3)
		{
			const string __id = "session_handle_set_peer_class_filter.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/ip_filter;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_set_peer_class_type_filter' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_class_type_filter']]"
		[Register ("session_handle_set_peer_class_type_filter", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;)V", "")]
		public static unsafe void Session_handle_set_peer_class_type_filter (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_class_type_filter p3)
		{
			const string __id = "session_handle_set_peer_class_type_filter.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/peer_class_type_filter;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_set_port_filter' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.port_filter']]"
		[Register ("session_handle_set_port_filter", "(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/port_filter;)V", "")]
		public static unsafe void Session_handle_set_port_filter (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Port_filter p3)
		{
			const string __id = "session_handle_set_port_filter.(JLcom/frostwire/jlibtorrent/swig/session_handle;JLcom/frostwire/jlibtorrent/swig/port_filter;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_ssl_listen_port' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle']]"
		[Register ("session_handle_ssl_listen_port", "(JLcom/frostwire/jlibtorrent/swig/session_handle;)I", "")]
		public static unsafe int Session_handle_ssl_listen_port (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1)
		{
			const string __id = "session_handle_ssl_listen_port.(JLcom/frostwire/jlibtorrent/swig/session_handle;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_start_default_features_get' and count(parameter)=0]"
		[Register ("session_handle_start_default_features_get", "()J", "")]
		public static unsafe long Session_handle_start_default_features_get ()
		{
			const string __id = "session_handle_start_default_features_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_tcp_get' and count(parameter)=0]"
		[Register ("session_handle_tcp_get", "()I", "")]
		public static unsafe int Session_handle_tcp_get ()
		{
			const string __id = "session_handle_tcp_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_tcp_peer_class_id_get' and count(parameter)=0]"
		[Register ("session_handle_tcp_peer_class_id_get", "()I", "")]
		public static unsafe int Session_handle_tcp_peer_class_id_get ()
		{
			const string __id = "session_handle_tcp_peer_class_id_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_udp_get' and count(parameter)=0]"
		[Register ("session_handle_udp_get", "()I", "")]
		public static unsafe int Session_handle_udp_get ()
		{
			const string __id = "session_handle_udp_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_handle_wait_for_alert_ms' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_handle'] and parameter[3][@type='long']]"
		[Register ("session_handle_wait_for_alert_ms", "(JLcom/frostwire/jlibtorrent/swig/session_handle;J)J", "")]
		public static unsafe long Session_handle_wait_for_alert_ms (long p0, global::FrostWire.Libtorrent.Swig.Session_handle p1, long p2)
		{
			const string __id = "session_handle_wait_for_alert_ms.(JLcom/frostwire/jlibtorrent/swig/session_handle;J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_params_dht_settings_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_params']]"
		[Register ("session_params_dht_settings_get", "(JLcom/frostwire/jlibtorrent/swig/session_params;)J", "")]
		public static unsafe long Session_params_dht_settings_get (long p0, global::FrostWire.Libtorrent.Swig.Session_params p1)
		{
			const string __id = "session_params_dht_settings_get.(JLcom/frostwire/jlibtorrent/swig/session_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_params_dht_settings_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.dht_settings']]"
		[Register ("session_params_dht_settings_set", "(JLcom/frostwire/jlibtorrent/swig/session_params;JLcom/frostwire/jlibtorrent/swig/dht_settings;)V", "")]
		public static unsafe void Session_params_dht_settings_set (long p0, global::FrostWire.Libtorrent.Swig.Session_params p1, long p2, global::FrostWire.Libtorrent.Swig.Dht_settings p3)
		{
			const string __id = "session_params_dht_settings_set.(JLcom/frostwire/jlibtorrent/swig/session_params;JLcom/frostwire/jlibtorrent/swig/dht_settings;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_params_dht_state_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_params']]"
		[Register ("session_params_dht_state_get", "(JLcom/frostwire/jlibtorrent/swig/session_params;)J", "")]
		public static unsafe long Session_params_dht_state_get (long p0, global::FrostWire.Libtorrent.Swig.Session_params p1)
		{
			const string __id = "session_params_dht_state_get.(JLcom/frostwire/jlibtorrent/swig/session_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_params_dht_state_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.dht_state']]"
		[Register ("session_params_dht_state_set", "(JLcom/frostwire/jlibtorrent/swig/session_params;JLcom/frostwire/jlibtorrent/swig/dht_state;)V", "")]
		public static unsafe void Session_params_dht_state_set (long p0, global::FrostWire.Libtorrent.Swig.Session_params p1, long p2, global::FrostWire.Libtorrent.Swig.Dht_state p3)
		{
			const string __id = "session_params_dht_state_set.(JLcom/frostwire/jlibtorrent/swig/session_params;JLcom/frostwire/jlibtorrent/swig/dht_state;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_params_settings_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_params']]"
		[Register ("session_params_settings_get", "(JLcom/frostwire/jlibtorrent/swig/session_params;)J", "")]
		public static unsafe long Session_params_settings_get (long p0, global::FrostWire.Libtorrent.Swig.Session_params p1)
		{
			const string __id = "session_params_settings_get.(JLcom/frostwire/jlibtorrent/swig/session_params;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_params_settings_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_params'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.settings_pack']]"
		[Register ("session_params_settings_set", "(JLcom/frostwire/jlibtorrent/swig/session_params;JLcom/frostwire/jlibtorrent/swig/settings_pack;)V", "")]
		public static unsafe void Session_params_settings_set (long p0, global::FrostWire.Libtorrent.Swig.Session_params p1, long p2, global::FrostWire.Libtorrent.Swig.Settings_pack p3)
		{
			const string __id = "session_params_settings_set.(JLcom/frostwire/jlibtorrent/swig/session_params;JLcom/frostwire/jlibtorrent/swig/settings_pack;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("session_stats_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Session_stats_alert_SWIGUpcast (long p0)
		{
			const string __id = "session_stats_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_alert_alert_type_get' and count(parameter)=0]"
		[Register ("session_stats_alert_alert_type_get", "()I", "")]
		public static unsafe int Session_stats_alert_alert_type_get ()
		{
			const string __id = "session_stats_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_stats_alert']]"
		[Register ("session_stats_alert_category", "(JLcom/frostwire/jlibtorrent/swig/session_stats_alert;)J", "")]
		public static unsafe long Session_stats_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Session_stats_alert p1)
		{
			const string __id = "session_stats_alert_category.(JLcom/frostwire/jlibtorrent/swig/session_stats_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_alert_get_value' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_stats_alert'] and parameter[3][@type='int']]"
		[Register ("session_stats_alert_get_value", "(JLcom/frostwire/jlibtorrent/swig/session_stats_alert;I)J", "")]
		public static unsafe long Session_stats_alert_get_value (long p0, global::FrostWire.Libtorrent.Swig.Session_stats_alert p1, int p2)
		{
			const string __id = "session_stats_alert_get_value.(JLcom/frostwire/jlibtorrent/swig/session_stats_alert;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_stats_alert']]"
		[Register ("session_stats_alert_message", "(JLcom/frostwire/jlibtorrent/swig/session_stats_alert;)Ljava/lang/String;", "")]
		public static unsafe string Session_stats_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Session_stats_alert p1)
		{
			const string __id = "session_stats_alert_message.(JLcom/frostwire/jlibtorrent/swig/session_stats_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_alert_priority_get' and count(parameter)=0]"
		[Register ("session_stats_alert_priority_get", "()I", "")]
		public static unsafe int Session_stats_alert_priority_get ()
		{
			const string __id = "session_stats_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_alert_static_category_get' and count(parameter)=0]"
		[Register ("session_stats_alert_static_category_get", "()J", "")]
		public static unsafe long Session_stats_alert_static_category_get ()
		{
			const string __id = "session_stats_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_stats_alert']]"
		[Register ("session_stats_alert_type", "(JLcom/frostwire/jlibtorrent/swig/session_stats_alert;)I", "")]
		public static unsafe int Session_stats_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Session_stats_alert p1)
		{
			const string __id = "session_stats_alert_type.(JLcom/frostwire/jlibtorrent/swig/session_stats_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_stats_alert']]"
		[Register ("session_stats_alert_what", "(JLcom/frostwire/jlibtorrent/swig/session_stats_alert;)Ljava/lang/String;", "")]
		public static unsafe string Session_stats_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Session_stats_alert p1)
		{
			const string __id = "session_stats_alert_what.(JLcom/frostwire/jlibtorrent/swig/session_stats_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_header_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("session_stats_header_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Session_stats_header_alert_SWIGUpcast (long p0)
		{
			const string __id = "session_stats_header_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_header_alert_alert_type_get' and count(parameter)=0]"
		[Register ("session_stats_header_alert_alert_type_get", "()I", "")]
		public static unsafe int Session_stats_header_alert_alert_type_get ()
		{
			const string __id = "session_stats_header_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_header_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_stats_header_alert']]"
		[Register ("session_stats_header_alert_category", "(JLcom/frostwire/jlibtorrent/swig/session_stats_header_alert;)J", "")]
		public static unsafe long Session_stats_header_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Session_stats_header_alert p1)
		{
			const string __id = "session_stats_header_alert_category.(JLcom/frostwire/jlibtorrent/swig/session_stats_header_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_header_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_stats_header_alert']]"
		[Register ("session_stats_header_alert_message", "(JLcom/frostwire/jlibtorrent/swig/session_stats_header_alert;)Ljava/lang/String;", "")]
		public static unsafe string Session_stats_header_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Session_stats_header_alert p1)
		{
			const string __id = "session_stats_header_alert_message.(JLcom/frostwire/jlibtorrent/swig/session_stats_header_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_header_alert_priority_get' and count(parameter)=0]"
		[Register ("session_stats_header_alert_priority_get", "()I", "")]
		public static unsafe int Session_stats_header_alert_priority_get ()
		{
			const string __id = "session_stats_header_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_header_alert_static_category_get' and count(parameter)=0]"
		[Register ("session_stats_header_alert_static_category_get", "()J", "")]
		public static unsafe long Session_stats_header_alert_static_category_get ()
		{
			const string __id = "session_stats_header_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_header_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_stats_header_alert']]"
		[Register ("session_stats_header_alert_type", "(JLcom/frostwire/jlibtorrent/swig/session_stats_header_alert;)I", "")]
		public static unsafe int Session_stats_header_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Session_stats_header_alert p1)
		{
			const string __id = "session_stats_header_alert_type.(JLcom/frostwire/jlibtorrent/swig/session_stats_header_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_header_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.session_stats_header_alert']]"
		[Register ("session_stats_header_alert_what", "(JLcom/frostwire/jlibtorrent/swig/session_stats_header_alert;)Ljava/lang/String;", "")]
		public static unsafe string Session_stats_header_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Session_stats_header_alert p1)
		{
			const string __id = "session_stats_header_alert_what.(JLcom/frostwire/jlibtorrent/swig/session_stats_header_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='session_stats_metrics' and count(parameter)=0]"
		[Register ("session_stats_metrics", "()J", "")]
		public static unsafe long Session_stats_metrics ()
		{
			const string __id = "session_stats_metrics.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='set_piece_hashes' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("set_piece_hashes", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/error_code;)V", "")]
		public static unsafe void Set_piece_hashes (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, string p2, long p3, global::FrostWire.Libtorrent.Swig.Error_code p4)
		{
			const string __id = "set_piece_hashes.(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/error_code;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='set_piece_hashes_ex' and count(parameter)=7 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.create_torrent'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.set_piece_hashes_listener'] and parameter[6][@type='long'] and parameter[7][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("set_piece_hashes_ex", "(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/set_piece_hashes_listener;JLcom/frostwire/jlibtorrent/swig/error_code;)V", "")]
		public static unsafe void Set_piece_hashes_ex (long p0, global::FrostWire.Libtorrent.Swig.Create_torrent p1, string p2, long p3, global::FrostWire.Libtorrent.Swig.Set_piece_hashes_listener p4, long p5, global::FrostWire.Libtorrent.Swig.Error_code p6)
		{
			const string __id = "set_piece_hashes_ex.(JLcom/frostwire/jlibtorrent/swig/create_torrent;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/set_piece_hashes_listener;JLcom/frostwire/jlibtorrent/swig/error_code;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue ((p6 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p6).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='set_piece_hashes_listener_change_ownership' and count(parameter)=3 and parameter[1][@type='com.frostwire.jlibtorrent.swig.set_piece_hashes_listener'] and parameter[2][@type='long'] and parameter[3][@type='boolean']]"
		[Register ("set_piece_hashes_listener_change_ownership", "(Lcom/frostwire/jlibtorrent/swig/set_piece_hashes_listener;JZ)V", "")]
		public static unsafe void Set_piece_hashes_listener_change_ownership (global::FrostWire.Libtorrent.Swig.Set_piece_hashes_listener p0, long p1, bool p2)
		{
			const string __id = "set_piece_hashes_listener_change_ownership.(Lcom/frostwire/jlibtorrent/swig/set_piece_hashes_listener;JZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='set_piece_hashes_listener_director_connect' and count(parameter)=4 and parameter[1][@type='com.frostwire.jlibtorrent.swig.set_piece_hashes_listener'] and parameter[2][@type='long'] and parameter[3][@type='boolean'] and parameter[4][@type='boolean']]"
		[Register ("set_piece_hashes_listener_director_connect", "(Lcom/frostwire/jlibtorrent/swig/set_piece_hashes_listener;JZZ)V", "")]
		public static unsafe void Set_piece_hashes_listener_director_connect (global::FrostWire.Libtorrent.Swig.Set_piece_hashes_listener p0, long p1, bool p2, bool p3)
		{
			const string __id = "set_piece_hashes_listener_director_connect.(Lcom/frostwire/jlibtorrent/swig/set_piece_hashes_listener;JZZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='set_piece_hashes_listener_progress' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.set_piece_hashes_listener'] and parameter[3][@type='int']]"
		[Register ("set_piece_hashes_listener_progress", "(JLcom/frostwire/jlibtorrent/swig/set_piece_hashes_listener;I)V", "")]
		public static unsafe void Set_piece_hashes_listener_progress (long p0, global::FrostWire.Libtorrent.Swig.Set_piece_hashes_listener p1, int p2)
		{
			const string __id = "set_piece_hashes_listener_progress.(JLcom/frostwire/jlibtorrent/swig/set_piece_hashes_listener;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='set_piece_hashes_listener_progressSwigExplicitset_piece_hashes_listener' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.set_piece_hashes_listener'] and parameter[3][@type='int']]"
		[Register ("set_piece_hashes_listener_progressSwigExplicitset_piece_hashes_listener", "(JLcom/frostwire/jlibtorrent/swig/set_piece_hashes_listener;I)V", "")]
		public static unsafe void Set_piece_hashes_listener_progressSwigExplicitset_piece_hashes_listener (long p0, global::FrostWire.Libtorrent.Swig.Set_piece_hashes_listener p1, int p2)
		{
			const string __id = "set_piece_hashes_listener_progressSwigExplicitset_piece_hashes_listener.(JLcom/frostwire/jlibtorrent/swig/set_piece_hashes_listener;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='set_posix_wrapper' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.posix_wrapper']]"
		[Register ("set_posix_wrapper", "(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;)V", "")]
		public static unsafe void Set_posix_wrapper (long p0, global::FrostWire.Libtorrent.Swig.Posix_wrapper p1)
		{
			const string __id = "set_posix_wrapper.(JLcom/frostwire/jlibtorrent/swig/posix_wrapper;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='setting_by_name' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setting_by_name", "(Ljava/lang/String;)I", "")]
		public static unsafe int Setting_by_name (string p0)
		{
			const string __id = "setting_by_name.(Ljava/lang/String;)I";
			IntPtr native_p0 = JNIEnv.NewString (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_allow_multiple_connections_per_ip_get' and count(parameter)=0]"
		[Register ("settings_pack_allow_multiple_connections_per_ip_get", "()I", "")]
		public static unsafe int Settings_pack_allow_multiple_connections_per_ip_get ()
		{
			const string __id = "settings_pack_allow_multiple_connections_per_ip_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_announce_crypto_support_get' and count(parameter)=0]"
		[Register ("settings_pack_announce_crypto_support_get", "()I", "")]
		public static unsafe int Settings_pack_announce_crypto_support_get ()
		{
			const string __id = "settings_pack_announce_crypto_support_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_auto_manage_interval_get' and count(parameter)=0]"
		[Register ("settings_pack_auto_manage_interval_get", "()I", "")]
		public static unsafe int Settings_pack_auto_manage_interval_get ()
		{
			const string __id = "settings_pack_auto_manage_interval_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_ban_web_seeds_get' and count(parameter)=0]"
		[Register ("settings_pack_ban_web_seeds_get", "()I", "")]
		public static unsafe int Settings_pack_ban_web_seeds_get ()
		{
			const string __id = "settings_pack_ban_web_seeds_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_bittyrant_choker_get' and count(parameter)=0]"
		[Register ("settings_pack_bittyrant_choker_get", "()I", "")]
		public static unsafe int Settings_pack_bittyrant_choker_get ()
		{
			const string __id = "settings_pack_bittyrant_choker_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_bool_type_base_get' and count(parameter)=0]"
		[Register ("settings_pack_bool_type_base_get", "()I", "")]
		public static unsafe int Settings_pack_bool_type_base_get ()
		{
			const string __id = "settings_pack_bool_type_base_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_cache_expiry_get' and count(parameter)=0]"
		[Register ("settings_pack_cache_expiry_get", "()I", "")]
		public static unsafe int Settings_pack_cache_expiry_get ()
		{
			const string __id = "settings_pack_cache_expiry_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_checking_mem_usage_get' and count(parameter)=0]"
		[Register ("settings_pack_checking_mem_usage_get", "()I", "")]
		public static unsafe int Settings_pack_checking_mem_usage_get ()
		{
			const string __id = "settings_pack_checking_mem_usage_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_clear__SWIG_0' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.settings_pack']]"
		[Register ("settings_pack_clear__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/settings_pack;)V", "")]
		public static unsafe void Settings_pack_clear__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Settings_pack p1)
		{
			const string __id = "settings_pack_clear__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/settings_pack;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_clear__SWIG_1' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.settings_pack'] and parameter[3][@type='int']]"
		[Register ("settings_pack_clear__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/settings_pack;I)V", "")]
		public static unsafe void Settings_pack_clear__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Settings_pack p1, int p2)
		{
			const string __id = "settings_pack_clear__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/settings_pack;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_coalesce_reads_get' and count(parameter)=0]"
		[Register ("settings_pack_coalesce_reads_get", "()I", "")]
		public static unsafe int Settings_pack_coalesce_reads_get ()
		{
			const string __id = "settings_pack_coalesce_reads_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_connections_limit_get' and count(parameter)=0]"
		[Register ("settings_pack_connections_limit_get", "()I", "")]
		public static unsafe int Settings_pack_connections_limit_get ()
		{
			const string __id = "settings_pack_connections_limit_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_disable_hash_checks_get' and count(parameter)=0]"
		[Register ("settings_pack_disable_hash_checks_get", "()I", "")]
		public static unsafe int Settings_pack_disable_hash_checks_get ()
		{
			const string __id = "settings_pack_disable_hash_checks_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_disable_os_cache_get' and count(parameter)=0]"
		[Register ("settings_pack_disable_os_cache_get", "()I", "")]
		public static unsafe int Settings_pack_disable_os_cache_get ()
		{
			const string __id = "settings_pack_disable_os_cache_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_enable_os_cache_get' and count(parameter)=0]"
		[Register ("settings_pack_enable_os_cache_get", "()I", "")]
		public static unsafe int Settings_pack_enable_os_cache_get ()
		{
			const string __id = "settings_pack_enable_os_cache_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_fixed_slots_choker_get' and count(parameter)=0]"
		[Register ("settings_pack_fixed_slots_choker_get", "()I", "")]
		public static unsafe int Settings_pack_fixed_slots_choker_get ()
		{
			const string __id = "settings_pack_fixed_slots_choker_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_get_bool' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.settings_pack'] and parameter[3][@type='int']]"
		[Register ("settings_pack_get_bool", "(JLcom/frostwire/jlibtorrent/swig/settings_pack;I)Z", "")]
		public static unsafe bool Settings_pack_get_bool (long p0, global::FrostWire.Libtorrent.Swig.Settings_pack p1, int p2)
		{
			const string __id = "settings_pack_get_bool.(JLcom/frostwire/jlibtorrent/swig/settings_pack;I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_get_int' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.settings_pack'] and parameter[3][@type='int']]"
		[Register ("settings_pack_get_int", "(JLcom/frostwire/jlibtorrent/swig/settings_pack;I)I", "")]
		public static unsafe int Settings_pack_get_int (long p0, global::FrostWire.Libtorrent.Swig.Settings_pack p1, int p2)
		{
			const string __id = "settings_pack_get_int.(JLcom/frostwire/jlibtorrent/swig/settings_pack;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_get_str' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.settings_pack'] and parameter[3][@type='int']]"
		[Register ("settings_pack_get_str", "(JLcom/frostwire/jlibtorrent/swig/settings_pack;I)Ljava/lang/String;", "")]
		public static unsafe string Settings_pack_get_str (long p0, global::FrostWire.Libtorrent.Swig.Settings_pack p1, int p2)
		{
			const string __id = "settings_pack_get_str.(JLcom/frostwire/jlibtorrent/swig/settings_pack;I)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_handshake_client_version_get' and count(parameter)=0]"
		[Register ("settings_pack_handshake_client_version_get", "()I", "")]
		public static unsafe int Settings_pack_handshake_client_version_get ()
		{
			const string __id = "settings_pack_handshake_client_version_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_has_val' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.settings_pack'] and parameter[3][@type='int']]"
		[Register ("settings_pack_has_val", "(JLcom/frostwire/jlibtorrent/swig/settings_pack;I)Z", "")]
		public static unsafe bool Settings_pack_has_val (long p0, global::FrostWire.Libtorrent.Swig.Settings_pack p1, int p2)
		{
			const string __id = "settings_pack_has_val.(JLcom/frostwire/jlibtorrent/swig/settings_pack;I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_index_mask_get' and count(parameter)=0]"
		[Register ("settings_pack_index_mask_get", "()I", "")]
		public static unsafe int Settings_pack_index_mask_get ()
		{
			const string __id = "settings_pack_index_mask_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_int_type_base_get' and count(parameter)=0]"
		[Register ("settings_pack_int_type_base_get", "()I", "")]
		public static unsafe int Settings_pack_int_type_base_get ()
		{
			const string __id = "settings_pack_int_type_base_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_no_atime_storage_get' and count(parameter)=0]"
		[Register ("settings_pack_no_atime_storage_get", "()I", "")]
		public static unsafe int Settings_pack_no_atime_storage_get ()
		{
			const string __id = "settings_pack_no_atime_storage_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_no_piece_suggestions_get' and count(parameter)=0]"
		[Register ("settings_pack_no_piece_suggestions_get", "()I", "")]
		public static unsafe int Settings_pack_no_piece_suggestions_get ()
		{
			const string __id = "settings_pack_no_piece_suggestions_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_no_recheck_incomplete_resume_get' and count(parameter)=0]"
		[Register ("settings_pack_no_recheck_incomplete_resume_get", "()I", "")]
		public static unsafe int Settings_pack_no_recheck_incomplete_resume_get ()
		{
			const string __id = "settings_pack_no_recheck_incomplete_resume_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_num_bool_settings_get' and count(parameter)=0]"
		[Register ("settings_pack_num_bool_settings_get", "()I", "")]
		public static unsafe int Settings_pack_num_bool_settings_get ()
		{
			const string __id = "settings_pack_num_bool_settings_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_num_int_settings_get' and count(parameter)=0]"
		[Register ("settings_pack_num_int_settings_get", "()I", "")]
		public static unsafe int Settings_pack_num_int_settings_get ()
		{
			const string __id = "settings_pack_num_int_settings_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_num_optimistic_unchoke_slots_get' and count(parameter)=0]"
		[Register ("settings_pack_num_optimistic_unchoke_slots_get", "()I", "")]
		public static unsafe int Settings_pack_num_optimistic_unchoke_slots_get ()
		{
			const string __id = "settings_pack_num_optimistic_unchoke_slots_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_num_string_settings_get' and count(parameter)=0]"
		[Register ("settings_pack_num_string_settings_get", "()I", "")]
		public static unsafe int Settings_pack_num_string_settings_get ()
		{
			const string __id = "settings_pack_num_string_settings_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_pe_both_get' and count(parameter)=0]"
		[Register ("settings_pack_pe_both_get", "()I", "")]
		public static unsafe int Settings_pack_pe_both_get ()
		{
			const string __id = "settings_pack_pe_both_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_pe_plaintext_get' and count(parameter)=0]"
		[Register ("settings_pack_pe_plaintext_get", "()I", "")]
		public static unsafe int Settings_pack_pe_plaintext_get ()
		{
			const string __id = "settings_pack_pe_plaintext_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_pe_rc4_get' and count(parameter)=0]"
		[Register ("settings_pack_pe_rc4_get", "()I", "")]
		public static unsafe int Settings_pack_pe_rc4_get ()
		{
			const string __id = "settings_pack_pe_rc4_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_peer_proportional_get' and count(parameter)=0]"
		[Register ("settings_pack_peer_proportional_get", "()I", "")]
		public static unsafe int Settings_pack_peer_proportional_get ()
		{
			const string __id = "settings_pack_peer_proportional_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_prefer_tcp_get' and count(parameter)=0]"
		[Register ("settings_pack_prefer_tcp_get", "()I", "")]
		public static unsafe int Settings_pack_prefer_tcp_get ()
		{
			const string __id = "settings_pack_prefer_tcp_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_rate_based_choker_get' and count(parameter)=0]"
		[Register ("settings_pack_rate_based_choker_get", "()I", "")]
		public static unsafe int Settings_pack_rate_based_choker_get ()
		{
			const string __id = "settings_pack_rate_based_choker_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_read_cache_line_size_get' and count(parameter)=0]"
		[Register ("settings_pack_read_cache_line_size_get", "()I", "")]
		public static unsafe int Settings_pack_read_cache_line_size_get ()
		{
			const string __id = "settings_pack_read_cache_line_size_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_seeding_outgoing_connections_get' and count(parameter)=0]"
		[Register ("settings_pack_seeding_outgoing_connections_get", "()I", "")]
		public static unsafe int Settings_pack_seeding_outgoing_connections_get ()
		{
			const string __id = "settings_pack_seeding_outgoing_connections_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_send_redundant_have_get' and count(parameter)=0]"
		[Register ("settings_pack_send_redundant_have_get", "()I", "")]
		public static unsafe int Settings_pack_send_redundant_have_get ()
		{
			const string __id = "settings_pack_send_redundant_have_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_set_bool' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.settings_pack'] and parameter[3][@type='int'] and parameter[4][@type='boolean']]"
		[Register ("settings_pack_set_bool", "(JLcom/frostwire/jlibtorrent/swig/settings_pack;IZ)V", "")]
		public static unsafe void Settings_pack_set_bool (long p0, global::FrostWire.Libtorrent.Swig.Settings_pack p1, int p2, bool p3)
		{
			const string __id = "settings_pack_set_bool.(JLcom/frostwire/jlibtorrent/swig/settings_pack;IZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_set_int' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.settings_pack'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("settings_pack_set_int", "(JLcom/frostwire/jlibtorrent/swig/settings_pack;II)V", "")]
		public static unsafe void Settings_pack_set_int (long p0, global::FrostWire.Libtorrent.Swig.Settings_pack p1, int p2, int p3)
		{
			const string __id = "settings_pack_set_int.(JLcom/frostwire/jlibtorrent/swig/settings_pack;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_set_str' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.settings_pack'] and parameter[3][@type='int'] and parameter[4][@type='java.lang.String']]"
		[Register ("settings_pack_set_str", "(JLcom/frostwire/jlibtorrent/swig/settings_pack;ILjava/lang/String;)V", "")]
		public static unsafe void Settings_pack_set_str (long p0, global::FrostWire.Libtorrent.Swig.Settings_pack p1, int p2, string p3)
		{
			const string __id = "settings_pack_set_str.(JLcom/frostwire/jlibtorrent/swig/settings_pack;ILjava/lang/String;)V";
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (native_p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_string_type_base_get' and count(parameter)=0]"
		[Register ("settings_pack_string_type_base_get", "()I", "")]
		public static unsafe int Settings_pack_string_type_base_get ()
		{
			const string __id = "settings_pack_string_type_base_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_suggest_read_cache_get' and count(parameter)=0]"
		[Register ("settings_pack_suggest_read_cache_get", "()I", "")]
		public static unsafe int Settings_pack_suggest_read_cache_get ()
		{
			const string __id = "settings_pack_suggest_read_cache_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_support_share_mode_get' and count(parameter)=0]"
		[Register ("settings_pack_support_share_mode_get", "()I", "")]
		public static unsafe int Settings_pack_support_share_mode_get ()
		{
			const string __id = "settings_pack_support_share_mode_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_tracker_backoff_get' and count(parameter)=0]"
		[Register ("settings_pack_tracker_backoff_get", "()I", "")]
		public static unsafe int Settings_pack_tracker_backoff_get ()
		{
			const string __id = "settings_pack_tracker_backoff_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_tracker_completion_timeout_get' and count(parameter)=0]"
		[Register ("settings_pack_tracker_completion_timeout_get", "()I", "")]
		public static unsafe int Settings_pack_tracker_completion_timeout_get ()
		{
			const string __id = "settings_pack_tracker_completion_timeout_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_type_mask_get' and count(parameter)=0]"
		[Register ("settings_pack_type_mask_get", "()I", "")]
		public static unsafe int Settings_pack_type_mask_get ()
		{
			const string __id = "settings_pack_type_mask_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_unchoke_slots_limit_get' and count(parameter)=0]"
		[Register ("settings_pack_unchoke_slots_limit_get", "()I", "")]
		public static unsafe int Settings_pack_unchoke_slots_limit_get ()
		{
			const string __id = "settings_pack_unchoke_slots_limit_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_use_dht_as_fallback_get' and count(parameter)=0]"
		[Register ("settings_pack_use_dht_as_fallback_get", "()I", "")]
		public static unsafe int Settings_pack_use_dht_as_fallback_get ()
		{
			const string __id = "settings_pack_use_dht_as_fallback_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_user_agent_get' and count(parameter)=0]"
		[Register ("settings_pack_user_agent_get", "()I", "")]
		public static unsafe int Settings_pack_user_agent_get ()
		{
			const string __id = "settings_pack_user_agent_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_utp_loss_multiplier_get' and count(parameter)=0]"
		[Register ("settings_pack_utp_loss_multiplier_get", "()I", "")]
		public static unsafe int Settings_pack_utp_loss_multiplier_get ()
		{
			const string __id = "settings_pack_utp_loss_multiplier_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='settings_pack_volatile_read_cache_get' and count(parameter)=0]"
		[Register ("settings_pack_volatile_read_cache_get", "()I", "")]
		public static unsafe int Settings_pack_volatile_read_cache_get ()
		{
			const string __id = "settings_pack_volatile_read_cache_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("sha1_hash_clear", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Sha1_hash_clear (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash p1)
		{
			const string __id = "sha1_hash_clear.(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_compare' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("sha1_hash_compare", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)I", "")]
		public static unsafe int Sha1_hash_compare (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "sha1_hash_compare.(JLcom/frostwire/jlibtorrent/swig/sha1_hash;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_count_leading_zeroes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("sha1_hash_count_leading_zeroes", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)I", "")]
		public static unsafe int Sha1_hash_count_leading_zeroes (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash p1)
		{
			const string __id = "sha1_hash_count_leading_zeroes.(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_hash_code' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("sha1_hash_hash_code", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)I", "")]
		public static unsafe int Sha1_hash_hash_code (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash p1)
		{
			const string __id = "sha1_hash_hash_code.(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_is_all_zeros' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("sha1_hash_is_all_zeros", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)Z", "")]
		public static unsafe bool Sha1_hash_is_all_zeros (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash p1)
		{
			const string __id = "sha1_hash_is_all_zeros.(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_max' and count(parameter)=0]"
		[Register ("sha1_hash_max", "()J", "")]
		public static unsafe long Sha1_hash_max ()
		{
			const string __id = "sha1_hash_max.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_min' and count(parameter)=0]"
		[Register ("sha1_hash_min", "()J", "")]
		public static unsafe long Sha1_hash_min ()
		{
			const string __id = "sha1_hash_min.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_op_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("sha1_hash_op_eq", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)Z", "")]
		public static unsafe bool Sha1_hash_op_eq (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "sha1_hash_op_eq.(JLcom/frostwire/jlibtorrent/swig/sha1_hash;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_op_lt' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("sha1_hash_op_lt", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)Z", "")]
		public static unsafe bool Sha1_hash_op_lt (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "sha1_hash_op_lt.(JLcom/frostwire/jlibtorrent/swig/sha1_hash;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_op_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("sha1_hash_op_ne", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)Z", "")]
		public static unsafe bool Sha1_hash_op_ne (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "sha1_hash_op_ne.(JLcom/frostwire/jlibtorrent/swig/sha1_hash;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_size' and count(parameter)=0]"
		[Register ("sha1_hash_size", "()J", "")]
		public static unsafe long Sha1_hash_size ()
		{
			const string __id = "sha1_hash_size.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_to_bytes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("sha1_hash_to_bytes", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)J", "")]
		public static unsafe long Sha1_hash_to_bytes (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash p1)
		{
			const string __id = "sha1_hash_to_bytes.(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_to_hex' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("sha1_hash_to_hex", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)Ljava/lang/String;", "")]
		public static unsafe string Sha1_hash_to_hex (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash p1)
		{
			const string __id = "sha1_hash_to_hex.(JLcom/frostwire/jlibtorrent/swig/sha1_hash;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_udp_endpoint_pair_first_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair']]"
		[Register ("sha1_hash_udp_endpoint_pair_first_get", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair;)J", "")]
		public static unsafe long Sha1_hash_udp_endpoint_pair_first_get (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair p1)
		{
			const string __id = "sha1_hash_udp_endpoint_pair_first_get.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_udp_endpoint_pair_first_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("sha1_hash_udp_endpoint_pair_first_set", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Sha1_hash_udp_endpoint_pair_first_set (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "sha1_hash_udp_endpoint_pair_first_set.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_udp_endpoint_pair_second_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair']]"
		[Register ("sha1_hash_udp_endpoint_pair_second_get", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair;)J", "")]
		public static unsafe long Sha1_hash_udp_endpoint_pair_second_get (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair p1)
		{
			const string __id = "sha1_hash_udp_endpoint_pair_second_get.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_udp_endpoint_pair_second_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.udp_endpoint']]"
		[Register ("sha1_hash_udp_endpoint_pair_second_set", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;)V", "")]
		public static unsafe void Sha1_hash_udp_endpoint_pair_second_set (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair p1, long p2, global::FrostWire.Libtorrent.Swig.Udp_endpoint p3)
		{
			const string __id = "sha1_hash_udp_endpoint_pair_second_set.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_udp_endpoint_pair_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair_vector']]"
		[Register ("sha1_hash_udp_endpoint_pair_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;)J", "")]
		public static unsafe long Sha1_hash_udp_endpoint_pair_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair_vector p1)
		{
			const string __id = "sha1_hash_udp_endpoint_pair_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_udp_endpoint_pair_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair_vector']]"
		[Register ("sha1_hash_udp_endpoint_pair_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;)V", "")]
		public static unsafe void Sha1_hash_udp_endpoint_pair_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair_vector p1)
		{
			const string __id = "sha1_hash_udp_endpoint_pair_vector_clear.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_udp_endpoint_pair_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair_vector']]"
		[Register ("sha1_hash_udp_endpoint_pair_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;)Z", "")]
		public static unsafe bool Sha1_hash_udp_endpoint_pair_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair_vector p1)
		{
			const string __id = "sha1_hash_udp_endpoint_pair_vector_empty.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_udp_endpoint_pair_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair_vector'] and parameter[3][@type='int']]"
		[Register ("sha1_hash_udp_endpoint_pair_vector_get", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;I)J", "")]
		public static unsafe long Sha1_hash_udp_endpoint_pair_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair_vector p1, int p2)
		{
			const string __id = "sha1_hash_udp_endpoint_pair_vector_get.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_udp_endpoint_pair_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair']]"
		[Register ("sha1_hash_udp_endpoint_pair_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair;)V", "")]
		public static unsafe void Sha1_hash_udp_endpoint_pair_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair p3)
		{
			const string __id = "sha1_hash_udp_endpoint_pair_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_udp_endpoint_pair_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair_vector'] and parameter[3][@type='long']]"
		[Register ("sha1_hash_udp_endpoint_pair_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;J)V", "")]
		public static unsafe void Sha1_hash_udp_endpoint_pair_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair_vector p1, long p2)
		{
			const string __id = "sha1_hash_udp_endpoint_pair_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_udp_endpoint_pair_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair']]"
		[Register ("sha1_hash_udp_endpoint_pair_vector_set", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;IJLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair;)V", "")]
		public static unsafe void Sha1_hash_udp_endpoint_pair_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair p4)
		{
			const string __id = "sha1_hash_udp_endpoint_pair_vector_set.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;IJLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_udp_endpoint_pair_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_udp_endpoint_pair_vector']]"
		[Register ("sha1_hash_udp_endpoint_pair_vector_size", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;)J", "")]
		public static unsafe long Sha1_hash_udp_endpoint_pair_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_udp_endpoint_pair_vector p1)
		{
			const string __id = "sha1_hash_udp_endpoint_pair_vector_size.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_udp_endpoint_pair_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_vector']]"
		[Register ("sha1_hash_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;)J", "")]
		public static unsafe long Sha1_hash_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_vector p1)
		{
			const string __id = "sha1_hash_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_vector']]"
		[Register ("sha1_hash_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;)V", "")]
		public static unsafe void Sha1_hash_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_vector p1)
		{
			const string __id = "sha1_hash_vector_clear.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_vector']]"
		[Register ("sha1_hash_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;)Z", "")]
		public static unsafe bool Sha1_hash_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_vector p1)
		{
			const string __id = "sha1_hash_vector_empty.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_vector'] and parameter[3][@type='int']]"
		[Register ("sha1_hash_vector_get", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;I)J", "")]
		public static unsafe long Sha1_hash_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_vector p1, int p2)
		{
			const string __id = "sha1_hash_vector_get.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("sha1_hash_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Sha1_hash_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "sha1_hash_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_vector'] and parameter[3][@type='long']]"
		[Register ("sha1_hash_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;J)V", "")]
		public static unsafe void Sha1_hash_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_vector p1, long p2)
		{
			const string __id = "sha1_hash_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("sha1_hash_vector_set", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;IJLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Sha1_hash_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Sha1_hash p4)
		{
			const string __id = "sha1_hash_vector_set.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;IJLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='sha1_hash_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.sha1_hash_vector']]"
		[Register ("sha1_hash_vector_size", "(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;)J", "")]
		public static unsafe long Sha1_hash_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Sha1_hash_vector p1)
		{
			const string __id = "sha1_hash_vector_size.(JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='share_mode_get' and count(parameter)=0]"
		[Register ("share_mode_get", "()J", "")]
		public static unsafe long Share_mode_get ()
		{
			const string __id = "share_mode_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_changed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("state_changed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long State_changed_alert_SWIGUpcast (long p0)
		{
			const string __id = "state_changed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_changed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("state_changed_alert_alert_type_get", "()I", "")]
		public static unsafe int State_changed_alert_alert_type_get ()
		{
			const string __id = "state_changed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_changed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.state_changed_alert']]"
		[Register ("state_changed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/state_changed_alert;)J", "")]
		public static unsafe long State_changed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.State_changed_alert p1)
		{
			const string __id = "state_changed_alert_category.(JLcom/frostwire/jlibtorrent/swig/state_changed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_changed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.state_changed_alert']]"
		[Register ("state_changed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/state_changed_alert;)Ljava/lang/String;", "")]
		public static unsafe string State_changed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.State_changed_alert p1)
		{
			const string __id = "state_changed_alert_message.(JLcom/frostwire/jlibtorrent/swig/state_changed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_changed_alert_prev_state_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.state_changed_alert']]"
		[Register ("state_changed_alert_prev_state_get", "(JLcom/frostwire/jlibtorrent/swig/state_changed_alert;)I", "")]
		public static unsafe int State_changed_alert_prev_state_get (long p0, global::FrostWire.Libtorrent.Swig.State_changed_alert p1)
		{
			const string __id = "state_changed_alert_prev_state_get.(JLcom/frostwire/jlibtorrent/swig/state_changed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_changed_alert_priority_get' and count(parameter)=0]"
		[Register ("state_changed_alert_priority_get", "()I", "")]
		public static unsafe int State_changed_alert_priority_get ()
		{
			const string __id = "state_changed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_changed_alert_state_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.state_changed_alert']]"
		[Register ("state_changed_alert_state_get", "(JLcom/frostwire/jlibtorrent/swig/state_changed_alert;)I", "")]
		public static unsafe int State_changed_alert_state_get (long p0, global::FrostWire.Libtorrent.Swig.State_changed_alert p1)
		{
			const string __id = "state_changed_alert_state_get.(JLcom/frostwire/jlibtorrent/swig/state_changed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_changed_alert_static_category_get' and count(parameter)=0]"
		[Register ("state_changed_alert_static_category_get", "()J", "")]
		public static unsafe long State_changed_alert_static_category_get ()
		{
			const string __id = "state_changed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_changed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.state_changed_alert']]"
		[Register ("state_changed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/state_changed_alert;)I", "")]
		public static unsafe int State_changed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.State_changed_alert p1)
		{
			const string __id = "state_changed_alert_type.(JLcom/frostwire/jlibtorrent/swig/state_changed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_changed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.state_changed_alert']]"
		[Register ("state_changed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/state_changed_alert;)Ljava/lang/String;", "")]
		public static unsafe string State_changed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.State_changed_alert p1)
		{
			const string __id = "state_changed_alert_what.(JLcom/frostwire/jlibtorrent/swig/state_changed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_not_recoverable_get' and count(parameter)=0]"
		[Register ("state_not_recoverable_get", "()I", "")]
		public static unsafe int State_not_recoverable_get ()
		{
			const string __id = "state_not_recoverable_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_update_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("state_update_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long State_update_alert_SWIGUpcast (long p0)
		{
			const string __id = "state_update_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_update_alert_alert_type_get' and count(parameter)=0]"
		[Register ("state_update_alert_alert_type_get", "()I", "")]
		public static unsafe int State_update_alert_alert_type_get ()
		{
			const string __id = "state_update_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_update_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.state_update_alert']]"
		[Register ("state_update_alert_category", "(JLcom/frostwire/jlibtorrent/swig/state_update_alert;)J", "")]
		public static unsafe long State_update_alert_category (long p0, global::FrostWire.Libtorrent.Swig.State_update_alert p1)
		{
			const string __id = "state_update_alert_category.(JLcom/frostwire/jlibtorrent/swig/state_update_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_update_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.state_update_alert']]"
		[Register ("state_update_alert_message", "(JLcom/frostwire/jlibtorrent/swig/state_update_alert;)Ljava/lang/String;", "")]
		public static unsafe string State_update_alert_message (long p0, global::FrostWire.Libtorrent.Swig.State_update_alert p1)
		{
			const string __id = "state_update_alert_message.(JLcom/frostwire/jlibtorrent/swig/state_update_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_update_alert_priority_get' and count(parameter)=0]"
		[Register ("state_update_alert_priority_get", "()I", "")]
		public static unsafe int State_update_alert_priority_get ()
		{
			const string __id = "state_update_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_update_alert_static_category_get' and count(parameter)=0]"
		[Register ("state_update_alert_static_category_get", "()J", "")]
		public static unsafe long State_update_alert_static_category_get ()
		{
			const string __id = "state_update_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_update_alert_status_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.state_update_alert']]"
		[Register ("state_update_alert_status_get", "(JLcom/frostwire/jlibtorrent/swig/state_update_alert;)J", "")]
		public static unsafe long State_update_alert_status_get (long p0, global::FrostWire.Libtorrent.Swig.State_update_alert p1)
		{
			const string __id = "state_update_alert_status_get.(JLcom/frostwire/jlibtorrent/swig/state_update_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_update_alert_status_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.state_update_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_status_vector']]"
		[Register ("state_update_alert_status_set", "(JLcom/frostwire/jlibtorrent/swig/state_update_alert;JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;)V", "")]
		public static unsafe void State_update_alert_status_set (long p0, global::FrostWire.Libtorrent.Swig.State_update_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_status_vector p3)
		{
			const string __id = "state_update_alert_status_set.(JLcom/frostwire/jlibtorrent/swig/state_update_alert;JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_update_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.state_update_alert']]"
		[Register ("state_update_alert_type", "(JLcom/frostwire/jlibtorrent/swig/state_update_alert;)I", "")]
		public static unsafe int State_update_alert_type (long p0, global::FrostWire.Libtorrent.Swig.State_update_alert p1)
		{
			const string __id = "state_update_alert_type.(JLcom/frostwire/jlibtorrent/swig/state_update_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='state_update_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.state_update_alert']]"
		[Register ("state_update_alert_what", "(JLcom/frostwire/jlibtorrent/swig/state_update_alert;)Ljava/lang/String;", "")]
		public static unsafe string State_update_alert_what (long p0, global::FrostWire.Libtorrent.Swig.State_update_alert p1)
		{
			const string __id = "state_update_alert_what.(JLcom/frostwire/jlibtorrent/swig/state_update_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("stats_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Stats_alert_SWIGUpcast (long p0)
		{
			const string __id = "stats_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_alert_alert_type_get' and count(parameter)=0]"
		[Register ("stats_alert_alert_type_get", "()I", "")]
		public static unsafe int Stats_alert_alert_type_get ()
		{
			const string __id = "stats_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_alert']]"
		[Register ("stats_alert_category", "(JLcom/frostwire/jlibtorrent/swig/stats_alert;)J", "")]
		public static unsafe long Stats_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Stats_alert p1)
		{
			const string __id = "stats_alert_category.(JLcom/frostwire/jlibtorrent/swig/stats_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_alert_download_ip_protocol_get' and count(parameter)=0]"
		[Register ("stats_alert_download_ip_protocol_get", "()I", "")]
		public static unsafe int Stats_alert_download_ip_protocol_get ()
		{
			const string __id = "stats_alert_download_ip_protocol_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_alert_get_transferred' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_alert'] and parameter[3][@type='int']]"
		[Register ("stats_alert_get_transferred", "(JLcom/frostwire/jlibtorrent/swig/stats_alert;I)I", "")]
		public static unsafe int Stats_alert_get_transferred (long p0, global::FrostWire.Libtorrent.Swig.Stats_alert p1, int p2)
		{
			const string __id = "stats_alert_get_transferred.(JLcom/frostwire/jlibtorrent/swig/stats_alert;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_alert_interval_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_alert']]"
		[Register ("stats_alert_interval_get", "(JLcom/frostwire/jlibtorrent/swig/stats_alert;)I", "")]
		public static unsafe int Stats_alert_interval_get (long p0, global::FrostWire.Libtorrent.Swig.Stats_alert p1)
		{
			const string __id = "stats_alert_interval_get.(JLcom/frostwire/jlibtorrent/swig/stats_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_alert']]"
		[Register ("stats_alert_message", "(JLcom/frostwire/jlibtorrent/swig/stats_alert;)Ljava/lang/String;", "")]
		public static unsafe string Stats_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Stats_alert p1)
		{
			const string __id = "stats_alert_message.(JLcom/frostwire/jlibtorrent/swig/stats_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_alert_num_channels_get' and count(parameter)=0]"
		[Register ("stats_alert_num_channels_get", "()I", "")]
		public static unsafe int Stats_alert_num_channels_get ()
		{
			const string __id = "stats_alert_num_channels_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_alert_priority_get' and count(parameter)=0]"
		[Register ("stats_alert_priority_get", "()I", "")]
		public static unsafe int Stats_alert_priority_get ()
		{
			const string __id = "stats_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_alert_static_category_get' and count(parameter)=0]"
		[Register ("stats_alert_static_category_get", "()J", "")]
		public static unsafe long Stats_alert_static_category_get ()
		{
			const string __id = "stats_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_alert']]"
		[Register ("stats_alert_type", "(JLcom/frostwire/jlibtorrent/swig/stats_alert;)I", "")]
		public static unsafe int Stats_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Stats_alert p1)
		{
			const string __id = "stats_alert_type.(JLcom/frostwire/jlibtorrent/swig/stats_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_alert']]"
		[Register ("stats_alert_what", "(JLcom/frostwire/jlibtorrent/swig/stats_alert;)Ljava/lang/String;", "")]
		public static unsafe string Stats_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Stats_alert p1)
		{
			const string __id = "stats_alert_what.(JLcom/frostwire/jlibtorrent/swig/stats_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_metric_get_name' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_metric']]"
		[Register ("stats_metric_get_name", "(JLcom/frostwire/jlibtorrent/swig/stats_metric;)Ljava/lang/String;", "")]
		public static unsafe string Stats_metric_get_name (long p0, global::FrostWire.Libtorrent.Swig.Stats_metric p1)
		{
			const string __id = "stats_metric_get_name.(JLcom/frostwire/jlibtorrent/swig/stats_metric;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_metric_type_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_metric']]"
		[Register ("stats_metric_type_get", "(JLcom/frostwire/jlibtorrent/swig/stats_metric;)I", "")]
		public static unsafe int Stats_metric_type_get (long p0, global::FrostWire.Libtorrent.Swig.Stats_metric p1)
		{
			const string __id = "stats_metric_type_get.(JLcom/frostwire/jlibtorrent/swig/stats_metric;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_metric_type_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_metric'] and parameter[3][@type='int']]"
		[Register ("stats_metric_type_set", "(JLcom/frostwire/jlibtorrent/swig/stats_metric;I)V", "")]
		public static unsafe void Stats_metric_type_set (long p0, global::FrostWire.Libtorrent.Swig.Stats_metric p1, int p2)
		{
			const string __id = "stats_metric_type_set.(JLcom/frostwire/jlibtorrent/swig/stats_metric;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_metric_value_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_metric']]"
		[Register ("stats_metric_value_index_get", "(JLcom/frostwire/jlibtorrent/swig/stats_metric;)I", "")]
		public static unsafe int Stats_metric_value_index_get (long p0, global::FrostWire.Libtorrent.Swig.Stats_metric p1)
		{
			const string __id = "stats_metric_value_index_get.(JLcom/frostwire/jlibtorrent/swig/stats_metric;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_metric_value_index_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_metric'] and parameter[3][@type='int']]"
		[Register ("stats_metric_value_index_set", "(JLcom/frostwire/jlibtorrent/swig/stats_metric;I)V", "")]
		public static unsafe void Stats_metric_value_index_set (long p0, global::FrostWire.Libtorrent.Swig.Stats_metric p1, int p2)
		{
			const string __id = "stats_metric_value_index_set.(JLcom/frostwire/jlibtorrent/swig/stats_metric;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_metric_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_metric_vector']]"
		[Register ("stats_metric_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;)J", "")]
		public static unsafe long Stats_metric_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Stats_metric_vector p1)
		{
			const string __id = "stats_metric_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_metric_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_metric_vector']]"
		[Register ("stats_metric_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;)V", "")]
		public static unsafe void Stats_metric_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Stats_metric_vector p1)
		{
			const string __id = "stats_metric_vector_clear.(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_metric_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_metric_vector']]"
		[Register ("stats_metric_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;)Z", "")]
		public static unsafe bool Stats_metric_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Stats_metric_vector p1)
		{
			const string __id = "stats_metric_vector_empty.(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_metric_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_metric_vector'] and parameter[3][@type='int']]"
		[Register ("stats_metric_vector_get", "(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;I)J", "")]
		public static unsafe long Stats_metric_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Stats_metric_vector p1, int p2)
		{
			const string __id = "stats_metric_vector_get.(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_metric_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_metric_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.stats_metric']]"
		[Register ("stats_metric_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;JLcom/frostwire/jlibtorrent/swig/stats_metric;)V", "")]
		public static unsafe void Stats_metric_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Stats_metric_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Stats_metric p3)
		{
			const string __id = "stats_metric_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;JLcom/frostwire/jlibtorrent/swig/stats_metric;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_metric_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_metric_vector'] and parameter[3][@type='long']]"
		[Register ("stats_metric_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;J)V", "")]
		public static unsafe void Stats_metric_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Stats_metric_vector p1, long p2)
		{
			const string __id = "stats_metric_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_metric_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_metric_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.stats_metric']]"
		[Register ("stats_metric_vector_set", "(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;IJLcom/frostwire/jlibtorrent/swig/stats_metric;)V", "")]
		public static unsafe void Stats_metric_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Stats_metric_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Stats_metric p4)
		{
			const string __id = "stats_metric_vector_set.(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;IJLcom/frostwire/jlibtorrent/swig/stats_metric;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stats_metric_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.stats_metric_vector']]"
		[Register ("stats_metric_vector_size", "(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;)J", "")]
		public static unsafe long Stats_metric_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Stats_metric_vector p1)
		{
			const string __id = "stats_metric_vector_size.(JLcom/frostwire/jlibtorrent/swig/stats_metric_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='status_flags_t_all' and count(parameter)=0]"
		[Register ("status_flags_t_all", "()J", "")]
		public static unsafe long Status_flags_t_all ()
		{
			const string __id = "status_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='status_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.status_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.status_flags_t']]"
		[Register ("status_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/status_flags_t;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)J", "")]
		public static unsafe long Status_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Status_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Status_flags_t p3)
		{
			const string __id = "status_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/status_flags_t;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='status_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.status_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.status_flags_t']]"
		[Register ("status_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/status_flags_t;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)Z", "")]
		public static unsafe bool Status_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Status_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Status_flags_t p3)
		{
			const string __id = "status_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/status_flags_t;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='status_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.status_flags_t']]"
		[Register ("status_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/status_flags_t;)J", "")]
		public static unsafe long Status_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Status_flags_t p1)
		{
			const string __id = "status_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/status_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='status_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.status_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.status_flags_t']]"
		[Register ("status_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/status_flags_t;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)Z", "")]
		public static unsafe bool Status_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Status_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Status_flags_t p3)
		{
			const string __id = "status_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/status_flags_t;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='status_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.status_flags_t']]"
		[Register ("status_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/status_flags_t;)Z", "")]
		public static unsafe bool Status_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Status_flags_t p1)
		{
			const string __id = "status_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/status_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='status_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.status_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.status_flags_t']]"
		[Register ("status_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/status_flags_t;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)J", "")]
		public static unsafe long Status_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Status_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Status_flags_t p3)
		{
			const string __id = "status_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/status_flags_t;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='status_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.status_flags_t']]"
		[Register ("status_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/status_flags_t;)I", "")]
		public static unsafe int Status_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Status_flags_t p1)
		{
			const string __id = "status_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/status_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='status_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.status_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.status_flags_t']]"
		[Register ("status_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/status_flags_t;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)J", "")]
		public static unsafe long Status_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Status_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Status_flags_t p3)
		{
			const string __id = "status_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/status_flags_t;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stop_when_ready_get' and count(parameter)=0]"
		[Register ("stop_when_ready_get", "()J", "")]
		public static unsafe long Stop_when_ready_get ()
		{
			const string __id = "stop_when_ready_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("storage_moved_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Storage_moved_alert_SWIGUpcast (long p0)
		{
			const string __id = "storage_moved_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_alert_alert_type_get' and count(parameter)=0]"
		[Register ("storage_moved_alert_alert_type_get", "()I", "")]
		public static unsafe int Storage_moved_alert_alert_type_get ()
		{
			const string __id = "storage_moved_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.storage_moved_alert']]"
		[Register ("storage_moved_alert_category", "(JLcom/frostwire/jlibtorrent/swig/storage_moved_alert;)J", "")]
		public static unsafe long Storage_moved_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Storage_moved_alert p1)
		{
			const string __id = "storage_moved_alert_category.(JLcom/frostwire/jlibtorrent/swig/storage_moved_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.storage_moved_alert']]"
		[Register ("storage_moved_alert_message", "(JLcom/frostwire/jlibtorrent/swig/storage_moved_alert;)Ljava/lang/String;", "")]
		public static unsafe string Storage_moved_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Storage_moved_alert p1)
		{
			const string __id = "storage_moved_alert_message.(JLcom/frostwire/jlibtorrent/swig/storage_moved_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_alert_priority_get' and count(parameter)=0]"
		[Register ("storage_moved_alert_priority_get", "()I", "")]
		public static unsafe int Storage_moved_alert_priority_get ()
		{
			const string __id = "storage_moved_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_alert_static_category_get' and count(parameter)=0]"
		[Register ("storage_moved_alert_static_category_get", "()J", "")]
		public static unsafe long Storage_moved_alert_static_category_get ()
		{
			const string __id = "storage_moved_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_alert_storage_path' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.storage_moved_alert']]"
		[Register ("storage_moved_alert_storage_path", "(JLcom/frostwire/jlibtorrent/swig/storage_moved_alert;)Ljava/lang/String;", "")]
		public static unsafe string Storage_moved_alert_storage_path (long p0, global::FrostWire.Libtorrent.Swig.Storage_moved_alert p1)
		{
			const string __id = "storage_moved_alert_storage_path.(JLcom/frostwire/jlibtorrent/swig/storage_moved_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.storage_moved_alert']]"
		[Register ("storage_moved_alert_type", "(JLcom/frostwire/jlibtorrent/swig/storage_moved_alert;)I", "")]
		public static unsafe int Storage_moved_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Storage_moved_alert p1)
		{
			const string __id = "storage_moved_alert_type.(JLcom/frostwire/jlibtorrent/swig/storage_moved_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.storage_moved_alert']]"
		[Register ("storage_moved_alert_what", "(JLcom/frostwire/jlibtorrent/swig/storage_moved_alert;)Ljava/lang/String;", "")]
		public static unsafe string Storage_moved_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Storage_moved_alert p1)
		{
			const string __id = "storage_moved_alert_what.(JLcom/frostwire/jlibtorrent/swig/storage_moved_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_failed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("storage_moved_failed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Storage_moved_failed_alert_SWIGUpcast (long p0)
		{
			const string __id = "storage_moved_failed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_failed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("storage_moved_failed_alert_alert_type_get", "()I", "")]
		public static unsafe int Storage_moved_failed_alert_alert_type_get ()
		{
			const string __id = "storage_moved_failed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_failed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.storage_moved_failed_alert']]"
		[Register ("storage_moved_failed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;)J", "")]
		public static unsafe long Storage_moved_failed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Storage_moved_failed_alert p1)
		{
			const string __id = "storage_moved_failed_alert_category.(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_failed_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.storage_moved_failed_alert']]"
		[Register ("storage_moved_failed_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;)J", "")]
		public static unsafe long Storage_moved_failed_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Storage_moved_failed_alert p1)
		{
			const string __id = "storage_moved_failed_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_failed_alert_file_path' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.storage_moved_failed_alert']]"
		[Register ("storage_moved_failed_alert_file_path", "(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Storage_moved_failed_alert_file_path (long p0, global::FrostWire.Libtorrent.Swig.Storage_moved_failed_alert p1)
		{
			const string __id = "storage_moved_failed_alert_file_path.(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_failed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.storage_moved_failed_alert']]"
		[Register ("storage_moved_failed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Storage_moved_failed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Storage_moved_failed_alert p1)
		{
			const string __id = "storage_moved_failed_alert_message.(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_failed_alert_op_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.storage_moved_failed_alert']]"
		[Register ("storage_moved_failed_alert_op_get", "(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;)I", "")]
		public static unsafe int Storage_moved_failed_alert_op_get (long p0, global::FrostWire.Libtorrent.Swig.Storage_moved_failed_alert p1)
		{
			const string __id = "storage_moved_failed_alert_op_get.(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_failed_alert_op_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.storage_moved_failed_alert'] and parameter[3][@type='int']]"
		[Register ("storage_moved_failed_alert_op_set", "(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;I)V", "")]
		public static unsafe void Storage_moved_failed_alert_op_set (long p0, global::FrostWire.Libtorrent.Swig.Storage_moved_failed_alert p1, int p2)
		{
			const string __id = "storage_moved_failed_alert_op_set.(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_failed_alert_priority_get' and count(parameter)=0]"
		[Register ("storage_moved_failed_alert_priority_get", "()I", "")]
		public static unsafe int Storage_moved_failed_alert_priority_get ()
		{
			const string __id = "storage_moved_failed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_failed_alert_static_category_get' and count(parameter)=0]"
		[Register ("storage_moved_failed_alert_static_category_get", "()J", "")]
		public static unsafe long Storage_moved_failed_alert_static_category_get ()
		{
			const string __id = "storage_moved_failed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_failed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.storage_moved_failed_alert']]"
		[Register ("storage_moved_failed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;)I", "")]
		public static unsafe int Storage_moved_failed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Storage_moved_failed_alert p1)
		{
			const string __id = "storage_moved_failed_alert_type.(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='storage_moved_failed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.storage_moved_failed_alert']]"
		[Register ("storage_moved_failed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Storage_moved_failed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Storage_moved_failed_alert p1)
		{
			const string __id = "storage_moved_failed_alert_what.(JLcom/frostwire/jlibtorrent/swig/storage_moved_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='stream_timeout_get' and count(parameter)=0]"
		[Register ("stream_timeout_get", "()I", "")]
		public static unsafe int Stream_timeout_get ()
		{
			const string __id = "stream_timeout_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_entry_map_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_entry_map']]"
		[Register ("string_entry_map_clear", "(JLcom/frostwire/jlibtorrent/swig/string_entry_map;)V", "")]
		public static unsafe void String_entry_map_clear (long p0, global::FrostWire.Libtorrent.Swig.String_entry_map p1)
		{
			const string __id = "string_entry_map_clear.(JLcom/frostwire/jlibtorrent/swig/string_entry_map;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_entry_map_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_entry_map']]"
		[Register ("string_entry_map_empty", "(JLcom/frostwire/jlibtorrent/swig/string_entry_map;)Z", "")]
		public static unsafe bool String_entry_map_empty (long p0, global::FrostWire.Libtorrent.Swig.String_entry_map p1)
		{
			const string __id = "string_entry_map_empty.(JLcom/frostwire/jlibtorrent/swig/string_entry_map;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_entry_map_erase' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_entry_map'] and parameter[3][@type='java.lang.String']]"
		[Register ("string_entry_map_erase", "(JLcom/frostwire/jlibtorrent/swig/string_entry_map;Ljava/lang/String;)V", "")]
		public static unsafe void String_entry_map_erase (long p0, global::FrostWire.Libtorrent.Swig.String_entry_map p1, string p2)
		{
			const string __id = "string_entry_map_erase.(JLcom/frostwire/jlibtorrent/swig/string_entry_map;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_entry_map_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_entry_map'] and parameter[3][@type='java.lang.String']]"
		[Register ("string_entry_map_get", "(JLcom/frostwire/jlibtorrent/swig/string_entry_map;Ljava/lang/String;)J", "")]
		public static unsafe long String_entry_map_get (long p0, global::FrostWire.Libtorrent.Swig.String_entry_map p1, string p2)
		{
			const string __id = "string_entry_map_get.(JLcom/frostwire/jlibtorrent/swig/string_entry_map;Ljava/lang/String;)J";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_entry_map_has_key' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_entry_map'] and parameter[3][@type='java.lang.String']]"
		[Register ("string_entry_map_has_key", "(JLcom/frostwire/jlibtorrent/swig/string_entry_map;Ljava/lang/String;)Z", "")]
		public static unsafe bool String_entry_map_has_key (long p0, global::FrostWire.Libtorrent.Swig.String_entry_map p1, string p2)
		{
			const string __id = "string_entry_map_has_key.(JLcom/frostwire/jlibtorrent/swig/string_entry_map;Ljava/lang/String;)Z";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_entry_map_keys' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_entry_map']]"
		[Register ("string_entry_map_keys", "(JLcom/frostwire/jlibtorrent/swig/string_entry_map;)J", "")]
		public static unsafe long String_entry_map_keys (long p0, global::FrostWire.Libtorrent.Swig.String_entry_map p1)
		{
			const string __id = "string_entry_map_keys.(JLcom/frostwire/jlibtorrent/swig/string_entry_map;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_entry_map_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_entry_map'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("string_entry_map_set", "(JLcom/frostwire/jlibtorrent/swig/string_entry_map;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/entry;)V", "")]
		public static unsafe void String_entry_map_set (long p0, global::FrostWire.Libtorrent.Swig.String_entry_map p1, string p2, long p3, global::FrostWire.Libtorrent.Swig.Entry p4)
		{
			const string __id = "string_entry_map_set.(JLcom/frostwire/jlibtorrent/swig/string_entry_map;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/entry;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_entry_map_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_entry_map']]"
		[Register ("string_entry_map_size", "(JLcom/frostwire/jlibtorrent/swig/string_entry_map;)J", "")]
		public static unsafe long String_entry_map_size (long p0, global::FrostWire.Libtorrent.Swig.String_entry_map p1)
		{
			const string __id = "string_entry_map_size.(JLcom/frostwire/jlibtorrent/swig/string_entry_map;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_int_pair_first_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_int_pair']]"
		[Register ("string_int_pair_first_get", "(JLcom/frostwire/jlibtorrent/swig/string_int_pair;)Ljava/lang/String;", "")]
		public static unsafe string String_int_pair_first_get (long p0, global::FrostWire.Libtorrent.Swig.String_int_pair p1)
		{
			const string __id = "string_int_pair_first_get.(JLcom/frostwire/jlibtorrent/swig/string_int_pair;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_int_pair_first_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_int_pair'] and parameter[3][@type='java.lang.String']]"
		[Register ("string_int_pair_first_set", "(JLcom/frostwire/jlibtorrent/swig/string_int_pair;Ljava/lang/String;)V", "")]
		public static unsafe void String_int_pair_first_set (long p0, global::FrostWire.Libtorrent.Swig.String_int_pair p1, string p2)
		{
			const string __id = "string_int_pair_first_set.(JLcom/frostwire/jlibtorrent/swig/string_int_pair;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_int_pair_second_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_int_pair']]"
		[Register ("string_int_pair_second_get", "(JLcom/frostwire/jlibtorrent/swig/string_int_pair;)I", "")]
		public static unsafe int String_int_pair_second_get (long p0, global::FrostWire.Libtorrent.Swig.String_int_pair p1)
		{
			const string __id = "string_int_pair_second_get.(JLcom/frostwire/jlibtorrent/swig/string_int_pair;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_int_pair_second_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_int_pair'] and parameter[3][@type='int']]"
		[Register ("string_int_pair_second_set", "(JLcom/frostwire/jlibtorrent/swig/string_int_pair;I)V", "")]
		public static unsafe void String_int_pair_second_set (long p0, global::FrostWire.Libtorrent.Swig.String_int_pair p1, int p2)
		{
			const string __id = "string_int_pair_second_set.(JLcom/frostwire/jlibtorrent/swig/string_int_pair;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_int_pair_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_int_pair_vector']]"
		[Register ("string_int_pair_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;)J", "")]
		public static unsafe long String_int_pair_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.String_int_pair_vector p1)
		{
			const string __id = "string_int_pair_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_int_pair_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_int_pair_vector']]"
		[Register ("string_int_pair_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;)V", "")]
		public static unsafe void String_int_pair_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.String_int_pair_vector p1)
		{
			const string __id = "string_int_pair_vector_clear.(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_int_pair_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_int_pair_vector']]"
		[Register ("string_int_pair_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;)Z", "")]
		public static unsafe bool String_int_pair_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.String_int_pair_vector p1)
		{
			const string __id = "string_int_pair_vector_empty.(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_int_pair_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_int_pair_vector'] and parameter[3][@type='int']]"
		[Register ("string_int_pair_vector_get", "(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;I)J", "")]
		public static unsafe long String_int_pair_vector_get (long p0, global::FrostWire.Libtorrent.Swig.String_int_pair_vector p1, int p2)
		{
			const string __id = "string_int_pair_vector_get.(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_int_pair_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_int_pair_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_int_pair']]"
		[Register ("string_int_pair_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;JLcom/frostwire/jlibtorrent/swig/string_int_pair;)V", "")]
		public static unsafe void String_int_pair_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.String_int_pair_vector p1, long p2, global::FrostWire.Libtorrent.Swig.String_int_pair p3)
		{
			const string __id = "string_int_pair_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;JLcom/frostwire/jlibtorrent/swig/string_int_pair;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_int_pair_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_int_pair_vector'] and parameter[3][@type='long']]"
		[Register ("string_int_pair_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;J)V", "")]
		public static unsafe void String_int_pair_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.String_int_pair_vector p1, long p2)
		{
			const string __id = "string_int_pair_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_int_pair_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_int_pair_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.string_int_pair']]"
		[Register ("string_int_pair_vector_set", "(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;IJLcom/frostwire/jlibtorrent/swig/string_int_pair;)V", "")]
		public static unsafe void String_int_pair_vector_set (long p0, global::FrostWire.Libtorrent.Swig.String_int_pair_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.String_int_pair p4)
		{
			const string __id = "string_int_pair_vector_set.(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;IJLcom/frostwire/jlibtorrent/swig/string_int_pair;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_int_pair_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_int_pair_vector']]"
		[Register ("string_int_pair_vector_size", "(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;)J", "")]
		public static unsafe long String_int_pair_vector_size (long p0, global::FrostWire.Libtorrent.Swig.String_int_pair_vector p1)
		{
			const string __id = "string_int_pair_vector_size.(JLcom/frostwire/jlibtorrent/swig/string_int_pair_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_long_map_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_long_map']]"
		[Register ("string_long_map_clear", "(JLcom/frostwire/jlibtorrent/swig/string_long_map;)V", "")]
		public static unsafe void String_long_map_clear (long p0, global::FrostWire.Libtorrent.Swig.String_long_map p1)
		{
			const string __id = "string_long_map_clear.(JLcom/frostwire/jlibtorrent/swig/string_long_map;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_long_map_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_long_map']]"
		[Register ("string_long_map_empty", "(JLcom/frostwire/jlibtorrent/swig/string_long_map;)Z", "")]
		public static unsafe bool String_long_map_empty (long p0, global::FrostWire.Libtorrent.Swig.String_long_map p1)
		{
			const string __id = "string_long_map_empty.(JLcom/frostwire/jlibtorrent/swig/string_long_map;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_long_map_erase' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_long_map'] and parameter[3][@type='java.lang.String']]"
		[Register ("string_long_map_erase", "(JLcom/frostwire/jlibtorrent/swig/string_long_map;Ljava/lang/String;)V", "")]
		public static unsafe void String_long_map_erase (long p0, global::FrostWire.Libtorrent.Swig.String_long_map p1, string p2)
		{
			const string __id = "string_long_map_erase.(JLcom/frostwire/jlibtorrent/swig/string_long_map;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_long_map_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_long_map'] and parameter[3][@type='java.lang.String']]"
		[Register ("string_long_map_get", "(JLcom/frostwire/jlibtorrent/swig/string_long_map;Ljava/lang/String;)I", "")]
		public static unsafe int String_long_map_get (long p0, global::FrostWire.Libtorrent.Swig.String_long_map p1, string p2)
		{
			const string __id = "string_long_map_get.(JLcom/frostwire/jlibtorrent/swig/string_long_map;Ljava/lang/String;)I";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_long_map_has_key' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_long_map'] and parameter[3][@type='java.lang.String']]"
		[Register ("string_long_map_has_key", "(JLcom/frostwire/jlibtorrent/swig/string_long_map;Ljava/lang/String;)Z", "")]
		public static unsafe bool String_long_map_has_key (long p0, global::FrostWire.Libtorrent.Swig.String_long_map p1, string p2)
		{
			const string __id = "string_long_map_has_key.(JLcom/frostwire/jlibtorrent/swig/string_long_map;Ljava/lang/String;)Z";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_long_map_keys' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_long_map']]"
		[Register ("string_long_map_keys", "(JLcom/frostwire/jlibtorrent/swig/string_long_map;)J", "")]
		public static unsafe long String_long_map_keys (long p0, global::FrostWire.Libtorrent.Swig.String_long_map p1)
		{
			const string __id = "string_long_map_keys.(JLcom/frostwire/jlibtorrent/swig/string_long_map;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_long_map_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_long_map'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int']]"
		[Register ("string_long_map_set", "(JLcom/frostwire/jlibtorrent/swig/string_long_map;Ljava/lang/String;I)V", "")]
		public static unsafe void String_long_map_set (long p0, global::FrostWire.Libtorrent.Swig.String_long_map p1, string p2, int p3)
		{
			const string __id = "string_long_map_set.(JLcom/frostwire/jlibtorrent/swig/string_long_map;Ljava/lang/String;I)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_long_map_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_long_map']]"
		[Register ("string_long_map_size", "(JLcom/frostwire/jlibtorrent/swig/string_long_map;)J", "")]
		public static unsafe long String_long_map_size (long p0, global::FrostWire.Libtorrent.Swig.String_long_map p1)
		{
			const string __id = "string_long_map_size.(JLcom/frostwire/jlibtorrent/swig/string_long_map;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_string_pair_first_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_string_pair']]"
		[Register ("string_string_pair_first_get", "(JLcom/frostwire/jlibtorrent/swig/string_string_pair;)Ljava/lang/String;", "")]
		public static unsafe string String_string_pair_first_get (long p0, global::FrostWire.Libtorrent.Swig.String_string_pair p1)
		{
			const string __id = "string_string_pair_first_get.(JLcom/frostwire/jlibtorrent/swig/string_string_pair;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_string_pair_first_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_string_pair'] and parameter[3][@type='java.lang.String']]"
		[Register ("string_string_pair_first_set", "(JLcom/frostwire/jlibtorrent/swig/string_string_pair;Ljava/lang/String;)V", "")]
		public static unsafe void String_string_pair_first_set (long p0, global::FrostWire.Libtorrent.Swig.String_string_pair p1, string p2)
		{
			const string __id = "string_string_pair_first_set.(JLcom/frostwire/jlibtorrent/swig/string_string_pair;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_string_pair_second_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_string_pair']]"
		[Register ("string_string_pair_second_get", "(JLcom/frostwire/jlibtorrent/swig/string_string_pair;)Ljava/lang/String;", "")]
		public static unsafe string String_string_pair_second_get (long p0, global::FrostWire.Libtorrent.Swig.String_string_pair p1)
		{
			const string __id = "string_string_pair_second_get.(JLcom/frostwire/jlibtorrent/swig/string_string_pair;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_string_pair_second_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_string_pair'] and parameter[3][@type='java.lang.String']]"
		[Register ("string_string_pair_second_set", "(JLcom/frostwire/jlibtorrent/swig/string_string_pair;Ljava/lang/String;)V", "")]
		public static unsafe void String_string_pair_second_set (long p0, global::FrostWire.Libtorrent.Swig.String_string_pair p1, string p2)
		{
			const string __id = "string_string_pair_second_set.(JLcom/frostwire/jlibtorrent/swig/string_string_pair;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_string_pair_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_string_pair_vector']]"
		[Register ("string_string_pair_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)J", "")]
		public static unsafe long String_string_pair_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.String_string_pair_vector p1)
		{
			const string __id = "string_string_pair_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_string_pair_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_string_pair_vector']]"
		[Register ("string_string_pair_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)V", "")]
		public static unsafe void String_string_pair_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.String_string_pair_vector p1)
		{
			const string __id = "string_string_pair_vector_clear.(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_string_pair_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_string_pair_vector']]"
		[Register ("string_string_pair_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)Z", "")]
		public static unsafe bool String_string_pair_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.String_string_pair_vector p1)
		{
			const string __id = "string_string_pair_vector_empty.(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_string_pair_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_string_pair_vector'] and parameter[3][@type='int']]"
		[Register ("string_string_pair_vector_get", "(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;I)J", "")]
		public static unsafe long String_string_pair_vector_get (long p0, global::FrostWire.Libtorrent.Swig.String_string_pair_vector p1, int p2)
		{
			const string __id = "string_string_pair_vector_get.(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_string_pair_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_string_pair_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_string_pair']]"
		[Register ("string_string_pair_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;JLcom/frostwire/jlibtorrent/swig/string_string_pair;)V", "")]
		public static unsafe void String_string_pair_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.String_string_pair_vector p1, long p2, global::FrostWire.Libtorrent.Swig.String_string_pair p3)
		{
			const string __id = "string_string_pair_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;JLcom/frostwire/jlibtorrent/swig/string_string_pair;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_string_pair_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_string_pair_vector'] and parameter[3][@type='long']]"
		[Register ("string_string_pair_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;J)V", "")]
		public static unsafe void String_string_pair_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.String_string_pair_vector p1, long p2)
		{
			const string __id = "string_string_pair_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_string_pair_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_string_pair_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.string_string_pair']]"
		[Register ("string_string_pair_vector_set", "(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;IJLcom/frostwire/jlibtorrent/swig/string_string_pair;)V", "")]
		public static unsafe void String_string_pair_vector_set (long p0, global::FrostWire.Libtorrent.Swig.String_string_pair_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.String_string_pair p4)
		{
			const string __id = "string_string_pair_vector_set.(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;IJLcom/frostwire/jlibtorrent/swig/string_string_pair;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_string_pair_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_string_pair_vector']]"
		[Register ("string_string_pair_vector_size", "(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)J", "")]
		public static unsafe long String_string_pair_vector_size (long p0, global::FrostWire.Libtorrent.Swig.String_string_pair_vector p1)
		{
			const string __id = "string_string_pair_vector_size.(JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_vector']]"
		[Register ("string_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/string_vector;)J", "")]
		public static unsafe long String_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.String_vector p1)
		{
			const string __id = "string_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/string_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_vector']]"
		[Register ("string_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/string_vector;)V", "")]
		public static unsafe void String_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.String_vector p1)
		{
			const string __id = "string_vector_clear.(JLcom/frostwire/jlibtorrent/swig/string_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_vector']]"
		[Register ("string_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/string_vector;)Z", "")]
		public static unsafe bool String_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.String_vector p1)
		{
			const string __id = "string_vector_empty.(JLcom/frostwire/jlibtorrent/swig/string_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_vector'] and parameter[3][@type='int']]"
		[Register ("string_vector_get", "(JLcom/frostwire/jlibtorrent/swig/string_vector;I)Ljava/lang/String;", "")]
		public static unsafe string String_vector_get (long p0, global::FrostWire.Libtorrent.Swig.String_vector p1, int p2)
		{
			const string __id = "string_vector_get.(JLcom/frostwire/jlibtorrent/swig/string_vector;I)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_vector_push_back' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_vector'] and parameter[3][@type='java.lang.String']]"
		[Register ("string_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/string_vector;Ljava/lang/String;)V", "")]
		public static unsafe void String_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.String_vector p1, string p2)
		{
			const string __id = "string_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/string_vector;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_vector'] and parameter[3][@type='long']]"
		[Register ("string_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/string_vector;J)V", "")]
		public static unsafe void String_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.String_vector p1, long p2)
		{
			const string __id = "string_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/string_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_vector_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_vector'] and parameter[3][@type='int'] and parameter[4][@type='java.lang.String']]"
		[Register ("string_vector_set", "(JLcom/frostwire/jlibtorrent/swig/string_vector;ILjava/lang/String;)V", "")]
		public static unsafe void String_vector_set (long p0, global::FrostWire.Libtorrent.Swig.String_vector p1, int p2, string p3)
		{
			const string __id = "string_vector_set.(JLcom/frostwire/jlibtorrent/swig/string_vector;ILjava/lang/String;)V";
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (native_p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_vector']]"
		[Register ("string_vector_size", "(JLcom/frostwire/jlibtorrent/swig/string_vector;)J", "")]
		public static unsafe long String_vector_size (long p0, global::FrostWire.Libtorrent.Swig.String_vector p1)
		{
			const string __id = "string_vector_size.(JLcom/frostwire/jlibtorrent/swig/string_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_view_bdecode_node_pair_first_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_view_bdecode_node_pair']]"
		[Register ("string_view_bdecode_node_pair_first_get", "(JLcom/frostwire/jlibtorrent/swig/string_view_bdecode_node_pair;)J", "")]
		public static unsafe long String_view_bdecode_node_pair_first_get (long p0, global::FrostWire.Libtorrent.Swig.String_view_bdecode_node_pair p1)
		{
			const string __id = "string_view_bdecode_node_pair_first_get.(JLcom/frostwire/jlibtorrent/swig/string_view_bdecode_node_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_view_bdecode_node_pair_first_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_view_bdecode_node_pair'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_view']]"
		[Register ("string_view_bdecode_node_pair_first_set", "(JLcom/frostwire/jlibtorrent/swig/string_view_bdecode_node_pair;JLcom/frostwire/jlibtorrent/swig/string_view;)V", "")]
		public static unsafe void String_view_bdecode_node_pair_first_set (long p0, global::FrostWire.Libtorrent.Swig.String_view_bdecode_node_pair p1, long p2, global::FrostWire.Libtorrent.Swig.String_view p3)
		{
			const string __id = "string_view_bdecode_node_pair_first_set.(JLcom/frostwire/jlibtorrent/swig/string_view_bdecode_node_pair;JLcom/frostwire/jlibtorrent/swig/string_view;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_view_bdecode_node_pair_second_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_view_bdecode_node_pair']]"
		[Register ("string_view_bdecode_node_pair_second_get", "(JLcom/frostwire/jlibtorrent/swig/string_view_bdecode_node_pair;)J", "")]
		public static unsafe long String_view_bdecode_node_pair_second_get (long p0, global::FrostWire.Libtorrent.Swig.String_view_bdecode_node_pair p1)
		{
			const string __id = "string_view_bdecode_node_pair_second_get.(JLcom/frostwire/jlibtorrent/swig/string_view_bdecode_node_pair;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_view_bdecode_node_pair_second_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_view_bdecode_node_pair'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.bdecode_node']]"
		[Register ("string_view_bdecode_node_pair_second_set", "(JLcom/frostwire/jlibtorrent/swig/string_view_bdecode_node_pair;JLcom/frostwire/jlibtorrent/swig/bdecode_node;)V", "")]
		public static unsafe void String_view_bdecode_node_pair_second_set (long p0, global::FrostWire.Libtorrent.Swig.String_view_bdecode_node_pair p1, long p2, global::FrostWire.Libtorrent.Swig.Bdecode_node p3)
		{
			const string __id = "string_view_bdecode_node_pair_second_set.(JLcom/frostwire/jlibtorrent/swig/string_view_bdecode_node_pair;JLcom/frostwire/jlibtorrent/swig/bdecode_node;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='string_view_to_bytes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.string_view']]"
		[Register ("string_view_to_bytes", "(JLcom/frostwire/jlibtorrent/swig/string_view;)J", "")]
		public static unsafe long String_view_to_bytes (long p0, global::FrostWire.Libtorrent.Swig.String_view p1)
		{
			const string __id = "string_view_to_bytes.(JLcom/frostwire/jlibtorrent/swig/string_view;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='success_get' and count(parameter)=0]"
		[Register ("success_get", "()I", "")]
		public static unsafe int Success_get ()
		{
			const string __id = "success_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='super_seeding_get' and count(parameter)=0]"
		[Register ("super_seeding_get", "()J", "")]
		public static unsafe long Super_seeding_get ()
		{
			const string __id = "super_seeding_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='swig_plugin_change_ownership' and count(parameter)=3 and parameter[1][@type='com.frostwire.jlibtorrent.swig.swig_plugin'] and parameter[2][@type='long'] and parameter[3][@type='boolean']]"
		[Register ("swig_plugin_change_ownership", "(Lcom/frostwire/jlibtorrent/swig/swig_plugin;JZ)V", "")]
		public static unsafe void Swig_plugin_change_ownership (global::FrostWire.Libtorrent.Swig.Swig_plugin p0, long p1, bool p2)
		{
			const string __id = "swig_plugin_change_ownership.(Lcom/frostwire/jlibtorrent/swig/swig_plugin;JZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='swig_plugin_director_connect' and count(parameter)=4 and parameter[1][@type='com.frostwire.jlibtorrent.swig.swig_plugin'] and parameter[2][@type='long'] and parameter[3][@type='boolean'] and parameter[4][@type='boolean']]"
		[Register ("swig_plugin_director_connect", "(Lcom/frostwire/jlibtorrent/swig/swig_plugin;JZZ)V", "")]
		public static unsafe void Swig_plugin_director_connect (global::FrostWire.Libtorrent.Swig.Swig_plugin p0, long p1, bool p2, bool p3)
		{
			const string __id = "swig_plugin_director_connect.(Lcom/frostwire/jlibtorrent/swig/swig_plugin;JZZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='swig_plugin_on_dht_request' and count(parameter)=10 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.swig_plugin'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_view'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.udp_endpoint'] and parameter[7][@type='long'] and parameter[8][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[9][@type='long'] and parameter[10][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("swig_plugin_on_dht_request", "(JLcom/frostwire/jlibtorrent/swig/swig_plugin;JLcom/frostwire/jlibtorrent/swig/string_view;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;JLcom/frostwire/jlibtorrent/swig/bdecode_node;JLcom/frostwire/jlibtorrent/swig/entry;)Z", "")]
		public static unsafe bool Swig_plugin_on_dht_request (long p0, global::FrostWire.Libtorrent.Swig.Swig_plugin p1, long p2, global::FrostWire.Libtorrent.Swig.String_view p3, long p4, global::FrostWire.Libtorrent.Swig.Udp_endpoint p5, long p6, global::FrostWire.Libtorrent.Swig.Bdecode_node p7, long p8, global::FrostWire.Libtorrent.Swig.Entry p9)
		{
			const string __id = "swig_plugin_on_dht_request.(JLcom/frostwire/jlibtorrent/swig/swig_plugin;JLcom/frostwire/jlibtorrent/swig/string_view;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;JLcom/frostwire/jlibtorrent/swig/bdecode_node;JLcom/frostwire/jlibtorrent/swig/entry;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [10];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				__args [6] = new JniArgumentValue (p6);
				__args [7] = new JniArgumentValue ((p7 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p7).Handle);
				__args [8] = new JniArgumentValue (p8);
				__args [9] = new JniArgumentValue ((p9 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p9).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='swig_plugin_on_dht_requestSwigExplicitswig_plugin' and count(parameter)=10 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.swig_plugin'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_view'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.udp_endpoint'] and parameter[7][@type='long'] and parameter[8][@type='com.frostwire.jlibtorrent.swig.bdecode_node'] and parameter[9][@type='long'] and parameter[10][@type='com.frostwire.jlibtorrent.swig.entry']]"
		[Register ("swig_plugin_on_dht_requestSwigExplicitswig_plugin", "(JLcom/frostwire/jlibtorrent/swig/swig_plugin;JLcom/frostwire/jlibtorrent/swig/string_view;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;JLcom/frostwire/jlibtorrent/swig/bdecode_node;JLcom/frostwire/jlibtorrent/swig/entry;)Z", "")]
		public static unsafe bool Swig_plugin_on_dht_requestSwigExplicitswig_plugin (long p0, global::FrostWire.Libtorrent.Swig.Swig_plugin p1, long p2, global::FrostWire.Libtorrent.Swig.String_view p3, long p4, global::FrostWire.Libtorrent.Swig.Udp_endpoint p5, long p6, global::FrostWire.Libtorrent.Swig.Bdecode_node p7, long p8, global::FrostWire.Libtorrent.Swig.Entry p9)
		{
			const string __id = "swig_plugin_on_dht_requestSwigExplicitswig_plugin.(JLcom/frostwire/jlibtorrent/swig/swig_plugin;JLcom/frostwire/jlibtorrent/swig/string_view;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;JLcom/frostwire/jlibtorrent/swig/bdecode_node;JLcom/frostwire/jlibtorrent/swig/entry;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [10];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				__args [6] = new JniArgumentValue (p6);
				__args [7] = new JniArgumentValue ((p7 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p7).Handle);
				__args [8] = new JniArgumentValue (p8);
				__args [9] = new JniArgumentValue ((p9 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p9).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tcp_endpoint_address' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint']]"
		[Register ("tcp_endpoint_address", "(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)J", "")]
		public static unsafe long Tcp_endpoint_address (long p0, global::FrostWire.Libtorrent.Swig.Tcp_endpoint p1)
		{
			const string __id = "tcp_endpoint_address.(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tcp_endpoint_port' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint']]"
		[Register ("tcp_endpoint_port", "(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)I", "")]
		public static unsafe int Tcp_endpoint_port (long p0, global::FrostWire.Libtorrent.Swig.Tcp_endpoint p1)
		{
			const string __id = "tcp_endpoint_port.(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tcp_endpoint_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint_vector']]"
		[Register ("tcp_endpoint_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;)J", "")]
		public static unsafe long Tcp_endpoint_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Tcp_endpoint_vector p1)
		{
			const string __id = "tcp_endpoint_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tcp_endpoint_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint_vector']]"
		[Register ("tcp_endpoint_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;)V", "")]
		public static unsafe void Tcp_endpoint_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Tcp_endpoint_vector p1)
		{
			const string __id = "tcp_endpoint_vector_clear.(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tcp_endpoint_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint_vector']]"
		[Register ("tcp_endpoint_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;)Z", "")]
		public static unsafe bool Tcp_endpoint_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Tcp_endpoint_vector p1)
		{
			const string __id = "tcp_endpoint_vector_empty.(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tcp_endpoint_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint_vector'] and parameter[3][@type='int']]"
		[Register ("tcp_endpoint_vector_get", "(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;I)J", "")]
		public static unsafe long Tcp_endpoint_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Tcp_endpoint_vector p1, int p2)
		{
			const string __id = "tcp_endpoint_vector_get.(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tcp_endpoint_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint']]"
		[Register ("tcp_endpoint_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)V", "")]
		public static unsafe void Tcp_endpoint_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Tcp_endpoint_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Tcp_endpoint p3)
		{
			const string __id = "tcp_endpoint_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tcp_endpoint_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint_vector'] and parameter[3][@type='long']]"
		[Register ("tcp_endpoint_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;J)V", "")]
		public static unsafe void Tcp_endpoint_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Tcp_endpoint_vector p1, long p2)
		{
			const string __id = "tcp_endpoint_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tcp_endpoint_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint']]"
		[Register ("tcp_endpoint_vector_set", "(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;IJLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)V", "")]
		public static unsafe void Tcp_endpoint_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Tcp_endpoint_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Tcp_endpoint p4)
		{
			const string __id = "tcp_endpoint_vector_set.(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;IJLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tcp_endpoint_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint_vector']]"
		[Register ("tcp_endpoint_vector_size", "(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;)J", "")]
		public static unsafe long Tcp_endpoint_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Tcp_endpoint_vector p1)
		{
			const string __id = "tcp_endpoint_vector_size.(JLcom/frostwire/jlibtorrent/swig/tcp_endpoint_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='text_file_busy_get' and count(parameter)=0]"
		[Register ("text_file_busy_get", "()I", "")]
		public static unsafe int Text_file_busy_get ()
		{
			const string __id = "text_file_busy_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='timed_out_get' and count(parameter)=0]"
		[Register ("timed_out_get", "()I", "")]
		public static unsafe int Timed_out_get ()
		{
			const string __id = "timed_out_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='too_many_files_open_get' and count(parameter)=0]"
		[Register ("too_many_files_open_get", "()I", "")]
		public static unsafe int Too_many_files_open_get ()
		{
			const string __id = "too_many_files_open_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='too_many_files_open_in_system_get' and count(parameter)=0]"
		[Register ("too_many_files_open_in_system_get", "()I", "")]
		public static unsafe int Too_many_files_open_in_system_get ()
		{
			const string __id = "too_many_files_open_in_system_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='too_many_links_get' and count(parameter)=0]"
		[Register ("too_many_links_get", "()I", "")]
		public static unsafe int Too_many_links_get ()
		{
			const string __id = "too_many_links_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='too_many_symbolic_link_levels_get' and count(parameter)=0]"
		[Register ("too_many_symbolic_link_levels_get", "()I", "")]
		public static unsafe int Too_many_symbolic_link_levels_get ()
		{
			const string __id = "too_many_symbolic_link_levels_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("torrent_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Torrent_alert_SWIGUpcast (long p0)
		{
			const string __id = "torrent_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_alert_handle_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_alert']]"
		[Register ("torrent_alert_handle_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_alert;)J", "")]
		public static unsafe long Torrent_alert_handle_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_alert p1)
		{
			const string __id = "torrent_alert_handle_get.(JLcom/frostwire/jlibtorrent/swig/torrent_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_alert_handle_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_alert_handle_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_alert;JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_alert_handle_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_handle p3)
		{
			const string __id = "torrent_alert_handle_set.(JLcom/frostwire/jlibtorrent/swig/torrent_alert;JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_alert']]"
		[Register ("torrent_alert_message", "(JLcom/frostwire/jlibtorrent/swig/torrent_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Torrent_alert p1)
		{
			const string __id = "torrent_alert_message.(JLcom/frostwire/jlibtorrent/swig/torrent_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_alert_torrent_name' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_alert']]"
		[Register ("torrent_alert_torrent_name", "(JLcom/frostwire/jlibtorrent/swig/torrent_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_alert_torrent_name (long p0, global::FrostWire.Libtorrent.Swig.Torrent_alert p1)
		{
			const string __id = "torrent_alert_torrent_name.(JLcom/frostwire/jlibtorrent/swig/torrent_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_checked_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("torrent_checked_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Torrent_checked_alert_SWIGUpcast (long p0)
		{
			const string __id = "torrent_checked_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_checked_alert_alert_type_get' and count(parameter)=0]"
		[Register ("torrent_checked_alert_alert_type_get", "()I", "")]
		public static unsafe int Torrent_checked_alert_alert_type_get ()
		{
			const string __id = "torrent_checked_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_checked_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_checked_alert']]"
		[Register ("torrent_checked_alert_category", "(JLcom/frostwire/jlibtorrent/swig/torrent_checked_alert;)J", "")]
		public static unsafe long Torrent_checked_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Torrent_checked_alert p1)
		{
			const string __id = "torrent_checked_alert_category.(JLcom/frostwire/jlibtorrent/swig/torrent_checked_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_checked_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_checked_alert']]"
		[Register ("torrent_checked_alert_message", "(JLcom/frostwire/jlibtorrent/swig/torrent_checked_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_checked_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Torrent_checked_alert p1)
		{
			const string __id = "torrent_checked_alert_message.(JLcom/frostwire/jlibtorrent/swig/torrent_checked_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_checked_alert_priority_get' and count(parameter)=0]"
		[Register ("torrent_checked_alert_priority_get", "()I", "")]
		public static unsafe int Torrent_checked_alert_priority_get ()
		{
			const string __id = "torrent_checked_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_checked_alert_static_category_get' and count(parameter)=0]"
		[Register ("torrent_checked_alert_static_category_get", "()J", "")]
		public static unsafe long Torrent_checked_alert_static_category_get ()
		{
			const string __id = "torrent_checked_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_checked_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_checked_alert']]"
		[Register ("torrent_checked_alert_type", "(JLcom/frostwire/jlibtorrent/swig/torrent_checked_alert;)I", "")]
		public static unsafe int Torrent_checked_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Torrent_checked_alert p1)
		{
			const string __id = "torrent_checked_alert_type.(JLcom/frostwire/jlibtorrent/swig/torrent_checked_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_checked_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_checked_alert']]"
		[Register ("torrent_checked_alert_what", "(JLcom/frostwire/jlibtorrent/swig/torrent_checked_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_checked_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Torrent_checked_alert p1)
		{
			const string __id = "torrent_checked_alert_what.(JLcom/frostwire/jlibtorrent/swig/torrent_checked_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_delete_failed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("torrent_delete_failed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Torrent_delete_failed_alert_SWIGUpcast (long p0)
		{
			const string __id = "torrent_delete_failed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_delete_failed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("torrent_delete_failed_alert_alert_type_get", "()I", "")]
		public static unsafe int Torrent_delete_failed_alert_alert_type_get ()
		{
			const string __id = "torrent_delete_failed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_delete_failed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_delete_failed_alert']]"
		[Register ("torrent_delete_failed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/torrent_delete_failed_alert;)J", "")]
		public static unsafe long Torrent_delete_failed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Torrent_delete_failed_alert p1)
		{
			const string __id = "torrent_delete_failed_alert_category.(JLcom/frostwire/jlibtorrent/swig/torrent_delete_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_delete_failed_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_delete_failed_alert']]"
		[Register ("torrent_delete_failed_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_delete_failed_alert;)J", "")]
		public static unsafe long Torrent_delete_failed_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_delete_failed_alert p1)
		{
			const string __id = "torrent_delete_failed_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/torrent_delete_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_delete_failed_alert_info_hash_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_delete_failed_alert']]"
		[Register ("torrent_delete_failed_alert_info_hash_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_delete_failed_alert;)J", "")]
		public static unsafe long Torrent_delete_failed_alert_info_hash_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_delete_failed_alert p1)
		{
			const string __id = "torrent_delete_failed_alert_info_hash_get.(JLcom/frostwire/jlibtorrent/swig/torrent_delete_failed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_delete_failed_alert_info_hash_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_delete_failed_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("torrent_delete_failed_alert_info_hash_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_delete_failed_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Torrent_delete_failed_alert_info_hash_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_delete_failed_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "torrent_delete_failed_alert_info_hash_set.(JLcom/frostwire/jlibtorrent/swig/torrent_delete_failed_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_delete_failed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_delete_failed_alert']]"
		[Register ("torrent_delete_failed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/torrent_delete_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_delete_failed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Torrent_delete_failed_alert p1)
		{
			const string __id = "torrent_delete_failed_alert_message.(JLcom/frostwire/jlibtorrent/swig/torrent_delete_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_delete_failed_alert_priority_get' and count(parameter)=0]"
		[Register ("torrent_delete_failed_alert_priority_get", "()I", "")]
		public static unsafe int Torrent_delete_failed_alert_priority_get ()
		{
			const string __id = "torrent_delete_failed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_delete_failed_alert_static_category_get' and count(parameter)=0]"
		[Register ("torrent_delete_failed_alert_static_category_get", "()J", "")]
		public static unsafe long Torrent_delete_failed_alert_static_category_get ()
		{
			const string __id = "torrent_delete_failed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_delete_failed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_delete_failed_alert']]"
		[Register ("torrent_delete_failed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/torrent_delete_failed_alert;)I", "")]
		public static unsafe int Torrent_delete_failed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Torrent_delete_failed_alert p1)
		{
			const string __id = "torrent_delete_failed_alert_type.(JLcom/frostwire/jlibtorrent/swig/torrent_delete_failed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_delete_failed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_delete_failed_alert']]"
		[Register ("torrent_delete_failed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/torrent_delete_failed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_delete_failed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Torrent_delete_failed_alert p1)
		{
			const string __id = "torrent_delete_failed_alert_what.(JLcom/frostwire/jlibtorrent/swig/torrent_delete_failed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_deleted_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("torrent_deleted_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Torrent_deleted_alert_SWIGUpcast (long p0)
		{
			const string __id = "torrent_deleted_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_deleted_alert_alert_type_get' and count(parameter)=0]"
		[Register ("torrent_deleted_alert_alert_type_get", "()I", "")]
		public static unsafe int Torrent_deleted_alert_alert_type_get ()
		{
			const string __id = "torrent_deleted_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_deleted_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_deleted_alert']]"
		[Register ("torrent_deleted_alert_category", "(JLcom/frostwire/jlibtorrent/swig/torrent_deleted_alert;)J", "")]
		public static unsafe long Torrent_deleted_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Torrent_deleted_alert p1)
		{
			const string __id = "torrent_deleted_alert_category.(JLcom/frostwire/jlibtorrent/swig/torrent_deleted_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_deleted_alert_info_hash_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_deleted_alert']]"
		[Register ("torrent_deleted_alert_info_hash_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_deleted_alert;)J", "")]
		public static unsafe long Torrent_deleted_alert_info_hash_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_deleted_alert p1)
		{
			const string __id = "torrent_deleted_alert_info_hash_get.(JLcom/frostwire/jlibtorrent/swig/torrent_deleted_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_deleted_alert_info_hash_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_deleted_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("torrent_deleted_alert_info_hash_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_deleted_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Torrent_deleted_alert_info_hash_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_deleted_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "torrent_deleted_alert_info_hash_set.(JLcom/frostwire/jlibtorrent/swig/torrent_deleted_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_deleted_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_deleted_alert']]"
		[Register ("torrent_deleted_alert_message", "(JLcom/frostwire/jlibtorrent/swig/torrent_deleted_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_deleted_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Torrent_deleted_alert p1)
		{
			const string __id = "torrent_deleted_alert_message.(JLcom/frostwire/jlibtorrent/swig/torrent_deleted_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_deleted_alert_priority_get' and count(parameter)=0]"
		[Register ("torrent_deleted_alert_priority_get", "()I", "")]
		public static unsafe int Torrent_deleted_alert_priority_get ()
		{
			const string __id = "torrent_deleted_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_deleted_alert_static_category_get' and count(parameter)=0]"
		[Register ("torrent_deleted_alert_static_category_get", "()J", "")]
		public static unsafe long Torrent_deleted_alert_static_category_get ()
		{
			const string __id = "torrent_deleted_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_deleted_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_deleted_alert']]"
		[Register ("torrent_deleted_alert_type", "(JLcom/frostwire/jlibtorrent/swig/torrent_deleted_alert;)I", "")]
		public static unsafe int Torrent_deleted_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Torrent_deleted_alert p1)
		{
			const string __id = "torrent_deleted_alert_type.(JLcom/frostwire/jlibtorrent/swig/torrent_deleted_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_deleted_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_deleted_alert']]"
		[Register ("torrent_deleted_alert_what", "(JLcom/frostwire/jlibtorrent/swig/torrent_deleted_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_deleted_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Torrent_deleted_alert p1)
		{
			const string __id = "torrent_deleted_alert_what.(JLcom/frostwire/jlibtorrent/swig/torrent_deleted_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_error_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("torrent_error_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Torrent_error_alert_SWIGUpcast (long p0)
		{
			const string __id = "torrent_error_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_error_alert_alert_type_get' and count(parameter)=0]"
		[Register ("torrent_error_alert_alert_type_get", "()I", "")]
		public static unsafe int Torrent_error_alert_alert_type_get ()
		{
			const string __id = "torrent_error_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_error_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_error_alert']]"
		[Register ("torrent_error_alert_category", "(JLcom/frostwire/jlibtorrent/swig/torrent_error_alert;)J", "")]
		public static unsafe long Torrent_error_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Torrent_error_alert p1)
		{
			const string __id = "torrent_error_alert_category.(JLcom/frostwire/jlibtorrent/swig/torrent_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_error_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_error_alert']]"
		[Register ("torrent_error_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_error_alert;)J", "")]
		public static unsafe long Torrent_error_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_error_alert p1)
		{
			const string __id = "torrent_error_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/torrent_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_error_alert_filename' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_error_alert']]"
		[Register ("torrent_error_alert_filename", "(JLcom/frostwire/jlibtorrent/swig/torrent_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_error_alert_filename (long p0, global::FrostWire.Libtorrent.Swig.Torrent_error_alert p1)
		{
			const string __id = "torrent_error_alert_filename.(JLcom/frostwire/jlibtorrent/swig/torrent_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_error_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_error_alert']]"
		[Register ("torrent_error_alert_message", "(JLcom/frostwire/jlibtorrent/swig/torrent_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_error_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Torrent_error_alert p1)
		{
			const string __id = "torrent_error_alert_message.(JLcom/frostwire/jlibtorrent/swig/torrent_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_error_alert_priority_get' and count(parameter)=0]"
		[Register ("torrent_error_alert_priority_get", "()I", "")]
		public static unsafe int Torrent_error_alert_priority_get ()
		{
			const string __id = "torrent_error_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_error_alert_static_category_get' and count(parameter)=0]"
		[Register ("torrent_error_alert_static_category_get", "()J", "")]
		public static unsafe long Torrent_error_alert_static_category_get ()
		{
			const string __id = "torrent_error_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_error_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_error_alert']]"
		[Register ("torrent_error_alert_type", "(JLcom/frostwire/jlibtorrent/swig/torrent_error_alert;)I", "")]
		public static unsafe int Torrent_error_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Torrent_error_alert p1)
		{
			const string __id = "torrent_error_alert_type.(JLcom/frostwire/jlibtorrent/swig/torrent_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_error_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_error_alert']]"
		[Register ("torrent_error_alert_what", "(JLcom/frostwire/jlibtorrent/swig/torrent_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_error_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Torrent_error_alert p1)
		{
			const string __id = "torrent_error_alert_what.(JLcom/frostwire/jlibtorrent/swig/torrent_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_finished_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("torrent_finished_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Torrent_finished_alert_SWIGUpcast (long p0)
		{
			const string __id = "torrent_finished_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_finished_alert_alert_type_get' and count(parameter)=0]"
		[Register ("torrent_finished_alert_alert_type_get", "()I", "")]
		public static unsafe int Torrent_finished_alert_alert_type_get ()
		{
			const string __id = "torrent_finished_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_finished_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_finished_alert']]"
		[Register ("torrent_finished_alert_category", "(JLcom/frostwire/jlibtorrent/swig/torrent_finished_alert;)J", "")]
		public static unsafe long Torrent_finished_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Torrent_finished_alert p1)
		{
			const string __id = "torrent_finished_alert_category.(JLcom/frostwire/jlibtorrent/swig/torrent_finished_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_finished_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_finished_alert']]"
		[Register ("torrent_finished_alert_message", "(JLcom/frostwire/jlibtorrent/swig/torrent_finished_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_finished_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Torrent_finished_alert p1)
		{
			const string __id = "torrent_finished_alert_message.(JLcom/frostwire/jlibtorrent/swig/torrent_finished_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_finished_alert_priority_get' and count(parameter)=0]"
		[Register ("torrent_finished_alert_priority_get", "()I", "")]
		public static unsafe int Torrent_finished_alert_priority_get ()
		{
			const string __id = "torrent_finished_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_finished_alert_static_category_get' and count(parameter)=0]"
		[Register ("torrent_finished_alert_static_category_get", "()J", "")]
		public static unsafe long Torrent_finished_alert_static_category_get ()
		{
			const string __id = "torrent_finished_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_finished_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_finished_alert']]"
		[Register ("torrent_finished_alert_type", "(JLcom/frostwire/jlibtorrent/swig/torrent_finished_alert;)I", "")]
		public static unsafe int Torrent_finished_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Torrent_finished_alert p1)
		{
			const string __id = "torrent_finished_alert_type.(JLcom/frostwire/jlibtorrent/swig/torrent_finished_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_finished_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_finished_alert']]"
		[Register ("torrent_finished_alert_what", "(JLcom/frostwire/jlibtorrent/swig/torrent_finished_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_finished_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Torrent_finished_alert p1)
		{
			const string __id = "torrent_finished_alert_what.(JLcom/frostwire/jlibtorrent/swig/torrent_finished_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_flags_t_all' and count(parameter)=0]"
		[Register ("torrent_flags_t_all", "()J", "")]
		public static unsafe long Torrent_flags_t_all ()
		{
			const string __id = "torrent_flags_t_all.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_flags_t_and_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t']]"
		[Register ("torrent_flags_t_and_", "(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)J", "")]
		public static unsafe long Torrent_flags_t_and_ (long p0, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p3)
		{
			const string __id = "torrent_flags_t_and_.(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_flags_t_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t']]"
		[Register ("torrent_flags_t_eq", "(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)Z", "")]
		public static unsafe bool Torrent_flags_t_eq (long p0, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p3)
		{
			const string __id = "torrent_flags_t_eq.(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_flags_t_inv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t']]"
		[Register ("torrent_flags_t_inv", "(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)J", "")]
		public static unsafe long Torrent_flags_t_inv (long p0, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p1)
		{
			const string __id = "torrent_flags_t_inv.(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_flags_t_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t']]"
		[Register ("torrent_flags_t_ne", "(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)Z", "")]
		public static unsafe bool Torrent_flags_t_ne (long p0, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p3)
		{
			const string __id = "torrent_flags_t_ne.(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_flags_t_nonZero' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t']]"
		[Register ("torrent_flags_t_nonZero", "(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)Z", "")]
		public static unsafe bool Torrent_flags_t_nonZero (long p0, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p1)
		{
			const string __id = "torrent_flags_t_nonZero.(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_flags_t_or_' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t']]"
		[Register ("torrent_flags_t_or_", "(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)J", "")]
		public static unsafe long Torrent_flags_t_or_ (long p0, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p3)
		{
			const string __id = "torrent_flags_t_or_.(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_flags_t_to_int' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t']]"
		[Register ("torrent_flags_t_to_int", "(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)I", "")]
		public static unsafe int Torrent_flags_t_to_int (long p0, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p1)
		{
			const string __id = "torrent_flags_t_to_int.(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_flags_t_xor' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t']]"
		[Register ("torrent_flags_t_xor", "(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)J", "")]
		public static unsafe long Torrent_flags_t_xor (long p0, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p3)
		{
			const string __id = "torrent_flags_t_xor.(JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_add_http_seed' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='java.lang.String']]"
		[Register ("torrent_handle_add_http_seed", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_handle_add_http_seed (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, string p2)
		{
			const string __id = "torrent_handle_add_http_seed.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_add_piece_bytes__SWIG_0' and count(parameter)=7 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[6][@type='long'] and parameter[7][@type='com.frostwire.jlibtorrent.swig.add_piece_flags_t']]"
		[Register ("torrent_handle_add_piece_bytes__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;IJLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)V", "")]
		public static unsafe void Torrent_handle_add_piece_bytes__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Byte_vector p4, long p5, global::FrostWire.Libtorrent.Swig.Add_piece_flags_t p6)
		{
			const string __id = "torrent_handle_add_piece_bytes__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;IJLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/add_piece_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				__args [5] = new JniArgumentValue (p5);
				__args [6] = new JniArgumentValue ((p6 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p6).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_add_piece_bytes__SWIG_1' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("torrent_handle_add_piece_bytes__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;IJLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Torrent_handle_add_piece_bytes__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Byte_vector p4)
		{
			const string __id = "torrent_handle_add_piece_bytes__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;IJLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_add_tracker' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.announce_entry']]"
		[Register ("torrent_handle_add_tracker", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/announce_entry;)V", "")]
		public static unsafe void Torrent_handle_add_tracker (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Announce_entry p3)
		{
			const string __id = "torrent_handle_add_tracker.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/announce_entry;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_add_url_seed' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='java.lang.String']]"
		[Register ("torrent_handle_add_url_seed", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_handle_add_url_seed (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, string p2)
		{
			const string __id = "torrent_handle_add_url_seed.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_alert_when_available_get' and count(parameter)=0]"
		[Register ("torrent_handle_alert_when_available_get", "()J", "")]
		public static unsafe long Torrent_handle_alert_when_available_get ()
		{
			const string __id = "torrent_handle_alert_when_available_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_clear_disk_cache_get' and count(parameter)=0]"
		[Register ("torrent_handle_clear_disk_cache_get", "()J", "")]
		public static unsafe long Torrent_handle_clear_disk_cache_get ()
		{
			const string __id = "torrent_handle_clear_disk_cache_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_clear_error' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_clear_error", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_clear_error (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_clear_error.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_clear_piece_deadlines' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_clear_piece_deadlines", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_clear_piece_deadlines (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_clear_piece_deadlines.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_connect_peer__SWIG_0' and count(parameter)=8 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t'] and parameter[7][@type='long'] and parameter[8][@type='com.frostwire.jlibtorrent.swig.pex_flags_t']]"
		[Register ("torrent_handle_connect_peer__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)V", "")]
		public static unsafe void Torrent_handle_connect_peer__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Tcp_endpoint p3, long p4, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p5, long p6, global::FrostWire.Libtorrent.Swig.Pex_flags_t p7)
		{
			const string __id = "torrent_handle_connect_peer__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;JLcom/frostwire/jlibtorrent/swig/pex_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [8];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				__args [6] = new JniArgumentValue (p6);
				__args [7] = new JniArgumentValue ((p7 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p7).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_connect_peer__SWIG_1' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.peer_source_flags_t']]"
		[Register ("torrent_handle_connect_peer__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)V", "")]
		public static unsafe void Torrent_handle_connect_peer__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Tcp_endpoint p3, long p4, global::FrostWire.Libtorrent.Swig.Peer_source_flags_t p5)
		{
			const string __id = "torrent_handle_connect_peer__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;JLcom/frostwire/jlibtorrent/swig/peer_source_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_connect_peer__SWIG_2' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.tcp_endpoint']]"
		[Register ("torrent_handle_connect_peer__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)V", "")]
		public static unsafe void Torrent_handle_connect_peer__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Tcp_endpoint p3)
		{
			const string __id = "torrent_handle_connect_peer__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/tcp_endpoint;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_download_limit' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_download_limit", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)I", "")]
		public static unsafe int Torrent_handle_download_limit (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_download_limit.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_file_priority2__SWIG_0' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int']]"
		[Register ("torrent_handle_file_priority2__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)I", "")]
		public static unsafe int Torrent_handle_file_priority2__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2)
		{
			const string __id = "torrent_handle_file_priority2__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_file_priority2__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("torrent_handle_file_priority2__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;II)V", "")]
		public static unsafe void Torrent_handle_file_priority2__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2, int p3)
		{
			const string __id = "torrent_handle_file_priority2__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_file_progress__SWIG_0' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.int64_vector'] and parameter[5][@type='int']]"
		[Register ("torrent_handle_file_progress__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/int64_vector;I)V", "")]
		public static unsafe void Torrent_handle_file_progress__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Int64_vector p3, int p4)
		{
			const string __id = "torrent_handle_file_progress__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/int64_vector;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_file_progress__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.int64_vector']]"
		[Register ("torrent_handle_file_progress__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/int64_vector;)V", "")]
		public static unsafe void Torrent_handle_file_progress__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Int64_vector p3)
		{
			const string __id = "torrent_handle_file_progress__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/int64_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_flags' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_flags", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J", "")]
		public static unsafe long Torrent_handle_flags (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_flags.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_flush_cache' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_flush_cache", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_flush_cache (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_flush_cache.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_flush_disk_cache_get' and count(parameter)=0]"
		[Register ("torrent_handle_flush_disk_cache_get", "()J", "")]
		public static unsafe long Torrent_handle_flush_disk_cache_get ()
		{
			const string __id = "torrent_handle_flush_disk_cache_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_force_dht_announce' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_force_dht_announce", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_force_dht_announce (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_force_dht_announce.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_force_reannounce__SWIG_0' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.reannounce_flags_t']]"
		[Register ("torrent_handle_force_reannounce__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;IIJLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)V", "")]
		public static unsafe void Torrent_handle_force_reannounce__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2, int p3, long p4, global::FrostWire.Libtorrent.Swig.Reannounce_flags_t p5)
		{
			const string __id = "torrent_handle_force_reannounce__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;IIJLcom/frostwire/jlibtorrent/swig/reannounce_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_force_reannounce__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("torrent_handle_force_reannounce__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;II)V", "")]
		public static unsafe void Torrent_handle_force_reannounce__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2, int p3)
		{
			const string __id = "torrent_handle_force_reannounce__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_force_reannounce__SWIG_2' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int']]"
		[Register ("torrent_handle_force_reannounce__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V", "")]
		public static unsafe void Torrent_handle_force_reannounce__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2)
		{
			const string __id = "torrent_handle_force_reannounce__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_force_reannounce__SWIG_3' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_force_reannounce__SWIG_3", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_force_reannounce__SWIG_3 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_force_reannounce__SWIG_3.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_force_recheck' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_force_recheck", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_force_recheck (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_force_recheck.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_get_download_queue' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.partial_piece_info_vector']]"
		[Register ("torrent_handle_get_download_queue", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;)V", "")]
		public static unsafe void Torrent_handle_get_download_queue (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Partial_piece_info_vector p3)
		{
			const string __id = "torrent_handle_get_download_queue.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/partial_piece_info_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_get_file_priorities2' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_get_file_priorities2", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J", "")]
		public static unsafe long Torrent_handle_get_file_priorities2 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_get_file_priorities2.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_get_http_seeds' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_get_http_seeds", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J", "")]
		public static unsafe long Torrent_handle_get_http_seeds (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_get_http_seeds.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_get_peer_info' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.peer_info_vector']]"
		[Register ("torrent_handle_get_peer_info", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/peer_info_vector;)V", "")]
		public static unsafe void Torrent_handle_get_peer_info (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Peer_info_vector p3)
		{
			const string __id = "torrent_handle_get_peer_info.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/peer_info_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_get_piece_priorities2' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_get_piece_priorities2", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J", "")]
		public static unsafe long Torrent_handle_get_piece_priorities2 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_get_piece_priorities2.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_get_url_seeds' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_get_url_seeds", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J", "")]
		public static unsafe long Torrent_handle_get_url_seeds (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_get_url_seeds.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_graceful_pause_get' and count(parameter)=0]"
		[Register ("torrent_handle_graceful_pause_get", "()J", "")]
		public static unsafe long Torrent_handle_graceful_pause_get ()
		{
			const string __id = "torrent_handle_graceful_pause_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_have_piece' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int']]"
		[Register ("torrent_handle_have_piece", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)Z", "")]
		public static unsafe bool Torrent_handle_have_piece (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2)
		{
			const string __id = "torrent_handle_have_piece.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_id' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_id", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J", "")]
		public static unsafe long Torrent_handle_id (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_id.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_ignore_min_interval_get' and count(parameter)=0]"
		[Register ("torrent_handle_ignore_min_interval_get", "()J", "")]
		public static unsafe long Torrent_handle_ignore_min_interval_get ()
		{
			const string __id = "torrent_handle_ignore_min_interval_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_info_hash' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_info_hash", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J", "")]
		public static unsafe long Torrent_handle_info_hash (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_info_hash.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_is_valid' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_is_valid", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)Z", "")]
		public static unsafe bool Torrent_handle_is_valid (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_is_valid.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_max_connections' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_max_connections", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)I", "")]
		public static unsafe int Torrent_handle_max_connections (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_max_connections.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_max_uploads' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_max_uploads", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)I", "")]
		public static unsafe int Torrent_handle_max_uploads (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_max_uploads.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_move_storage__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int']]"
		[Register ("torrent_handle_move_storage__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;I)V", "")]
		public static unsafe void Torrent_handle_move_storage__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, string p2, int p3)
		{
			const string __id = "torrent_handle_move_storage__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;I)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_move_storage__SWIG_1' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='java.lang.String']]"
		[Register ("torrent_handle_move_storage__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_handle_move_storage__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, string p2)
		{
			const string __id = "torrent_handle_move_storage__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_need_save_resume_data' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_need_save_resume_data", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)Z", "")]
		public static unsafe bool Torrent_handle_need_save_resume_data (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_need_save_resume_data.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_only_if_modified_get' and count(parameter)=0]"
		[Register ("torrent_handle_only_if_modified_get", "()J", "")]
		public static unsafe long Torrent_handle_only_if_modified_get ()
		{
			const string __id = "torrent_handle_only_if_modified_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_op_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_op_eq", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/torrent_handle;)Z", "")]
		public static unsafe bool Torrent_handle_op_eq (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_handle p3)
		{
			const string __id = "torrent_handle_op_eq.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/torrent_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_op_lt' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_op_lt", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/torrent_handle;)Z", "")]
		public static unsafe bool Torrent_handle_op_lt (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_handle p3)
		{
			const string __id = "torrent_handle_op_lt.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/torrent_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_op_ne' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_op_ne", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/torrent_handle;)Z", "")]
		public static unsafe bool Torrent_handle_op_ne (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_handle p3)
		{
			const string __id = "torrent_handle_op_ne.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/torrent_handle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_overwrite_existing_get' and count(parameter)=0]"
		[Register ("torrent_handle_overwrite_existing_get", "()J", "")]
		public static unsafe long Torrent_handle_overwrite_existing_get ()
		{
			const string __id = "torrent_handle_overwrite_existing_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_pause__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.pause_flags_t']]"
		[Register ("torrent_handle_pause__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)V", "")]
		public static unsafe void Torrent_handle_pause__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Pause_flags_t p3)
		{
			const string __id = "torrent_handle_pause__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/pause_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_pause__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_pause__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_pause__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_pause__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_piece_availability' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.int_vector']]"
		[Register ("torrent_handle_piece_availability", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/int_vector;)V", "")]
		public static unsafe void Torrent_handle_piece_availability (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Int_vector p3)
		{
			const string __id = "torrent_handle_piece_availability.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/int_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_piece_granularity_get' and count(parameter)=0]"
		[Register ("torrent_handle_piece_granularity_get", "()I", "")]
		public static unsafe int Torrent_handle_piece_granularity_get ()
		{
			const string __id = "torrent_handle_piece_granularity_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_piece_priority2__SWIG_0' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int']]"
		[Register ("torrent_handle_piece_priority2__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)I", "")]
		public static unsafe int Torrent_handle_piece_priority2__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2)
		{
			const string __id = "torrent_handle_piece_priority2__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_piece_priority2__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("torrent_handle_piece_priority2__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;II)V", "")]
		public static unsafe void Torrent_handle_piece_priority2__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2, int p3)
		{
			const string __id = "torrent_handle_piece_priority2__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_prioritize_files2' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.int_vector']]"
		[Register ("torrent_handle_prioritize_files2", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/int_vector;)V", "")]
		public static unsafe void Torrent_handle_prioritize_files2 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Int_vector p3)
		{
			const string __id = "torrent_handle_prioritize_files2.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/int_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_prioritize_pieces2__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.int_vector']]"
		[Register ("torrent_handle_prioritize_pieces2__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/int_vector;)V", "")]
		public static unsafe void Torrent_handle_prioritize_pieces2__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Int_vector p3)
		{
			const string __id = "torrent_handle_prioritize_pieces2__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/int_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_prioritize_pieces2__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.piece_index_int_pair_vector']]"
		[Register ("torrent_handle_prioritize_pieces2__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;)V", "")]
		public static unsafe void Torrent_handle_prioritize_pieces2__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Piece_index_int_pair_vector p3)
		{
			const string __id = "torrent_handle_prioritize_pieces2__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/piece_index_int_pair_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_query_accurate_download_counters_get' and count(parameter)=0]"
		[Register ("torrent_handle_query_accurate_download_counters_get", "()J", "")]
		public static unsafe long Torrent_handle_query_accurate_download_counters_get ()
		{
			const string __id = "torrent_handle_query_accurate_download_counters_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_query_distributed_copies_get' and count(parameter)=0]"
		[Register ("torrent_handle_query_distributed_copies_get", "()J", "")]
		public static unsafe long Torrent_handle_query_distributed_copies_get ()
		{
			const string __id = "torrent_handle_query_distributed_copies_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_query_last_seen_complete_get' and count(parameter)=0]"
		[Register ("torrent_handle_query_last_seen_complete_get", "()J", "")]
		public static unsafe long Torrent_handle_query_last_seen_complete_get ()
		{
			const string __id = "torrent_handle_query_last_seen_complete_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_query_name_get' and count(parameter)=0]"
		[Register ("torrent_handle_query_name_get", "()J", "")]
		public static unsafe long Torrent_handle_query_name_get ()
		{
			const string __id = "torrent_handle_query_name_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_query_pieces_get' and count(parameter)=0]"
		[Register ("torrent_handle_query_pieces_get", "()J", "")]
		public static unsafe long Torrent_handle_query_pieces_get ()
		{
			const string __id = "torrent_handle_query_pieces_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_query_save_path_get' and count(parameter)=0]"
		[Register ("torrent_handle_query_save_path_get", "()J", "")]
		public static unsafe long Torrent_handle_query_save_path_get ()
		{
			const string __id = "torrent_handle_query_save_path_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_query_torrent_file_get' and count(parameter)=0]"
		[Register ("torrent_handle_query_torrent_file_get", "()J", "")]
		public static unsafe long Torrent_handle_query_torrent_file_get ()
		{
			const string __id = "torrent_handle_query_torrent_file_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_query_verified_pieces_get' and count(parameter)=0]"
		[Register ("torrent_handle_query_verified_pieces_get", "()J", "")]
		public static unsafe long Torrent_handle_query_verified_pieces_get ()
		{
			const string __id = "torrent_handle_query_verified_pieces_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_queue_position2' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_queue_position2", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)I", "")]
		public static unsafe int Torrent_handle_queue_position2 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_queue_position2.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_queue_position_bottom' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_queue_position_bottom", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_queue_position_bottom (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_queue_position_bottom.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_queue_position_down' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_queue_position_down", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_queue_position_down (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_queue_position_down.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_queue_position_set2' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int']]"
		[Register ("torrent_handle_queue_position_set2", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V", "")]
		public static unsafe void Torrent_handle_queue_position_set2 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2)
		{
			const string __id = "torrent_handle_queue_position_set2.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_queue_position_top' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_queue_position_top", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_queue_position_top (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_queue_position_top.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_queue_position_up' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_queue_position_up", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_queue_position_up (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_queue_position_up.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_read_piece' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int']]"
		[Register ("torrent_handle_read_piece", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V", "")]
		public static unsafe void Torrent_handle_read_piece (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2)
		{
			const string __id = "torrent_handle_read_piece.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_remove_http_seed' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='java.lang.String']]"
		[Register ("torrent_handle_remove_http_seed", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_handle_remove_http_seed (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, string p2)
		{
			const string __id = "torrent_handle_remove_http_seed.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_remove_url_seed' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='java.lang.String']]"
		[Register ("torrent_handle_remove_url_seed", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_handle_remove_url_seed (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, string p2)
		{
			const string __id = "torrent_handle_remove_url_seed.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_rename_file' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int'] and parameter[4][@type='java.lang.String']]"
		[Register ("torrent_handle_rename_file", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;ILjava/lang/String;)V", "")]
		public static unsafe void Torrent_handle_rename_file (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2, string p3)
		{
			const string __id = "torrent_handle_rename_file.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;ILjava/lang/String;)V";
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (native_p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_replace_trackers' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.announce_entry_vector']]"
		[Register ("torrent_handle_replace_trackers", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;)V", "")]
		public static unsafe void Torrent_handle_replace_trackers (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Announce_entry_vector p3)
		{
			const string __id = "torrent_handle_replace_trackers.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/announce_entry_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_reset_piece_deadline' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int']]"
		[Register ("torrent_handle_reset_piece_deadline", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V", "")]
		public static unsafe void Torrent_handle_reset_piece_deadline (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2)
		{
			const string __id = "torrent_handle_reset_piece_deadline.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_resume' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_resume", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_resume (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_resume.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_save_info_dict_get' and count(parameter)=0]"
		[Register ("torrent_handle_save_info_dict_get", "()J", "")]
		public static unsafe long Torrent_handle_save_info_dict_get ()
		{
			const string __id = "torrent_handle_save_info_dict_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_save_resume_data__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.resume_data_flags_t']]"
		[Register ("torrent_handle_save_resume_data__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)V", "")]
		public static unsafe void Torrent_handle_save_resume_data__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Resume_data_flags_t p3)
		{
			const string __id = "torrent_handle_save_resume_data__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/resume_data_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_save_resume_data__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_save_resume_data__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_save_resume_data__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_save_resume_data__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_scrape_tracker__SWIG_0' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int']]"
		[Register ("torrent_handle_scrape_tracker__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V", "")]
		public static unsafe void Torrent_handle_scrape_tracker__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2)
		{
			const string __id = "torrent_handle_scrape_tracker__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_scrape_tracker__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_scrape_tracker__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_scrape_tracker__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_scrape_tracker__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_set_download_limit' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int']]"
		[Register ("torrent_handle_set_download_limit", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V", "")]
		public static unsafe void Torrent_handle_set_download_limit (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2)
		{
			const string __id = "torrent_handle_set_download_limit.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_set_flags__SWIG_0' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t']]"
		[Register ("torrent_handle_set_flags__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)V", "")]
		public static unsafe void Torrent_handle_set_flags__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p3, long p4, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p5)
		{
			const string __id = "torrent_handle_set_flags__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_set_flags__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t']]"
		[Register ("torrent_handle_set_flags__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)V", "")]
		public static unsafe void Torrent_handle_set_flags__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p3)
		{
			const string __id = "torrent_handle_set_flags__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_set_max_connections' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int']]"
		[Register ("torrent_handle_set_max_connections", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V", "")]
		public static unsafe void Torrent_handle_set_max_connections (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2)
		{
			const string __id = "torrent_handle_set_max_connections.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_set_max_uploads' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int']]"
		[Register ("torrent_handle_set_max_uploads", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V", "")]
		public static unsafe void Torrent_handle_set_max_uploads (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2)
		{
			const string __id = "torrent_handle_set_max_uploads.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_set_piece_deadline__SWIG_0' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.deadline_flags_t']]"
		[Register ("torrent_handle_set_piece_deadline__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;IIJLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)V", "")]
		public static unsafe void Torrent_handle_set_piece_deadline__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2, int p3, long p4, global::FrostWire.Libtorrent.Swig.Deadline_flags_t p5)
		{
			const string __id = "torrent_handle_set_piece_deadline__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;IIJLcom/frostwire/jlibtorrent/swig/deadline_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_set_piece_deadline__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("torrent_handle_set_piece_deadline__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;II)V", "")]
		public static unsafe void Torrent_handle_set_piece_deadline__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2, int p3)
		{
			const string __id = "torrent_handle_set_piece_deadline__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_set_ssl_certificate__SWIG_0' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='java.lang.String']]"
		[Register ("torrent_handle_set_ssl_certificate__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_handle_set_ssl_certificate__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, string p2, string p3, string p4, string p5)
		{
			const string __id = "torrent_handle_set_ssl_certificate__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			IntPtr native_p3 = JNIEnv.NewString (p3);
			IntPtr native_p4 = JNIEnv.NewString (p4);
			IntPtr native_p5 = JNIEnv.NewString (p5);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (native_p3);
				__args [4] = new JniArgumentValue (native_p4);
				__args [5] = new JniArgumentValue (native_p5);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p3);
				JNIEnv.DeleteLocalRef (native_p4);
				JNIEnv.DeleteLocalRef (native_p5);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_set_ssl_certificate__SWIG_1' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]"
		[Register ("torrent_handle_set_ssl_certificate__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_handle_set_ssl_certificate__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, string p2, string p3, string p4)
		{
			const string __id = "torrent_handle_set_ssl_certificate__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			IntPtr native_p3 = JNIEnv.NewString (p3);
			IntPtr native_p4 = JNIEnv.NewString (p4);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (native_p3);
				__args [4] = new JniArgumentValue (native_p4);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p3);
				JNIEnv.DeleteLocalRef (native_p4);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_set_ssl_certificate_buffer2' and count(parameter)=8 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.byte_vector'] and parameter[7][@type='long'] and parameter[8][@type='com.frostwire.jlibtorrent.swig.byte_vector']]"
		[Register ("torrent_handle_set_ssl_certificate_buffer2", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V", "")]
		public static unsafe void Torrent_handle_set_ssl_certificate_buffer2 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Byte_vector p3, long p4, global::FrostWire.Libtorrent.Swig.Byte_vector p5, long p6, global::FrostWire.Libtorrent.Swig.Byte_vector p7)
		{
			const string __id = "torrent_handle_set_ssl_certificate_buffer2.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;JLcom/frostwire/jlibtorrent/swig/byte_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [8];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				__args [6] = new JniArgumentValue (p6);
				__args [7] = new JniArgumentValue ((p7 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p7).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_set_upload_limit' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='int']]"
		[Register ("torrent_handle_set_upload_limit", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V", "")]
		public static unsafe void Torrent_handle_set_upload_limit (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, int p2)
		{
			const string __id = "torrent_handle_set_upload_limit.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_status__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.status_flags_t']]"
		[Register ("torrent_handle_status__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)J", "")]
		public static unsafe long Torrent_handle_status__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Status_flags_t p3)
		{
			const string __id = "torrent_handle_status__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/status_flags_t;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_status__SWIG_1' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_status__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J", "")]
		public static unsafe long Torrent_handle_status__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_status__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_torrent_file_ptr' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_torrent_file_ptr", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J", "")]
		public static unsafe long Torrent_handle_torrent_file_ptr (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_torrent_file_ptr.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_trackers' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_trackers", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J", "")]
		public static unsafe long Torrent_handle_trackers (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_trackers.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_unset_flags' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t']]"
		[Register ("torrent_handle_unset_flags", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)V", "")]
		public static unsafe void Torrent_handle_unset_flags (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p3)
		{
			const string __id = "torrent_handle_unset_flags.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_upload_limit' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_upload_limit", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)I", "")]
		public static unsafe int Torrent_handle_upload_limit (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle p1)
		{
			const string __id = "torrent_handle_upload_limit.(JLcom/frostwire/jlibtorrent/swig/torrent_handle;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle_vector']]"
		[Register ("torrent_handle_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;)J", "")]
		public static unsafe long Torrent_handle_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle_vector p1)
		{
			const string __id = "torrent_handle_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle_vector']]"
		[Register ("torrent_handle_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;)V", "")]
		public static unsafe void Torrent_handle_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle_vector p1)
		{
			const string __id = "torrent_handle_vector_clear.(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle_vector']]"
		[Register ("torrent_handle_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;)Z", "")]
		public static unsafe bool Torrent_handle_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle_vector p1)
		{
			const string __id = "torrent_handle_vector_empty.(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle_vector'] and parameter[3][@type='int']]"
		[Register ("torrent_handle_vector_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;I)J", "")]
		public static unsafe long Torrent_handle_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle_vector p1, int p2)
		{
			const string __id = "torrent_handle_vector_get.(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_handle p3)
		{
			const string __id = "torrent_handle_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle_vector'] and parameter[3][@type='long']]"
		[Register ("torrent_handle_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;J)V", "")]
		public static unsafe void Torrent_handle_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle_vector p1, long p2)
		{
			const string __id = "torrent_handle_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_handle_vector_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;IJLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_handle_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Torrent_handle p4)
		{
			const string __id = "torrent_handle_vector_set.(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;IJLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_handle_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_handle_vector']]"
		[Register ("torrent_handle_vector_size", "(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;)J", "")]
		public static unsafe long Torrent_handle_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Torrent_handle_vector p1)
		{
			const string __id = "torrent_handle_vector_size.(JLcom/frostwire/jlibtorrent/swig/torrent_handle_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_add_http_seed__SWIG_0' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.string_string_pair_vector']]"
		[Register ("torrent_info_add_http_seed__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)V", "")]
		public static unsafe void Torrent_info_add_http_seed__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, string p2, string p3, long p4, global::FrostWire.Libtorrent.Swig.String_string_pair_vector p5)
		{
			const string __id = "torrent_info_add_http_seed__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (native_p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_add_http_seed__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("torrent_info_add_http_seed__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_info_add_http_seed__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, string p2, string p3)
		{
			const string __id = "torrent_info_add_http_seed__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (native_p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_add_http_seed__SWIG_2' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='java.lang.String']]"
		[Register ("torrent_info_add_http_seed__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_info_add_http_seed__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, string p2)
		{
			const string __id = "torrent_info_add_http_seed__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_add_node' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_int_pair']]"
		[Register ("torrent_info_add_node", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;JLcom/frostwire/jlibtorrent/swig/string_int_pair;)V", "")]
		public static unsafe void Torrent_info_add_node (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, long p2, global::FrostWire.Libtorrent.Swig.String_int_pair p3)
		{
			const string __id = "torrent_info_add_node.(JLcom/frostwire/jlibtorrent/swig/torrent_info;JLcom/frostwire/jlibtorrent/swig/string_int_pair;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_add_tracker__SWIG_0' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int']]"
		[Register ("torrent_info_add_tracker__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;I)V", "")]
		public static unsafe void Torrent_info_add_tracker__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, string p2, int p3)
		{
			const string __id = "torrent_info_add_tracker__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;I)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_add_tracker__SWIG_1' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='java.lang.String']]"
		[Register ("torrent_info_add_tracker__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_info_add_tracker__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, string p2)
		{
			const string __id = "torrent_info_add_tracker__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_add_url_seed__SWIG_0' and count(parameter)=6 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='long'] and parameter[6][@type='com.frostwire.jlibtorrent.swig.string_string_pair_vector']]"
		[Register ("torrent_info_add_url_seed__SWIG_0", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)V", "")]
		public static unsafe void Torrent_info_add_url_seed__SWIG_0 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, string p2, string p3, long p4, global::FrostWire.Libtorrent.Swig.String_string_pair_vector p5)
		{
			const string __id = "torrent_info_add_url_seed__SWIG_0.(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;Ljava/lang/String;JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (native_p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue ((p5 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p5).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_add_url_seed__SWIG_1' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("torrent_info_add_url_seed__SWIG_1", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_info_add_url_seed__SWIG_1 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, string p2, string p3)
		{
			const string __id = "torrent_info_add_url_seed__SWIG_1.(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (native_p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_add_url_seed__SWIG_2' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='java.lang.String']]"
		[Register ("torrent_info_add_url_seed__SWIG_2", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_info_add_url_seed__SWIG_2 (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, string p2)
		{
			const string __id = "torrent_info_add_url_seed__SWIG_2.(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_collections' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_collections", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J", "")]
		public static unsafe long Torrent_info_collections (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_collections.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_comment' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_comment", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_info_comment (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_comment.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_creation_date' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_creation_date", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J", "")]
		public static unsafe long Torrent_info_creation_date (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_creation_date.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_creator' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_creator", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_info_creator (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_creator.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_end_piece' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_end_piece", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)I", "")]
		public static unsafe int Torrent_info_end_piece (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_end_piece.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_files' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_files", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J", "")]
		public static unsafe long Torrent_info_files (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_files.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_hash_for_piece' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='int']]"
		[Register ("torrent_info_hash_for_piece", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;I)J", "")]
		public static unsafe long Torrent_info_hash_for_piece (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, int p2)
		{
			const string __id = "torrent_info_hash_for_piece.(JLcom/frostwire/jlibtorrent/swig/torrent_info;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_info' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='java.lang.String']]"
		[Register ("torrent_info_info", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;)J", "")]
		public static unsafe long Torrent_info_info (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, string p2)
		{
			const string __id = "torrent_info_info.(JLcom/frostwire/jlibtorrent/swig/torrent_info;Ljava/lang/String;)J";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_info_hash' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_info_hash", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J", "")]
		public static unsafe long Torrent_info_info_hash (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_info_hash.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_is_i2p' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_is_i2p", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Z", "")]
		public static unsafe bool Torrent_info_is_i2p (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_is_i2p.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_is_loaded' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_is_loaded", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Z", "")]
		public static unsafe bool Torrent_info_is_loaded (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_is_loaded.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_is_merkle_torrent' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_is_merkle_torrent", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Z", "")]
		public static unsafe bool Torrent_info_is_merkle_torrent (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_is_merkle_torrent.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_is_valid' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_is_valid", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Z", "")]
		public static unsafe bool Torrent_info_is_valid (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_is_valid.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_last_piece' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_last_piece", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)I", "")]
		public static unsafe int Torrent_info_last_piece (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_last_piece.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_map_block' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='int']]"
		[Register ("torrent_info_map_block", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;IJI)J", "")]
		public static unsafe long Torrent_info_map_block (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, int p2, long p3, int p4)
		{
			const string __id = "torrent_info_map_block.(JLcom/frostwire/jlibtorrent/swig/torrent_info;IJI)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_map_file' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='int']]"
		[Register ("torrent_info_map_file", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;IJI)J", "")]
		public static unsafe long Torrent_info_map_file (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, int p2, long p3, int p4)
		{
			const string __id = "torrent_info_map_file.(JLcom/frostwire/jlibtorrent/swig/torrent_info;IJI)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_merkle_tree' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_merkle_tree", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J", "")]
		public static unsafe long Torrent_info_merkle_tree (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_merkle_tree.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_metadata_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_metadata_size", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)I", "")]
		public static unsafe int Torrent_info_metadata_size (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_metadata_size.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_name' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_name", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_info_name (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_name.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_nodes' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_nodes", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J", "")]
		public static unsafe long Torrent_info_nodes (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_nodes.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_num_files' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_num_files", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)I", "")]
		public static unsafe int Torrent_info_num_files (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_num_files.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_num_pieces' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_num_pieces", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)I", "")]
		public static unsafe int Torrent_info_num_pieces (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_num_pieces.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_orig_files' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_orig_files", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J", "")]
		public static unsafe long Torrent_info_orig_files (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_orig_files.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_piece_length' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_piece_length", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)I", "")]
		public static unsafe int Torrent_info_piece_length (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_piece_length.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_piece_size' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='int']]"
		[Register ("torrent_info_piece_size", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;I)I", "")]
		public static unsafe int Torrent_info_piece_size (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, int p2)
		{
			const string __id = "torrent_info_piece_size.(JLcom/frostwire/jlibtorrent/swig/torrent_info;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_priv' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_priv", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Z", "")]
		public static unsafe bool Torrent_info_priv (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_priv.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_remap_files' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.file_storage']]"
		[Register ("torrent_info_remap_files", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;JLcom/frostwire/jlibtorrent/swig/file_storage;)V", "")]
		public static unsafe void Torrent_info_remap_files (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, long p2, global::FrostWire.Libtorrent.Swig.File_storage p3)
		{
			const string __id = "torrent_info_remap_files.(JLcom/frostwire/jlibtorrent/swig/torrent_info;JLcom/frostwire/jlibtorrent/swig/file_storage;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_rename_file' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='int'] and parameter[4][@type='java.lang.String']]"
		[Register ("torrent_info_rename_file", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;ILjava/lang/String;)V", "")]
		public static unsafe void Torrent_info_rename_file (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, int p2, string p3)
		{
			const string __id = "torrent_info_rename_file.(JLcom/frostwire/jlibtorrent/swig/torrent_info;ILjava/lang/String;)V";
			IntPtr native_p3 = JNIEnv.NewString (p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (native_p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_set_merkle_tree' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash_vector']]"
		[Register ("torrent_info_set_merkle_tree", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;)V", "")]
		public static unsafe void Torrent_info_set_merkle_tree (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash_vector p3)
		{
			const string __id = "torrent_info_set_merkle_tree.(JLcom/frostwire/jlibtorrent/swig/torrent_info;JLcom/frostwire/jlibtorrent/swig/sha1_hash_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_set_web_seeds' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.web_seed_entry_vector']]"
		[Register ("torrent_info_set_web_seeds", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;)V", "")]
		public static unsafe void Torrent_info_set_web_seeds (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1, long p2, global::FrostWire.Libtorrent.Swig.Web_seed_entry_vector p3)
		{
			const string __id = "torrent_info_set_web_seeds.(JLcom/frostwire/jlibtorrent/swig/torrent_info;JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_similar_torrents' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_similar_torrents", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J", "")]
		public static unsafe long Torrent_info_similar_torrents (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_similar_torrents.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_ssl_cert' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_ssl_cert", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J", "")]
		public static unsafe long Torrent_info_ssl_cert (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_ssl_cert.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_total_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_total_size", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J", "")]
		public static unsafe long Torrent_info_total_size (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_total_size.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_trackers' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_trackers", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J", "")]
		public static unsafe long Torrent_info_trackers (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_trackers.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_info_web_seeds' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_info']]"
		[Register ("torrent_info_web_seeds", "(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J", "")]
		public static unsafe long Torrent_info_web_seeds (long p0, global::FrostWire.Libtorrent.Swig.Torrent_info p1)
		{
			const string __id = "torrent_info_web_seeds.(JLcom/frostwire/jlibtorrent/swig/torrent_info;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_log_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("torrent_log_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Torrent_log_alert_SWIGUpcast (long p0)
		{
			const string __id = "torrent_log_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_log_alert_alert_type_get' and count(parameter)=0]"
		[Register ("torrent_log_alert_alert_type_get", "()I", "")]
		public static unsafe int Torrent_log_alert_alert_type_get ()
		{
			const string __id = "torrent_log_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_log_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_log_alert']]"
		[Register ("torrent_log_alert_category", "(JLcom/frostwire/jlibtorrent/swig/torrent_log_alert;)J", "")]
		public static unsafe long Torrent_log_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Torrent_log_alert p1)
		{
			const string __id = "torrent_log_alert_category.(JLcom/frostwire/jlibtorrent/swig/torrent_log_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_log_alert_log_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_log_alert']]"
		[Register ("torrent_log_alert_log_message", "(JLcom/frostwire/jlibtorrent/swig/torrent_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_log_alert_log_message (long p0, global::FrostWire.Libtorrent.Swig.Torrent_log_alert p1)
		{
			const string __id = "torrent_log_alert_log_message.(JLcom/frostwire/jlibtorrent/swig/torrent_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_log_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_log_alert']]"
		[Register ("torrent_log_alert_message", "(JLcom/frostwire/jlibtorrent/swig/torrent_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_log_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Torrent_log_alert p1)
		{
			const string __id = "torrent_log_alert_message.(JLcom/frostwire/jlibtorrent/swig/torrent_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_log_alert_priority_get' and count(parameter)=0]"
		[Register ("torrent_log_alert_priority_get", "()I", "")]
		public static unsafe int Torrent_log_alert_priority_get ()
		{
			const string __id = "torrent_log_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_log_alert_static_category_get' and count(parameter)=0]"
		[Register ("torrent_log_alert_static_category_get", "()J", "")]
		public static unsafe long Torrent_log_alert_static_category_get ()
		{
			const string __id = "torrent_log_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_log_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_log_alert']]"
		[Register ("torrent_log_alert_type", "(JLcom/frostwire/jlibtorrent/swig/torrent_log_alert;)I", "")]
		public static unsafe int Torrent_log_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Torrent_log_alert p1)
		{
			const string __id = "torrent_log_alert_type.(JLcom/frostwire/jlibtorrent/swig/torrent_log_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_log_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_log_alert']]"
		[Register ("torrent_log_alert_what", "(JLcom/frostwire/jlibtorrent/swig/torrent_log_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_log_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Torrent_log_alert p1)
		{
			const string __id = "torrent_log_alert_what.(JLcom/frostwire/jlibtorrent/swig/torrent_log_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_need_cert_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("torrent_need_cert_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Torrent_need_cert_alert_SWIGUpcast (long p0)
		{
			const string __id = "torrent_need_cert_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_need_cert_alert_alert_type_get' and count(parameter)=0]"
		[Register ("torrent_need_cert_alert_alert_type_get", "()I", "")]
		public static unsafe int Torrent_need_cert_alert_alert_type_get ()
		{
			const string __id = "torrent_need_cert_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_need_cert_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_need_cert_alert']]"
		[Register ("torrent_need_cert_alert_category", "(JLcom/frostwire/jlibtorrent/swig/torrent_need_cert_alert;)J", "")]
		public static unsafe long Torrent_need_cert_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Torrent_need_cert_alert p1)
		{
			const string __id = "torrent_need_cert_alert_category.(JLcom/frostwire/jlibtorrent/swig/torrent_need_cert_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_need_cert_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_need_cert_alert']]"
		[Register ("torrent_need_cert_alert_message", "(JLcom/frostwire/jlibtorrent/swig/torrent_need_cert_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_need_cert_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Torrent_need_cert_alert p1)
		{
			const string __id = "torrent_need_cert_alert_message.(JLcom/frostwire/jlibtorrent/swig/torrent_need_cert_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_need_cert_alert_priority_get' and count(parameter)=0]"
		[Register ("torrent_need_cert_alert_priority_get", "()I", "")]
		public static unsafe int Torrent_need_cert_alert_priority_get ()
		{
			const string __id = "torrent_need_cert_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_need_cert_alert_static_category_get' and count(parameter)=0]"
		[Register ("torrent_need_cert_alert_static_category_get", "()J", "")]
		public static unsafe long Torrent_need_cert_alert_static_category_get ()
		{
			const string __id = "torrent_need_cert_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_need_cert_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_need_cert_alert']]"
		[Register ("torrent_need_cert_alert_type", "(JLcom/frostwire/jlibtorrent/swig/torrent_need_cert_alert;)I", "")]
		public static unsafe int Torrent_need_cert_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Torrent_need_cert_alert p1)
		{
			const string __id = "torrent_need_cert_alert_type.(JLcom/frostwire/jlibtorrent/swig/torrent_need_cert_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_need_cert_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_need_cert_alert']]"
		[Register ("torrent_need_cert_alert_what", "(JLcom/frostwire/jlibtorrent/swig/torrent_need_cert_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_need_cert_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Torrent_need_cert_alert p1)
		{
			const string __id = "torrent_need_cert_alert_what.(JLcom/frostwire/jlibtorrent/swig/torrent_need_cert_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_paused_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("torrent_paused_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Torrent_paused_alert_SWIGUpcast (long p0)
		{
			const string __id = "torrent_paused_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_paused_alert_alert_type_get' and count(parameter)=0]"
		[Register ("torrent_paused_alert_alert_type_get", "()I", "")]
		public static unsafe int Torrent_paused_alert_alert_type_get ()
		{
			const string __id = "torrent_paused_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_paused_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_paused_alert']]"
		[Register ("torrent_paused_alert_category", "(JLcom/frostwire/jlibtorrent/swig/torrent_paused_alert;)J", "")]
		public static unsafe long Torrent_paused_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Torrent_paused_alert p1)
		{
			const string __id = "torrent_paused_alert_category.(JLcom/frostwire/jlibtorrent/swig/torrent_paused_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_paused_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_paused_alert']]"
		[Register ("torrent_paused_alert_message", "(JLcom/frostwire/jlibtorrent/swig/torrent_paused_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_paused_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Torrent_paused_alert p1)
		{
			const string __id = "torrent_paused_alert_message.(JLcom/frostwire/jlibtorrent/swig/torrent_paused_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_paused_alert_priority_get' and count(parameter)=0]"
		[Register ("torrent_paused_alert_priority_get", "()I", "")]
		public static unsafe int Torrent_paused_alert_priority_get ()
		{
			const string __id = "torrent_paused_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_paused_alert_static_category_get' and count(parameter)=0]"
		[Register ("torrent_paused_alert_static_category_get", "()J", "")]
		public static unsafe long Torrent_paused_alert_static_category_get ()
		{
			const string __id = "torrent_paused_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_paused_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_paused_alert']]"
		[Register ("torrent_paused_alert_type", "(JLcom/frostwire/jlibtorrent/swig/torrent_paused_alert;)I", "")]
		public static unsafe int Torrent_paused_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Torrent_paused_alert p1)
		{
			const string __id = "torrent_paused_alert_type.(JLcom/frostwire/jlibtorrent/swig/torrent_paused_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_paused_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_paused_alert']]"
		[Register ("torrent_paused_alert_what", "(JLcom/frostwire/jlibtorrent/swig/torrent_paused_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_paused_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Torrent_paused_alert p1)
		{
			const string __id = "torrent_paused_alert_what.(JLcom/frostwire/jlibtorrent/swig/torrent_paused_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_removed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("torrent_removed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Torrent_removed_alert_SWIGUpcast (long p0)
		{
			const string __id = "torrent_removed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_removed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("torrent_removed_alert_alert_type_get", "()I", "")]
		public static unsafe int Torrent_removed_alert_alert_type_get ()
		{
			const string __id = "torrent_removed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_removed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_removed_alert']]"
		[Register ("torrent_removed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/torrent_removed_alert;)J", "")]
		public static unsafe long Torrent_removed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Torrent_removed_alert p1)
		{
			const string __id = "torrent_removed_alert_category.(JLcom/frostwire/jlibtorrent/swig/torrent_removed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_removed_alert_info_hash_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_removed_alert']]"
		[Register ("torrent_removed_alert_info_hash_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_removed_alert;)J", "")]
		public static unsafe long Torrent_removed_alert_info_hash_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_removed_alert p1)
		{
			const string __id = "torrent_removed_alert_info_hash_get.(JLcom/frostwire/jlibtorrent/swig/torrent_removed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_removed_alert_info_hash_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_removed_alert'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("torrent_removed_alert_info_hash_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_removed_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Torrent_removed_alert_info_hash_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_removed_alert p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "torrent_removed_alert_info_hash_set.(JLcom/frostwire/jlibtorrent/swig/torrent_removed_alert;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_removed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_removed_alert']]"
		[Register ("torrent_removed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/torrent_removed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_removed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Torrent_removed_alert p1)
		{
			const string __id = "torrent_removed_alert_message.(JLcom/frostwire/jlibtorrent/swig/torrent_removed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_removed_alert_priority_get' and count(parameter)=0]"
		[Register ("torrent_removed_alert_priority_get", "()I", "")]
		public static unsafe int Torrent_removed_alert_priority_get ()
		{
			const string __id = "torrent_removed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_removed_alert_static_category_get' and count(parameter)=0]"
		[Register ("torrent_removed_alert_static_category_get", "()J", "")]
		public static unsafe long Torrent_removed_alert_static_category_get ()
		{
			const string __id = "torrent_removed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_removed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_removed_alert']]"
		[Register ("torrent_removed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/torrent_removed_alert;)I", "")]
		public static unsafe int Torrent_removed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Torrent_removed_alert p1)
		{
			const string __id = "torrent_removed_alert_type.(JLcom/frostwire/jlibtorrent/swig/torrent_removed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_removed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_removed_alert']]"
		[Register ("torrent_removed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/torrent_removed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_removed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Torrent_removed_alert p1)
		{
			const string __id = "torrent_removed_alert_what.(JLcom/frostwire/jlibtorrent/swig/torrent_removed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_resumed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("torrent_resumed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Torrent_resumed_alert_SWIGUpcast (long p0)
		{
			const string __id = "torrent_resumed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_resumed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("torrent_resumed_alert_alert_type_get", "()I", "")]
		public static unsafe int Torrent_resumed_alert_alert_type_get ()
		{
			const string __id = "torrent_resumed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_resumed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_resumed_alert']]"
		[Register ("torrent_resumed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/torrent_resumed_alert;)J", "")]
		public static unsafe long Torrent_resumed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Torrent_resumed_alert p1)
		{
			const string __id = "torrent_resumed_alert_category.(JLcom/frostwire/jlibtorrent/swig/torrent_resumed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_resumed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_resumed_alert']]"
		[Register ("torrent_resumed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/torrent_resumed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_resumed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Torrent_resumed_alert p1)
		{
			const string __id = "torrent_resumed_alert_message.(JLcom/frostwire/jlibtorrent/swig/torrent_resumed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_resumed_alert_priority_get' and count(parameter)=0]"
		[Register ("torrent_resumed_alert_priority_get", "()I", "")]
		public static unsafe int Torrent_resumed_alert_priority_get ()
		{
			const string __id = "torrent_resumed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_resumed_alert_static_category_get' and count(parameter)=0]"
		[Register ("torrent_resumed_alert_static_category_get", "()J", "")]
		public static unsafe long Torrent_resumed_alert_static_category_get ()
		{
			const string __id = "torrent_resumed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_resumed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_resumed_alert']]"
		[Register ("torrent_resumed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/torrent_resumed_alert;)I", "")]
		public static unsafe int Torrent_resumed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Torrent_resumed_alert p1)
		{
			const string __id = "torrent_resumed_alert_type.(JLcom/frostwire/jlibtorrent/swig/torrent_resumed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_resumed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_resumed_alert']]"
		[Register ("torrent_resumed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/torrent_resumed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_resumed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Torrent_resumed_alert p1)
		{
			const string __id = "torrent_resumed_alert_what.(JLcom/frostwire/jlibtorrent/swig/torrent_resumed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_added_time_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_added_time_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_added_time_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_added_time_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_added_time_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_added_time_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_added_time_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_added_time_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_all_time_download_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_all_time_download_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_all_time_download_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_all_time_download_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_all_time_download_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_all_time_download_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_all_time_download_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_all_time_download_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_all_time_upload_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_all_time_upload_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_all_time_upload_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_all_time_upload_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_all_time_upload_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_all_time_upload_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_all_time_upload_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_all_time_upload_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_announcing_to_dht_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_announcing_to_dht_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z", "")]
		public static unsafe bool Torrent_status_announcing_to_dht_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_announcing_to_dht_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_announcing_to_dht_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='boolean']]"
		[Register ("torrent_status_announcing_to_dht_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V", "")]
		public static unsafe void Torrent_status_announcing_to_dht_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, bool p2)
		{
			const string __id = "torrent_status_announcing_to_dht_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_announcing_to_lsd_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_announcing_to_lsd_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z", "")]
		public static unsafe bool Torrent_status_announcing_to_lsd_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_announcing_to_lsd_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_announcing_to_lsd_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='boolean']]"
		[Register ("torrent_status_announcing_to_lsd_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V", "")]
		public static unsafe void Torrent_status_announcing_to_lsd_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, bool p2)
		{
			const string __id = "torrent_status_announcing_to_lsd_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_announcing_to_trackers_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_announcing_to_trackers_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z", "")]
		public static unsafe bool Torrent_status_announcing_to_trackers_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_announcing_to_trackers_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_announcing_to_trackers_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='boolean']]"
		[Register ("torrent_status_announcing_to_trackers_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V", "")]
		public static unsafe void Torrent_status_announcing_to_trackers_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, bool p2)
		{
			const string __id = "torrent_status_announcing_to_trackers_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_block_size_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_block_size_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_block_size_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_block_size_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_block_size_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_block_size_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_block_size_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_block_size_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_checking_files_get' and count(parameter)=0]"
		[Register ("torrent_status_checking_files_get", "()I", "")]
		public static unsafe int Torrent_status_checking_files_get ()
		{
			const string __id = "torrent_status_checking_files_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_completed_time_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_completed_time_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_completed_time_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_completed_time_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_completed_time_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_completed_time_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_completed_time_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_completed_time_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_connect_candidates_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_connect_candidates_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_connect_candidates_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_connect_candidates_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_connect_candidates_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_connect_candidates_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_connect_candidates_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_connect_candidates_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_connections_limit_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_connections_limit_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_connections_limit_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_connections_limit_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_connections_limit_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_connections_limit_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_connections_limit_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_connections_limit_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_current_tracker_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_current_tracker_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_status_current_tracker_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_current_tracker_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_current_tracker_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='java.lang.String']]"
		[Register ("torrent_status_current_tracker_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_status_current_tracker_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, string p2)
		{
			const string __id = "torrent_status_current_tracker_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_distributed_copies_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_distributed_copies_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)F", "")]
		public static unsafe float Torrent_status_distributed_copies_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_distributed_copies_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)F";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeSingleMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_distributed_copies_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='float']]"
		[Register ("torrent_status_distributed_copies_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;F)V", "")]
		public static unsafe void Torrent_status_distributed_copies_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, float p2)
		{
			const string __id = "torrent_status_distributed_copies_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;F)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_distributed_fraction_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_distributed_fraction_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_distributed_fraction_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_distributed_fraction_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_distributed_fraction_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_distributed_fraction_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_distributed_fraction_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_distributed_fraction_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_distributed_full_copies_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_distributed_full_copies_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_distributed_full_copies_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_distributed_full_copies_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_distributed_full_copies_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_distributed_full_copies_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_distributed_full_copies_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_distributed_full_copies_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_down_bandwidth_queue_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_down_bandwidth_queue_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_down_bandwidth_queue_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_down_bandwidth_queue_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_down_bandwidth_queue_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_down_bandwidth_queue_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_down_bandwidth_queue_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_down_bandwidth_queue_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_download_payload_rate_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_download_payload_rate_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_download_payload_rate_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_download_payload_rate_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_download_payload_rate_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_download_payload_rate_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_download_payload_rate_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_download_payload_rate_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_download_rate_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_download_rate_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_download_rate_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_download_rate_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_download_rate_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_download_rate_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_download_rate_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_download_rate_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_errc_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_errc_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_errc_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_errc_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_errc_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.error_code']]"
		[Register ("torrent_status_errc_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;JLcom/frostwire/jlibtorrent/swig/error_code;)V", "")]
		public static unsafe void Torrent_status_errc_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2, global::FrostWire.Libtorrent.Swig.Error_code p3)
		{
			const string __id = "torrent_status_errc_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;JLcom/frostwire/jlibtorrent/swig/error_code;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_error_file_exception_get' and count(parameter)=0]"
		[Register ("torrent_status_error_file_exception_get", "()I", "")]
		public static unsafe int Torrent_status_error_file_exception_get ()
		{
			const string __id = "torrent_status_error_file_exception_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_error_file_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_error_file_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_error_file_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_error_file_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_error_file_none_get' and count(parameter)=0]"
		[Register ("torrent_status_error_file_none_get", "()I", "")]
		public static unsafe int Torrent_status_error_file_none_get ()
		{
			const string __id = "torrent_status_error_file_none_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_error_file_partfile_get' and count(parameter)=0]"
		[Register ("torrent_status_error_file_partfile_get", "()I", "")]
		public static unsafe int Torrent_status_error_file_partfile_get ()
		{
			const string __id = "torrent_status_error_file_partfile_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_error_file_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_error_file_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_error_file_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_error_file_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_error_file_ssl_ctx_get' and count(parameter)=0]"
		[Register ("torrent_status_error_file_ssl_ctx_get", "()I", "")]
		public static unsafe int Torrent_status_error_file_ssl_ctx_get ()
		{
			const string __id = "torrent_status_error_file_ssl_ctx_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_flags_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_flags_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_flags_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_flags_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_flags_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_flags_t']]"
		[Register ("torrent_status_flags_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)V", "")]
		public static unsafe void Torrent_status_flags_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_flags_t p3)
		{
			const string __id = "torrent_status_flags_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;JLcom/frostwire/jlibtorrent/swig/torrent_flags_t;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_get_active_duration' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_get_active_duration", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_get_active_duration (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_get_active_duration.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_get_finished_duration' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_get_finished_duration", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_get_finished_duration (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_get_finished_duration.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_get_last_download' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_get_last_download", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_get_last_download (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_get_last_download.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_get_last_upload' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_get_last_upload", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_get_last_upload (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_get_last_upload.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_get_next_announce' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_get_next_announce", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_get_next_announce (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_get_next_announce.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_get_queue_position' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_get_queue_position", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_get_queue_position (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_get_queue_position.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_get_seeding_duration' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_get_seeding_duration", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_get_seeding_duration (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_get_seeding_duration.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_handle_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_handle_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_handle_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_handle_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_handle_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_handle']]"
		[Register ("torrent_status_handle_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V", "")]
		public static unsafe void Torrent_status_handle_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_handle p3)
		{
			const string __id = "torrent_status_handle_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;JLcom/frostwire/jlibtorrent/swig/torrent_handle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_has_incoming_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_has_incoming_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z", "")]
		public static unsafe bool Torrent_status_has_incoming_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_has_incoming_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_has_incoming_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='boolean']]"
		[Register ("torrent_status_has_incoming_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V", "")]
		public static unsafe void Torrent_status_has_incoming_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, bool p2)
		{
			const string __id = "torrent_status_has_incoming_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_has_metadata_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_has_metadata_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z", "")]
		public static unsafe bool Torrent_status_has_metadata_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_has_metadata_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_has_metadata_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='boolean']]"
		[Register ("torrent_status_has_metadata_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V", "")]
		public static unsafe void Torrent_status_has_metadata_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, bool p2)
		{
			const string __id = "torrent_status_has_metadata_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_info_hash_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_info_hash_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_info_hash_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_info_hash_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_info_hash_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.sha1_hash']]"
		[Register ("torrent_status_info_hash_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V", "")]
		public static unsafe void Torrent_status_info_hash_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2, global::FrostWire.Libtorrent.Swig.Sha1_hash p3)
		{
			const string __id = "torrent_status_info_hash_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;JLcom/frostwire/jlibtorrent/swig/sha1_hash;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_is_finished_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_is_finished_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z", "")]
		public static unsafe bool Torrent_status_is_finished_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_is_finished_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_is_finished_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='boolean']]"
		[Register ("torrent_status_is_finished_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V", "")]
		public static unsafe void Torrent_status_is_finished_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, bool p2)
		{
			const string __id = "torrent_status_is_finished_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_is_seeding_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_is_seeding_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z", "")]
		public static unsafe bool Torrent_status_is_seeding_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_is_seeding_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_is_seeding_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='boolean']]"
		[Register ("torrent_status_is_seeding_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V", "")]
		public static unsafe void Torrent_status_is_seeding_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, bool p2)
		{
			const string __id = "torrent_status_is_seeding_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_last_seen_complete_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_last_seen_complete_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_last_seen_complete_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_last_seen_complete_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_last_seen_complete_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_last_seen_complete_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_last_seen_complete_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_last_seen_complete_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_list_peers_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_list_peers_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_list_peers_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_list_peers_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_list_peers_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_list_peers_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_list_peers_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_list_peers_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_list_seeds_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_list_seeds_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_list_seeds_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_list_seeds_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_list_seeds_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_list_seeds_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_list_seeds_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_list_seeds_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_moving_storage_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_moving_storage_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z", "")]
		public static unsafe bool Torrent_status_moving_storage_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_moving_storage_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_moving_storage_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='boolean']]"
		[Register ("torrent_status_moving_storage_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V", "")]
		public static unsafe void Torrent_status_moving_storage_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, bool p2)
		{
			const string __id = "torrent_status_moving_storage_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_name_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_name_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_status_name_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_name_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_name_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='java.lang.String']]"
		[Register ("torrent_status_name_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_status_name_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, string p2)
		{
			const string __id = "torrent_status_name_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_need_save_resume_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_need_save_resume_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z", "")]
		public static unsafe bool Torrent_status_need_save_resume_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_need_save_resume_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_need_save_resume_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='boolean']]"
		[Register ("torrent_status_need_save_resume_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V", "")]
		public static unsafe void Torrent_status_need_save_resume_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, bool p2)
		{
			const string __id = "torrent_status_need_save_resume_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_num_complete_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_num_complete_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_num_complete_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_num_complete_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_num_complete_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_num_complete_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_num_complete_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_num_complete_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_num_connections_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_num_connections_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_num_connections_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_num_connections_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_num_connections_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_num_connections_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_num_connections_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_num_connections_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_num_incomplete_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_num_incomplete_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_num_incomplete_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_num_incomplete_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_num_incomplete_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_num_incomplete_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_num_incomplete_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_num_incomplete_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_num_peers_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_num_peers_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_num_peers_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_num_peers_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_num_peers_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_num_peers_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_num_peers_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_num_peers_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_num_pieces_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_num_pieces_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_num_pieces_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_num_pieces_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_num_pieces_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_num_pieces_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_num_pieces_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_num_pieces_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_num_seeds_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_num_seeds_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_num_seeds_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_num_seeds_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_num_seeds_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_num_seeds_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_num_seeds_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_num_seeds_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_num_uploads_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_num_uploads_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_num_uploads_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_num_uploads_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_num_uploads_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_num_uploads_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_num_uploads_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_num_uploads_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_op_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_op_eq", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z", "")]
		public static unsafe bool Torrent_status_op_eq (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_status p3)
		{
			const string __id = "torrent_status_op_eq.(JLcom/frostwire/jlibtorrent/swig/torrent_status;JLcom/frostwire/jlibtorrent/swig/torrent_status;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_pieces_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_pieces_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_pieces_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_pieces_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_pieces_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("torrent_status_pieces_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V", "")]
		public static unsafe void Torrent_status_pieces_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p3)
		{
			const string __id = "torrent_status_pieces_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_progress_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_progress_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)F", "")]
		public static unsafe float Torrent_status_progress_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_progress_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)F";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeSingleMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_progress_ppm_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_progress_ppm_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_progress_ppm_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_progress_ppm_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_progress_ppm_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_progress_ppm_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_progress_ppm_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_progress_ppm_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_progress_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='float']]"
		[Register ("torrent_status_progress_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;F)V", "")]
		public static unsafe void Torrent_status_progress_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, float p2)
		{
			const string __id = "torrent_status_progress_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;F)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_save_path_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_save_path_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Ljava/lang/String;", "")]
		public static unsafe string Torrent_status_save_path_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_save_path_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_save_path_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='java.lang.String']]"
		[Register ("torrent_status_save_path_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;Ljava/lang/String;)V", "")]
		public static unsafe void Torrent_status_save_path_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, string p2)
		{
			const string __id = "torrent_status_save_path_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_seed_rank_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_seed_rank_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_seed_rank_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_seed_rank_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_seed_rank_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_seed_rank_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_seed_rank_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_seed_rank_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_state_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_state_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_state_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_state_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_state_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_state_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_state_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_state_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_storage_mode_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_storage_mode_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_storage_mode_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_storage_mode_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_storage_mode_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_storage_mode_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_storage_mode_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_storage_mode_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_torrent_file_ptr' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_torrent_file_ptr", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_torrent_file_ptr (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_torrent_file_ptr.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_done_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_total_done_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_total_done_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_total_done_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_done_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_total_done_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_total_done_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_total_done_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_download_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_total_download_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_total_download_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_total_download_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_download_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_total_download_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_total_download_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_total_download_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_failed_bytes_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_total_failed_bytes_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_total_failed_bytes_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_total_failed_bytes_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_failed_bytes_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_total_failed_bytes_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_total_failed_bytes_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_total_failed_bytes_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_total_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_total_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_total_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_payload_download_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_total_payload_download_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_total_payload_download_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_total_payload_download_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_payload_download_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_total_payload_download_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_total_payload_download_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_total_payload_download_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_payload_upload_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_total_payload_upload_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_total_payload_upload_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_total_payload_upload_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_payload_upload_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_total_payload_upload_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_total_payload_upload_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_total_payload_upload_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_redundant_bytes_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_total_redundant_bytes_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_total_redundant_bytes_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_total_redundant_bytes_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_redundant_bytes_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_total_redundant_bytes_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_total_redundant_bytes_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_total_redundant_bytes_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_total_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_total_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_total_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_upload_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_total_upload_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_total_upload_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_total_upload_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_upload_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_total_upload_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_total_upload_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_total_upload_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_wanted_done_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_total_wanted_done_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_total_wanted_done_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_total_wanted_done_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_wanted_done_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_total_wanted_done_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_total_wanted_done_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_total_wanted_done_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_wanted_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_total_wanted_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_total_wanted_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_total_wanted_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_total_wanted_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long']]"
		[Register ("torrent_status_total_wanted_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V", "")]
		public static unsafe void Torrent_status_total_wanted_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2)
		{
			const string __id = "torrent_status_total_wanted_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_up_bandwidth_queue_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_up_bandwidth_queue_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_up_bandwidth_queue_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_up_bandwidth_queue_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_up_bandwidth_queue_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_up_bandwidth_queue_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_up_bandwidth_queue_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_up_bandwidth_queue_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_upload_payload_rate_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_upload_payload_rate_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_upload_payload_rate_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_upload_payload_rate_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_upload_payload_rate_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_upload_payload_rate_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_upload_payload_rate_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_upload_payload_rate_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_upload_rate_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_upload_rate_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_upload_rate_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_upload_rate_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_upload_rate_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_upload_rate_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_upload_rate_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_upload_rate_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_uploads_limit_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_uploads_limit_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I", "")]
		public static unsafe int Torrent_status_uploads_limit_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_uploads_limit_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_uploads_limit_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='int']]"
		[Register ("torrent_status_uploads_limit_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V", "")]
		public static unsafe void Torrent_status_uploads_limit_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, int p2)
		{
			const string __id = "torrent_status_uploads_limit_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status_vector']]"
		[Register ("torrent_status_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;)J", "")]
		public static unsafe long Torrent_status_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status_vector p1)
		{
			const string __id = "torrent_status_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status_vector']]"
		[Register ("torrent_status_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;)V", "")]
		public static unsafe void Torrent_status_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status_vector p1)
		{
			const string __id = "torrent_status_vector_clear.(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status_vector']]"
		[Register ("torrent_status_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;)Z", "")]
		public static unsafe bool Torrent_status_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status_vector p1)
		{
			const string __id = "torrent_status_vector_empty.(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status_vector'] and parameter[3][@type='int']]"
		[Register ("torrent_status_vector_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;I)J", "")]
		public static unsafe long Torrent_status_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status_vector p1, int p2)
		{
			const string __id = "torrent_status_vector_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;JLcom/frostwire/jlibtorrent/swig/torrent_status;)V", "")]
		public static unsafe void Torrent_status_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Torrent_status p3)
		{
			const string __id = "torrent_status_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;JLcom/frostwire/jlibtorrent/swig/torrent_status;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status_vector'] and parameter[3][@type='long']]"
		[Register ("torrent_status_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;J)V", "")]
		public static unsafe void Torrent_status_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status_vector p1, long p2)
		{
			const string __id = "torrent_status_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_vector_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;IJLcom/frostwire/jlibtorrent/swig/torrent_status;)V", "")]
		public static unsafe void Torrent_status_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Torrent_status p4)
		{
			const string __id = "torrent_status_vector_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;IJLcom/frostwire/jlibtorrent/swig/torrent_status;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status_vector']]"
		[Register ("torrent_status_vector_size", "(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;)J", "")]
		public static unsafe long Torrent_status_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status_vector p1)
		{
			const string __id = "torrent_status_vector_size.(JLcom/frostwire/jlibtorrent/swig/torrent_status_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_verified_pieces_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status']]"
		[Register ("torrent_status_verified_pieces_get", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J", "")]
		public static unsafe long Torrent_status_verified_pieces_get (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1)
		{
			const string __id = "torrent_status_verified_pieces_get.(JLcom/frostwire/jlibtorrent/swig/torrent_status;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='torrent_status_verified_pieces_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.torrent_status'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.piece_index_bitfield']]"
		[Register ("torrent_status_verified_pieces_set", "(JLcom/frostwire/jlibtorrent/swig/torrent_status;JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V", "")]
		public static unsafe void Torrent_status_verified_pieces_set (long p0, global::FrostWire.Libtorrent.Swig.Torrent_status p1, long p2, global::FrostWire.Libtorrent.Swig.Piece_index_bitfield p3)
		{
			const string __id = "torrent_status_verified_pieces_set.(JLcom/frostwire/jlibtorrent/swig/torrent_status;JLcom/frostwire/jlibtorrent/swig/piece_index_bitfield;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("tracker_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Tracker_alert_SWIGUpcast (long p0)
		{
			const string __id = "tracker_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_alert_get_local_endpoint' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_alert']]"
		[Register ("tracker_alert_get_local_endpoint", "(JLcom/frostwire/jlibtorrent/swig/tracker_alert;)J", "")]
		public static unsafe long Tracker_alert_get_local_endpoint (long p0, global::FrostWire.Libtorrent.Swig.Tracker_alert p1)
		{
			const string __id = "tracker_alert_get_local_endpoint.(JLcom/frostwire/jlibtorrent/swig/tracker_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_alert']]"
		[Register ("tracker_alert_message", "(JLcom/frostwire/jlibtorrent/swig/tracker_alert;)Ljava/lang/String;", "")]
		public static unsafe string Tracker_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Tracker_alert p1)
		{
			const string __id = "tracker_alert_message.(JLcom/frostwire/jlibtorrent/swig/tracker_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_alert_tracker_url' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_alert']]"
		[Register ("tracker_alert_tracker_url", "(JLcom/frostwire/jlibtorrent/swig/tracker_alert;)Ljava/lang/String;", "")]
		public static unsafe string Tracker_alert_tracker_url (long p0, global::FrostWire.Libtorrent.Swig.Tracker_alert p1)
		{
			const string __id = "tracker_alert_tracker_url.(JLcom/frostwire/jlibtorrent/swig/tracker_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_announce_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("tracker_announce_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Tracker_announce_alert_SWIGUpcast (long p0)
		{
			const string __id = "tracker_announce_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_announce_alert_alert_type_get' and count(parameter)=0]"
		[Register ("tracker_announce_alert_alert_type_get", "()I", "")]
		public static unsafe int Tracker_announce_alert_alert_type_get ()
		{
			const string __id = "tracker_announce_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_announce_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_announce_alert']]"
		[Register ("tracker_announce_alert_category", "(JLcom/frostwire/jlibtorrent/swig/tracker_announce_alert;)J", "")]
		public static unsafe long Tracker_announce_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Tracker_announce_alert p1)
		{
			const string __id = "tracker_announce_alert_category.(JLcom/frostwire/jlibtorrent/swig/tracker_announce_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_announce_alert_event_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_announce_alert']]"
		[Register ("tracker_announce_alert_event_get", "(JLcom/frostwire/jlibtorrent/swig/tracker_announce_alert;)I", "")]
		public static unsafe int Tracker_announce_alert_event_get (long p0, global::FrostWire.Libtorrent.Swig.Tracker_announce_alert p1)
		{
			const string __id = "tracker_announce_alert_event_get.(JLcom/frostwire/jlibtorrent/swig/tracker_announce_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_announce_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_announce_alert']]"
		[Register ("tracker_announce_alert_message", "(JLcom/frostwire/jlibtorrent/swig/tracker_announce_alert;)Ljava/lang/String;", "")]
		public static unsafe string Tracker_announce_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Tracker_announce_alert p1)
		{
			const string __id = "tracker_announce_alert_message.(JLcom/frostwire/jlibtorrent/swig/tracker_announce_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_announce_alert_priority_get' and count(parameter)=0]"
		[Register ("tracker_announce_alert_priority_get", "()I", "")]
		public static unsafe int Tracker_announce_alert_priority_get ()
		{
			const string __id = "tracker_announce_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_announce_alert_static_category_get' and count(parameter)=0]"
		[Register ("tracker_announce_alert_static_category_get", "()J", "")]
		public static unsafe long Tracker_announce_alert_static_category_get ()
		{
			const string __id = "tracker_announce_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_announce_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_announce_alert']]"
		[Register ("tracker_announce_alert_type", "(JLcom/frostwire/jlibtorrent/swig/tracker_announce_alert;)I", "")]
		public static unsafe int Tracker_announce_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Tracker_announce_alert p1)
		{
			const string __id = "tracker_announce_alert_type.(JLcom/frostwire/jlibtorrent/swig/tracker_announce_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_announce_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_announce_alert']]"
		[Register ("tracker_announce_alert_what", "(JLcom/frostwire/jlibtorrent/swig/tracker_announce_alert;)Ljava/lang/String;", "")]
		public static unsafe string Tracker_announce_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Tracker_announce_alert p1)
		{
			const string __id = "tracker_announce_alert_what.(JLcom/frostwire/jlibtorrent/swig/tracker_announce_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_error_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("tracker_error_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Tracker_error_alert_SWIGUpcast (long p0)
		{
			const string __id = "tracker_error_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_error_alert_alert_type_get' and count(parameter)=0]"
		[Register ("tracker_error_alert_alert_type_get", "()I", "")]
		public static unsafe int Tracker_error_alert_alert_type_get ()
		{
			const string __id = "tracker_error_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_error_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_error_alert']]"
		[Register ("tracker_error_alert_category", "(JLcom/frostwire/jlibtorrent/swig/tracker_error_alert;)J", "")]
		public static unsafe long Tracker_error_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Tracker_error_alert p1)
		{
			const string __id = "tracker_error_alert_category.(JLcom/frostwire/jlibtorrent/swig/tracker_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_error_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_error_alert']]"
		[Register ("tracker_error_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/tracker_error_alert;)J", "")]
		public static unsafe long Tracker_error_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Tracker_error_alert p1)
		{
			const string __id = "tracker_error_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/tracker_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_error_alert_error_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_error_alert']]"
		[Register ("tracker_error_alert_error_message", "(JLcom/frostwire/jlibtorrent/swig/tracker_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Tracker_error_alert_error_message (long p0, global::FrostWire.Libtorrent.Swig.Tracker_error_alert p1)
		{
			const string __id = "tracker_error_alert_error_message.(JLcom/frostwire/jlibtorrent/swig/tracker_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_error_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_error_alert']]"
		[Register ("tracker_error_alert_message", "(JLcom/frostwire/jlibtorrent/swig/tracker_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Tracker_error_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Tracker_error_alert p1)
		{
			const string __id = "tracker_error_alert_message.(JLcom/frostwire/jlibtorrent/swig/tracker_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_error_alert_priority_get' and count(parameter)=0]"
		[Register ("tracker_error_alert_priority_get", "()I", "")]
		public static unsafe int Tracker_error_alert_priority_get ()
		{
			const string __id = "tracker_error_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_error_alert_static_category_get' and count(parameter)=0]"
		[Register ("tracker_error_alert_static_category_get", "()J", "")]
		public static unsafe long Tracker_error_alert_static_category_get ()
		{
			const string __id = "tracker_error_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_error_alert_times_in_row_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_error_alert']]"
		[Register ("tracker_error_alert_times_in_row_get", "(JLcom/frostwire/jlibtorrent/swig/tracker_error_alert;)I", "")]
		public static unsafe int Tracker_error_alert_times_in_row_get (long p0, global::FrostWire.Libtorrent.Swig.Tracker_error_alert p1)
		{
			const string __id = "tracker_error_alert_times_in_row_get.(JLcom/frostwire/jlibtorrent/swig/tracker_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_error_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_error_alert']]"
		[Register ("tracker_error_alert_type", "(JLcom/frostwire/jlibtorrent/swig/tracker_error_alert;)I", "")]
		public static unsafe int Tracker_error_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Tracker_error_alert p1)
		{
			const string __id = "tracker_error_alert_type.(JLcom/frostwire/jlibtorrent/swig/tracker_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_error_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_error_alert']]"
		[Register ("tracker_error_alert_what", "(JLcom/frostwire/jlibtorrent/swig/tracker_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Tracker_error_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Tracker_error_alert p1)
		{
			const string __id = "tracker_error_alert_what.(JLcom/frostwire/jlibtorrent/swig/tracker_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_reply_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("tracker_reply_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Tracker_reply_alert_SWIGUpcast (long p0)
		{
			const string __id = "tracker_reply_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_reply_alert_alert_type_get' and count(parameter)=0]"
		[Register ("tracker_reply_alert_alert_type_get", "()I", "")]
		public static unsafe int Tracker_reply_alert_alert_type_get ()
		{
			const string __id = "tracker_reply_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_reply_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_reply_alert']]"
		[Register ("tracker_reply_alert_category", "(JLcom/frostwire/jlibtorrent/swig/tracker_reply_alert;)J", "")]
		public static unsafe long Tracker_reply_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Tracker_reply_alert p1)
		{
			const string __id = "tracker_reply_alert_category.(JLcom/frostwire/jlibtorrent/swig/tracker_reply_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_reply_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_reply_alert']]"
		[Register ("tracker_reply_alert_message", "(JLcom/frostwire/jlibtorrent/swig/tracker_reply_alert;)Ljava/lang/String;", "")]
		public static unsafe string Tracker_reply_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Tracker_reply_alert p1)
		{
			const string __id = "tracker_reply_alert_message.(JLcom/frostwire/jlibtorrent/swig/tracker_reply_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_reply_alert_num_peers_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_reply_alert']]"
		[Register ("tracker_reply_alert_num_peers_get", "(JLcom/frostwire/jlibtorrent/swig/tracker_reply_alert;)I", "")]
		public static unsafe int Tracker_reply_alert_num_peers_get (long p0, global::FrostWire.Libtorrent.Swig.Tracker_reply_alert p1)
		{
			const string __id = "tracker_reply_alert_num_peers_get.(JLcom/frostwire/jlibtorrent/swig/tracker_reply_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_reply_alert_priority_get' and count(parameter)=0]"
		[Register ("tracker_reply_alert_priority_get", "()I", "")]
		public static unsafe int Tracker_reply_alert_priority_get ()
		{
			const string __id = "tracker_reply_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_reply_alert_static_category_get' and count(parameter)=0]"
		[Register ("tracker_reply_alert_static_category_get", "()J", "")]
		public static unsafe long Tracker_reply_alert_static_category_get ()
		{
			const string __id = "tracker_reply_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_reply_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_reply_alert']]"
		[Register ("tracker_reply_alert_type", "(JLcom/frostwire/jlibtorrent/swig/tracker_reply_alert;)I", "")]
		public static unsafe int Tracker_reply_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Tracker_reply_alert p1)
		{
			const string __id = "tracker_reply_alert_type.(JLcom/frostwire/jlibtorrent/swig/tracker_reply_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_reply_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_reply_alert']]"
		[Register ("tracker_reply_alert_what", "(JLcom/frostwire/jlibtorrent/swig/tracker_reply_alert;)Ljava/lang/String;", "")]
		public static unsafe string Tracker_reply_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Tracker_reply_alert p1)
		{
			const string __id = "tracker_reply_alert_what.(JLcom/frostwire/jlibtorrent/swig/tracker_reply_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_warning_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("tracker_warning_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Tracker_warning_alert_SWIGUpcast (long p0)
		{
			const string __id = "tracker_warning_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_warning_alert_alert_type_get' and count(parameter)=0]"
		[Register ("tracker_warning_alert_alert_type_get", "()I", "")]
		public static unsafe int Tracker_warning_alert_alert_type_get ()
		{
			const string __id = "tracker_warning_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_warning_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_warning_alert']]"
		[Register ("tracker_warning_alert_category", "(JLcom/frostwire/jlibtorrent/swig/tracker_warning_alert;)J", "")]
		public static unsafe long Tracker_warning_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Tracker_warning_alert p1)
		{
			const string __id = "tracker_warning_alert_category.(JLcom/frostwire/jlibtorrent/swig/tracker_warning_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_warning_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_warning_alert']]"
		[Register ("tracker_warning_alert_message", "(JLcom/frostwire/jlibtorrent/swig/tracker_warning_alert;)Ljava/lang/String;", "")]
		public static unsafe string Tracker_warning_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Tracker_warning_alert p1)
		{
			const string __id = "tracker_warning_alert_message.(JLcom/frostwire/jlibtorrent/swig/tracker_warning_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_warning_alert_priority_get' and count(parameter)=0]"
		[Register ("tracker_warning_alert_priority_get", "()I", "")]
		public static unsafe int Tracker_warning_alert_priority_get ()
		{
			const string __id = "tracker_warning_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_warning_alert_static_category_get' and count(parameter)=0]"
		[Register ("tracker_warning_alert_static_category_get", "()J", "")]
		public static unsafe long Tracker_warning_alert_static_category_get ()
		{
			const string __id = "tracker_warning_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_warning_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_warning_alert']]"
		[Register ("tracker_warning_alert_type", "(JLcom/frostwire/jlibtorrent/swig/tracker_warning_alert;)I", "")]
		public static unsafe int Tracker_warning_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Tracker_warning_alert p1)
		{
			const string __id = "tracker_warning_alert_type.(JLcom/frostwire/jlibtorrent/swig/tracker_warning_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_warning_alert_warning_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_warning_alert']]"
		[Register ("tracker_warning_alert_warning_message", "(JLcom/frostwire/jlibtorrent/swig/tracker_warning_alert;)Ljava/lang/String;", "")]
		public static unsafe string Tracker_warning_alert_warning_message (long p0, global::FrostWire.Libtorrent.Swig.Tracker_warning_alert p1)
		{
			const string __id = "tracker_warning_alert_warning_message.(JLcom/frostwire/jlibtorrent/swig/tracker_warning_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='tracker_warning_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.tracker_warning_alert']]"
		[Register ("tracker_warning_alert_what", "(JLcom/frostwire/jlibtorrent/swig/tracker_warning_alert;)Ljava/lang/String;", "")]
		public static unsafe string Tracker_warning_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Tracker_warning_alert p1)
		{
			const string __id = "tracker_warning_alert_what.(JLcom/frostwire/jlibtorrent/swig/tracker_warning_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='trackerid_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("trackerid_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Trackerid_alert_SWIGUpcast (long p0)
		{
			const string __id = "trackerid_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='trackerid_alert_alert_type_get' and count(parameter)=0]"
		[Register ("trackerid_alert_alert_type_get", "()I", "")]
		public static unsafe int Trackerid_alert_alert_type_get ()
		{
			const string __id = "trackerid_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='trackerid_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.trackerid_alert']]"
		[Register ("trackerid_alert_category", "(JLcom/frostwire/jlibtorrent/swig/trackerid_alert;)J", "")]
		public static unsafe long Trackerid_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Trackerid_alert p1)
		{
			const string __id = "trackerid_alert_category.(JLcom/frostwire/jlibtorrent/swig/trackerid_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='trackerid_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.trackerid_alert']]"
		[Register ("trackerid_alert_message", "(JLcom/frostwire/jlibtorrent/swig/trackerid_alert;)Ljava/lang/String;", "")]
		public static unsafe string Trackerid_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Trackerid_alert p1)
		{
			const string __id = "trackerid_alert_message.(JLcom/frostwire/jlibtorrent/swig/trackerid_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='trackerid_alert_priority_get' and count(parameter)=0]"
		[Register ("trackerid_alert_priority_get", "()I", "")]
		public static unsafe int Trackerid_alert_priority_get ()
		{
			const string __id = "trackerid_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='trackerid_alert_static_category_get' and count(parameter)=0]"
		[Register ("trackerid_alert_static_category_get", "()J", "")]
		public static unsafe long Trackerid_alert_static_category_get ()
		{
			const string __id = "trackerid_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='trackerid_alert_tracker_id' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.trackerid_alert']]"
		[Register ("trackerid_alert_tracker_id", "(JLcom/frostwire/jlibtorrent/swig/trackerid_alert;)Ljava/lang/String;", "")]
		public static unsafe string Trackerid_alert_tracker_id (long p0, global::FrostWire.Libtorrent.Swig.Trackerid_alert p1)
		{
			const string __id = "trackerid_alert_tracker_id.(JLcom/frostwire/jlibtorrent/swig/trackerid_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='trackerid_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.trackerid_alert']]"
		[Register ("trackerid_alert_type", "(JLcom/frostwire/jlibtorrent/swig/trackerid_alert;)I", "")]
		public static unsafe int Trackerid_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Trackerid_alert p1)
		{
			const string __id = "trackerid_alert_type.(JLcom/frostwire/jlibtorrent/swig/trackerid_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='trackerid_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.trackerid_alert']]"
		[Register ("trackerid_alert_what", "(JLcom/frostwire/jlibtorrent/swig/trackerid_alert;)Ljava/lang/String;", "")]
		public static unsafe string Trackerid_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Trackerid_alert p1)
		{
			const string __id = "trackerid_alert_what.(JLcom/frostwire/jlibtorrent/swig/trackerid_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_endpoint_address' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_endpoint']]"
		[Register ("udp_endpoint_address", "(JLcom/frostwire/jlibtorrent/swig/udp_endpoint;)J", "")]
		public static unsafe long Udp_endpoint_address (long p0, global::FrostWire.Libtorrent.Swig.Udp_endpoint p1)
		{
			const string __id = "udp_endpoint_address.(JLcom/frostwire/jlibtorrent/swig/udp_endpoint;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_endpoint_port' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_endpoint']]"
		[Register ("udp_endpoint_port", "(JLcom/frostwire/jlibtorrent/swig/udp_endpoint;)I", "")]
		public static unsafe int Udp_endpoint_port (long p0, global::FrostWire.Libtorrent.Swig.Udp_endpoint p1)
		{
			const string __id = "udp_endpoint_port.(JLcom/frostwire/jlibtorrent/swig/udp_endpoint;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_endpoint_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_endpoint_vector']]"
		[Register ("udp_endpoint_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;)J", "")]
		public static unsafe long Udp_endpoint_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Udp_endpoint_vector p1)
		{
			const string __id = "udp_endpoint_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_endpoint_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_endpoint_vector']]"
		[Register ("udp_endpoint_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;)V", "")]
		public static unsafe void Udp_endpoint_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Udp_endpoint_vector p1)
		{
			const string __id = "udp_endpoint_vector_clear.(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_endpoint_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_endpoint_vector']]"
		[Register ("udp_endpoint_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;)Z", "")]
		public static unsafe bool Udp_endpoint_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Udp_endpoint_vector p1)
		{
			const string __id = "udp_endpoint_vector_empty.(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_endpoint_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_endpoint_vector'] and parameter[3][@type='int']]"
		[Register ("udp_endpoint_vector_get", "(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;I)J", "")]
		public static unsafe long Udp_endpoint_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Udp_endpoint_vector p1, int p2)
		{
			const string __id = "udp_endpoint_vector_get.(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_endpoint_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_endpoint_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.udp_endpoint']]"
		[Register ("udp_endpoint_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;)V", "")]
		public static unsafe void Udp_endpoint_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Udp_endpoint_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Udp_endpoint p3)
		{
			const string __id = "udp_endpoint_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;JLcom/frostwire/jlibtorrent/swig/udp_endpoint;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_endpoint_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_endpoint_vector'] and parameter[3][@type='long']]"
		[Register ("udp_endpoint_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;J)V", "")]
		public static unsafe void Udp_endpoint_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Udp_endpoint_vector p1, long p2)
		{
			const string __id = "udp_endpoint_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_endpoint_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_endpoint_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.udp_endpoint']]"
		[Register ("udp_endpoint_vector_set", "(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;IJLcom/frostwire/jlibtorrent/swig/udp_endpoint;)V", "")]
		public static unsafe void Udp_endpoint_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Udp_endpoint_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Udp_endpoint p4)
		{
			const string __id = "udp_endpoint_vector_set.(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;IJLcom/frostwire/jlibtorrent/swig/udp_endpoint;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_endpoint_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_endpoint_vector']]"
		[Register ("udp_endpoint_vector_size", "(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;)J", "")]
		public static unsafe long Udp_endpoint_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Udp_endpoint_vector p1)
		{
			const string __id = "udp_endpoint_vector_size.(JLcom/frostwire/jlibtorrent/swig/udp_endpoint_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_error_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("udp_error_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Udp_error_alert_SWIGUpcast (long p0)
		{
			const string __id = "udp_error_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_error_alert_alert_type_get' and count(parameter)=0]"
		[Register ("udp_error_alert_alert_type_get", "()I", "")]
		public static unsafe int Udp_error_alert_alert_type_get ()
		{
			const string __id = "udp_error_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_error_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_error_alert']]"
		[Register ("udp_error_alert_category", "(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;)J", "")]
		public static unsafe long Udp_error_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Udp_error_alert p1)
		{
			const string __id = "udp_error_alert_category.(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_error_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_error_alert']]"
		[Register ("udp_error_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;)J", "")]
		public static unsafe long Udp_error_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Udp_error_alert p1)
		{
			const string __id = "udp_error_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_error_alert_get_endpoint' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_error_alert']]"
		[Register ("udp_error_alert_get_endpoint", "(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;)J", "")]
		public static unsafe long Udp_error_alert_get_endpoint (long p0, global::FrostWire.Libtorrent.Swig.Udp_error_alert p1)
		{
			const string __id = "udp_error_alert_get_endpoint.(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_error_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_error_alert']]"
		[Register ("udp_error_alert_message", "(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Udp_error_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Udp_error_alert p1)
		{
			const string __id = "udp_error_alert_message.(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_error_alert_operation_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_error_alert']]"
		[Register ("udp_error_alert_operation_get", "(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;)I", "")]
		public static unsafe int Udp_error_alert_operation_get (long p0, global::FrostWire.Libtorrent.Swig.Udp_error_alert p1)
		{
			const string __id = "udp_error_alert_operation_get.(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_error_alert_operation_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_error_alert'] and parameter[3][@type='int']]"
		[Register ("udp_error_alert_operation_set", "(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;I)V", "")]
		public static unsafe void Udp_error_alert_operation_set (long p0, global::FrostWire.Libtorrent.Swig.Udp_error_alert p1, int p2)
		{
			const string __id = "udp_error_alert_operation_set.(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_error_alert_priority_get' and count(parameter)=0]"
		[Register ("udp_error_alert_priority_get", "()I", "")]
		public static unsafe int Udp_error_alert_priority_get ()
		{
			const string __id = "udp_error_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_error_alert_static_category_get' and count(parameter)=0]"
		[Register ("udp_error_alert_static_category_get", "()J", "")]
		public static unsafe long Udp_error_alert_static_category_get ()
		{
			const string __id = "udp_error_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_error_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_error_alert']]"
		[Register ("udp_error_alert_type", "(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;)I", "")]
		public static unsafe int Udp_error_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Udp_error_alert p1)
		{
			const string __id = "udp_error_alert_type.(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='udp_error_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.udp_error_alert']]"
		[Register ("udp_error_alert_what", "(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;)Ljava/lang/String;", "")]
		public static unsafe string Udp_error_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Udp_error_alert p1)
		{
			const string __id = "udp_error_alert_what.(JLcom/frostwire/jlibtorrent/swig/udp_error_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='unauthorized_get' and count(parameter)=0]"
		[Register ("unauthorized_get", "()I", "")]
		public static unsafe int Unauthorized_get ()
		{
			const string __id = "unauthorized_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='unwanted_block_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("unwanted_block_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Unwanted_block_alert_SWIGUpcast (long p0)
		{
			const string __id = "unwanted_block_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='unwanted_block_alert_alert_type_get' and count(parameter)=0]"
		[Register ("unwanted_block_alert_alert_type_get", "()I", "")]
		public static unsafe int Unwanted_block_alert_alert_type_get ()
		{
			const string __id = "unwanted_block_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='unwanted_block_alert_block_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.unwanted_block_alert']]"
		[Register ("unwanted_block_alert_block_index_get", "(JLcom/frostwire/jlibtorrent/swig/unwanted_block_alert;)I", "")]
		public static unsafe int Unwanted_block_alert_block_index_get (long p0, global::FrostWire.Libtorrent.Swig.Unwanted_block_alert p1)
		{
			const string __id = "unwanted_block_alert_block_index_get.(JLcom/frostwire/jlibtorrent/swig/unwanted_block_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='unwanted_block_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.unwanted_block_alert']]"
		[Register ("unwanted_block_alert_category", "(JLcom/frostwire/jlibtorrent/swig/unwanted_block_alert;)J", "")]
		public static unsafe long Unwanted_block_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Unwanted_block_alert p1)
		{
			const string __id = "unwanted_block_alert_category.(JLcom/frostwire/jlibtorrent/swig/unwanted_block_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='unwanted_block_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.unwanted_block_alert']]"
		[Register ("unwanted_block_alert_message", "(JLcom/frostwire/jlibtorrent/swig/unwanted_block_alert;)Ljava/lang/String;", "")]
		public static unsafe string Unwanted_block_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Unwanted_block_alert p1)
		{
			const string __id = "unwanted_block_alert_message.(JLcom/frostwire/jlibtorrent/swig/unwanted_block_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='unwanted_block_alert_piece_index_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.unwanted_block_alert']]"
		[Register ("unwanted_block_alert_piece_index_get", "(JLcom/frostwire/jlibtorrent/swig/unwanted_block_alert;)I", "")]
		public static unsafe int Unwanted_block_alert_piece_index_get (long p0, global::FrostWire.Libtorrent.Swig.Unwanted_block_alert p1)
		{
			const string __id = "unwanted_block_alert_piece_index_get.(JLcom/frostwire/jlibtorrent/swig/unwanted_block_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='unwanted_block_alert_priority_get' and count(parameter)=0]"
		[Register ("unwanted_block_alert_priority_get", "()I", "")]
		public static unsafe int Unwanted_block_alert_priority_get ()
		{
			const string __id = "unwanted_block_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='unwanted_block_alert_static_category_get' and count(parameter)=0]"
		[Register ("unwanted_block_alert_static_category_get", "()J", "")]
		public static unsafe long Unwanted_block_alert_static_category_get ()
		{
			const string __id = "unwanted_block_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='unwanted_block_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.unwanted_block_alert']]"
		[Register ("unwanted_block_alert_type", "(JLcom/frostwire/jlibtorrent/swig/unwanted_block_alert;)I", "")]
		public static unsafe int Unwanted_block_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Unwanted_block_alert p1)
		{
			const string __id = "unwanted_block_alert_type.(JLcom/frostwire/jlibtorrent/swig/unwanted_block_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='unwanted_block_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.unwanted_block_alert']]"
		[Register ("unwanted_block_alert_what", "(JLcom/frostwire/jlibtorrent/swig/unwanted_block_alert;)Ljava/lang/String;", "")]
		public static unsafe string Unwanted_block_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Unwanted_block_alert p1)
		{
			const string __id = "unwanted_block_alert_what.(JLcom/frostwire/jlibtorrent/swig/unwanted_block_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='update_subscribe_get' and count(parameter)=0]"
		[Register ("update_subscribe_get", "()J", "")]
		public static unsafe long Update_subscribe_get ()
		{
			const string __id = "update_subscribe_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='upload_mode_get' and count(parameter)=0]"
		[Register ("upload_mode_get", "()J", "")]
		public static unsafe long Upload_mode_get ()
		{
			const string __id = "upload_mode_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='url_seed_alert_SWIGUpcast' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("url_seed_alert_SWIGUpcast", "(J)J", "")]
		public static unsafe long Url_seed_alert_SWIGUpcast (long p0)
		{
			const string __id = "url_seed_alert_SWIGUpcast.(J)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='url_seed_alert_alert_type_get' and count(parameter)=0]"
		[Register ("url_seed_alert_alert_type_get", "()I", "")]
		public static unsafe int Url_seed_alert_alert_type_get ()
		{
			const string __id = "url_seed_alert_alert_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='url_seed_alert_category' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.url_seed_alert']]"
		[Register ("url_seed_alert_category", "(JLcom/frostwire/jlibtorrent/swig/url_seed_alert;)J", "")]
		public static unsafe long Url_seed_alert_category (long p0, global::FrostWire.Libtorrent.Swig.Url_seed_alert p1)
		{
			const string __id = "url_seed_alert_category.(JLcom/frostwire/jlibtorrent/swig/url_seed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='url_seed_alert_error_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.url_seed_alert']]"
		[Register ("url_seed_alert_error_get", "(JLcom/frostwire/jlibtorrent/swig/url_seed_alert;)J", "")]
		public static unsafe long Url_seed_alert_error_get (long p0, global::FrostWire.Libtorrent.Swig.Url_seed_alert p1)
		{
			const string __id = "url_seed_alert_error_get.(JLcom/frostwire/jlibtorrent/swig/url_seed_alert;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='url_seed_alert_error_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.url_seed_alert']]"
		[Register ("url_seed_alert_error_message", "(JLcom/frostwire/jlibtorrent/swig/url_seed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Url_seed_alert_error_message (long p0, global::FrostWire.Libtorrent.Swig.Url_seed_alert p1)
		{
			const string __id = "url_seed_alert_error_message.(JLcom/frostwire/jlibtorrent/swig/url_seed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='url_seed_alert_message' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.url_seed_alert']]"
		[Register ("url_seed_alert_message", "(JLcom/frostwire/jlibtorrent/swig/url_seed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Url_seed_alert_message (long p0, global::FrostWire.Libtorrent.Swig.Url_seed_alert p1)
		{
			const string __id = "url_seed_alert_message.(JLcom/frostwire/jlibtorrent/swig/url_seed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='url_seed_alert_priority_get' and count(parameter)=0]"
		[Register ("url_seed_alert_priority_get", "()I", "")]
		public static unsafe int Url_seed_alert_priority_get ()
		{
			const string __id = "url_seed_alert_priority_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='url_seed_alert_server_url' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.url_seed_alert']]"
		[Register ("url_seed_alert_server_url", "(JLcom/frostwire/jlibtorrent/swig/url_seed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Url_seed_alert_server_url (long p0, global::FrostWire.Libtorrent.Swig.Url_seed_alert p1)
		{
			const string __id = "url_seed_alert_server_url.(JLcom/frostwire/jlibtorrent/swig/url_seed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='url_seed_alert_static_category_get' and count(parameter)=0]"
		[Register ("url_seed_alert_static_category_get", "()J", "")]
		public static unsafe long Url_seed_alert_static_category_get ()
		{
			const string __id = "url_seed_alert_static_category_get.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='url_seed_alert_type' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.url_seed_alert']]"
		[Register ("url_seed_alert_type", "(JLcom/frostwire/jlibtorrent/swig/url_seed_alert;)I", "")]
		public static unsafe int Url_seed_alert_type (long p0, global::FrostWire.Libtorrent.Swig.Url_seed_alert p1)
		{
			const string __id = "url_seed_alert_type.(JLcom/frostwire/jlibtorrent/swig/url_seed_alert;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='url_seed_alert_what' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.url_seed_alert']]"
		[Register ("url_seed_alert_what", "(JLcom/frostwire/jlibtorrent/swig/url_seed_alert;)Ljava/lang/String;", "")]
		public static unsafe string Url_seed_alert_what (long p0, global::FrostWire.Libtorrent.Swig.Url_seed_alert p1)
		{
			const string __id = "url_seed_alert_what.(JLcom/frostwire/jlibtorrent/swig/url_seed_alert;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='value_too_large_get' and count(parameter)=0]"
		[Register ("value_too_large_get", "()I", "")]
		public static unsafe int Value_too_large_get ()
		{
			const string __id = "value_too_large_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='version' and count(parameter)=0]"
		[Register ("version", "()Ljava/lang/String;", "")]
		public static unsafe string Version ()
		{
			const string __id = "version.()Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_auth_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry']]"
		[Register ("web_seed_entry_auth_get", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;)Ljava/lang/String;", "")]
		public static unsafe string Web_seed_entry_auth_get (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry p1)
		{
			const string __id = "web_seed_entry_auth_get.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_auth_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry'] and parameter[3][@type='java.lang.String']]"
		[Register ("web_seed_entry_auth_set", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;Ljava/lang/String;)V", "")]
		public static unsafe void Web_seed_entry_auth_set (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry p1, string p2)
		{
			const string __id = "web_seed_entry_auth_set.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_extra_headers_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry']]"
		[Register ("web_seed_entry_extra_headers_get", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;)J", "")]
		public static unsafe long Web_seed_entry_extra_headers_get (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry p1)
		{
			const string __id = "web_seed_entry_extra_headers_get.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_extra_headers_set' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.string_string_pair_vector']]"
		[Register ("web_seed_entry_extra_headers_set", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)V", "")]
		public static unsafe void Web_seed_entry_extra_headers_set (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry p1, long p2, global::FrostWire.Libtorrent.Swig.String_string_pair_vector p3)
		{
			const string __id = "web_seed_entry_extra_headers_set.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;JLcom/frostwire/jlibtorrent/swig/string_string_pair_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_op_eq' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.web_seed_entry']]"
		[Register ("web_seed_entry_op_eq", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;JLcom/frostwire/jlibtorrent/swig/web_seed_entry;)Z", "")]
		public static unsafe bool Web_seed_entry_op_eq (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry p1, long p2, global::FrostWire.Libtorrent.Swig.Web_seed_entry p3)
		{
			const string __id = "web_seed_entry_op_eq.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;JLcom/frostwire/jlibtorrent/swig/web_seed_entry;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_op_lt' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.web_seed_entry']]"
		[Register ("web_seed_entry_op_lt", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;JLcom/frostwire/jlibtorrent/swig/web_seed_entry;)Z", "")]
		public static unsafe bool Web_seed_entry_op_lt (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry p1, long p2, global::FrostWire.Libtorrent.Swig.Web_seed_entry p3)
		{
			const string __id = "web_seed_entry_op_lt.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;JLcom/frostwire/jlibtorrent/swig/web_seed_entry;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_type_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry']]"
		[Register ("web_seed_entry_type_get", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;)S", "")]
		public static unsafe short Web_seed_entry_type_get (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry p1)
		{
			const string __id = "web_seed_entry_type_get.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;)S";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt16Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_type_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry'] and parameter[3][@type='short']]"
		[Register ("web_seed_entry_type_set", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;S)V", "")]
		public static unsafe void Web_seed_entry_type_set (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry p1, short p2)
		{
			const string __id = "web_seed_entry_type_set.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;S)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_url_get' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry']]"
		[Register ("web_seed_entry_url_get", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;)Ljava/lang/String;", "")]
		public static unsafe string Web_seed_entry_url_get (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry p1)
		{
			const string __id = "web_seed_entry_url_get.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_url_set' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry'] and parameter[3][@type='java.lang.String']]"
		[Register ("web_seed_entry_url_set", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;Ljava/lang/String;)V", "")]
		public static unsafe void Web_seed_entry_url_set (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry p1, string p2)
		{
			const string __id = "web_seed_entry_url_set.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry;Ljava/lang/String;)V";
			IntPtr native_p2 = JNIEnv.NewString (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_vector_capacity' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry_vector']]"
		[Register ("web_seed_entry_vector_capacity", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;)J", "")]
		public static unsafe long Web_seed_entry_vector_capacity (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry_vector p1)
		{
			const string __id = "web_seed_entry_vector_capacity.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_vector_clear' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry_vector']]"
		[Register ("web_seed_entry_vector_clear", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;)V", "")]
		public static unsafe void Web_seed_entry_vector_clear (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry_vector p1)
		{
			const string __id = "web_seed_entry_vector_clear.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_vector_empty' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry_vector']]"
		[Register ("web_seed_entry_vector_empty", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;)Z", "")]
		public static unsafe bool Web_seed_entry_vector_empty (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry_vector p1)
		{
			const string __id = "web_seed_entry_vector_empty.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_vector_get' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry_vector'] and parameter[3][@type='int']]"
		[Register ("web_seed_entry_vector_get", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;I)J", "")]
		public static unsafe long Web_seed_entry_vector_get (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry_vector p1, int p2)
		{
			const string __id = "web_seed_entry_vector_get.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;I)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_vector_push_back' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry_vector'] and parameter[3][@type='long'] and parameter[4][@type='com.frostwire.jlibtorrent.swig.web_seed_entry']]"
		[Register ("web_seed_entry_vector_push_back", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;JLcom/frostwire/jlibtorrent/swig/web_seed_entry;)V", "")]
		public static unsafe void Web_seed_entry_vector_push_back (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry_vector p1, long p2, global::FrostWire.Libtorrent.Swig.Web_seed_entry p3)
		{
			const string __id = "web_seed_entry_vector_push_back.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;JLcom/frostwire/jlibtorrent/swig/web_seed_entry;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_vector_reserve' and count(parameter)=3 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry_vector'] and parameter[3][@type='long']]"
		[Register ("web_seed_entry_vector_reserve", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;J)V", "")]
		public static unsafe void Web_seed_entry_vector_reserve (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry_vector p1, long p2)
		{
			const string __id = "web_seed_entry_vector_reserve.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;J)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_vector_set' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry_vector'] and parameter[3][@type='int'] and parameter[4][@type='long'] and parameter[5][@type='com.frostwire.jlibtorrent.swig.web_seed_entry']]"
		[Register ("web_seed_entry_vector_set", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;IJLcom/frostwire/jlibtorrent/swig/web_seed_entry;)V", "")]
		public static unsafe void Web_seed_entry_vector_set (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry_vector p1, int p2, long p3, global::FrostWire.Libtorrent.Swig.Web_seed_entry p4)
		{
			const string __id = "web_seed_entry_vector_set.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;IJLcom/frostwire/jlibtorrent/swig/web_seed_entry;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue ((p4 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p4).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='web_seed_entry_vector_size' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='com.frostwire.jlibtorrent.swig.web_seed_entry_vector']]"
		[Register ("web_seed_entry_vector_size", "(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;)J", "")]
		public static unsafe long Web_seed_entry_vector_size (long p0, global::FrostWire.Libtorrent.Swig.Web_seed_entry_vector p1)
		{
			const string __id = "web_seed_entry_vector_size.(JLcom/frostwire/jlibtorrent/swig/web_seed_entry_vector;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.frostwire.jlibtorrent.swig']/class[@name='libtorrent_jni']/method[@name='wrong_protocol_type_get' and count(parameter)=0]"
		[Register ("wrong_protocol_type_get", "()I", "")]
		public static unsafe int Wrong_protocol_type_get ()
		{
			const string __id = "wrong_protocol_type_get.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

	}
}
